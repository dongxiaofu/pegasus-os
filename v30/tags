!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	keymap.h	25;"	d
ALT_L	keymap.h	44;"	d
ALT_R	keymap.h	45;"	d
APPS	keymap.h	86;"	d
ASSERT	experiment/c/assert-demo.c	3;"	d	file:
A_STACK_SIZE	main.c	269;"	d	file:
B	keymap.h	39;"	d
BACKSPACE	keymap.h	9;"	d
BMLen	test/boot.asm	/^BMLen	equ	$ - BootMessage$/;"	d
BPB_BytsPerSec	boot.asm	/^	BPB_BytsPerSec	DW 512		; 每扇区字节数$/;"	d
BPB_BytsPerSec	loader-error.asm	/^	BPB_BytsPerSec	DW 512		; 每扇区字节数$/;"	d
BPB_BytsPerSec	loader.asm	/^	BPB_BytsPerSec	DW 512		; 每扇区字节数$/;"	d
BPB_BytsPerSec	pmtest2.asm	/^	BPB_BytsPerSec	DW 512		; 每扇区字节数$/;"	d
BPB_FATSz16	boot.asm	/^	BPB_FATSz16	DW 9		; 每FAT扇区数$/;"	d
BPB_FATSz16	loader-error.asm	/^	BPB_FATSz16	DW 9		; 每FAT扇区数$/;"	d
BPB_FATSz16	loader.asm	/^	BPB_FATSz16	DW 9		; 每FAT扇区数$/;"	d
BPB_FATSz16	pmtest2.asm	/^	BPB_FATSz16	DW 9		; 每FAT扇区数$/;"	d
BPB_HiddSec	boot.asm	/^	BPB_HiddSec	DD 0		; 隐藏扇区数$/;"	d
BPB_HiddSec	loader-error.asm	/^	BPB_HiddSec	DD 0		; 隐藏扇区数$/;"	d
BPB_HiddSec	loader.asm	/^	BPB_HiddSec	DD 0		; 隐藏扇区数$/;"	d
BPB_HiddSec	pmtest2.asm	/^	BPB_HiddSec	DD 0		; 隐藏扇区数$/;"	d
BPB_Media	boot.asm	/^	BPB_Media	DB 0xF0		; 媒体描述符$/;"	d
BPB_Media	loader-error.asm	/^	BPB_Media	DB 0xF0		; 媒体描述符$/;"	d
BPB_Media	loader.asm	/^	BPB_Media	DB 0xF0		; 媒体描述符$/;"	d
BPB_Media	pmtest2.asm	/^	BPB_Media	DB 0xF0		; 媒体描述符$/;"	d
BPB_NumFATs	boot.asm	/^	BPB_NumFATs	DB 2		; 共有多少 FAT 表$/;"	d
BPB_NumFATs	loader-error.asm	/^	BPB_NumFATs	DB 2		; 共有多少 FAT 表$/;"	d
BPB_NumFATs	loader.asm	/^	BPB_NumFATs	DB 2		; 共有多少 FAT 表$/;"	d
BPB_NumFATs	pmtest2.asm	/^	BPB_NumFATs	DB 2		; 共有多少 FAT 表$/;"	d
BPB_NumHeads	boot.asm	/^	BPB_NumHeads	DW 2		; 磁头数(面数)$/;"	d
BPB_NumHeads	loader-error.asm	/^	BPB_NumHeads	DW 2		; 磁头数(面数)$/;"	d
BPB_NumHeads	loader.asm	/^	BPB_NumHeads	DW 2		; 磁头数(面数)$/;"	d
BPB_NumHeads	pmtest2.asm	/^	BPB_NumHeads	DW 2		; 磁头数(面数)$/;"	d
BPB_RootEntCnt	boot.asm	/^	BPB_RootEntCnt	DW 224		; 根目录文件数最大值$/;"	d
BPB_RootEntCnt	loader-error.asm	/^	BPB_RootEntCnt	DW 224		; 根目录文件数最大值$/;"	d
BPB_RootEntCnt	loader.asm	/^	BPB_RootEntCnt	DW 224		; 根目录文件数最大值$/;"	d
BPB_RootEntCnt	pmtest2.asm	/^	BPB_RootEntCnt	DW 224		; 根目录文件数最大值$/;"	d
BPB_RsvdSecCnt	boot.asm	/^	BPB_RsvdSecCnt	DW 1		; Boot 记录占用多少扇区$/;"	d
BPB_RsvdSecCnt	loader-error.asm	/^	BPB_RsvdSecCnt	DW 1		; Boot 记录占用多少扇区$/;"	d
BPB_RsvdSecCnt	loader.asm	/^	BPB_RsvdSecCnt	DW 1		; Boot 记录占用多少扇区$/;"	d
BPB_RsvdSecCnt	pmtest2.asm	/^	BPB_RsvdSecCnt	DW 1		; Boot 记录占用多少扇区$/;"	d
BPB_SecPerClus	boot.asm	/^	BPB_SecPerClus	DB 1		; 每簇多少扇区$/;"	d
BPB_SecPerClus	loader-error.asm	/^	BPB_SecPerClus	DB 1		; 每簇多少扇区$/;"	d
BPB_SecPerClus	loader.asm	/^	BPB_SecPerClus	DB 1		; 每簇多少扇区$/;"	d
BPB_SecPerClus	pmtest2.asm	/^	BPB_SecPerClus	DB 1		; 每簇多少扇区$/;"	d
BPB_SecPerTrk	boot.asm	/^	BPB_SecPerTrk	DW 18		; 每磁道扇区数$/;"	d
BPB_SecPerTrk	loader-error.asm	/^	BPB_SecPerTrk	DW 18		; 每磁道扇区数$/;"	d
BPB_SecPerTrk	loader.asm	/^	BPB_SecPerTrk	DW 18		; 每磁道扇区数$/;"	d
BPB_SecPerTrk	pmtest2.asm	/^	BPB_SecPerTrk	DW 18		; 每磁道扇区数$/;"	d
BPB_TotSec16	boot.asm	/^	BPB_TotSec16	DW 2880		; 逻辑扇区总数$/;"	d
BPB_TotSec16	loader-error.asm	/^	BPB_TotSec16	DW 2880		; 逻辑扇区总数$/;"	d
BPB_TotSec16	loader.asm	/^	BPB_TotSec16	DW 2880		; 逻辑扇区总数$/;"	d
BPB_TotSec16	pmtest2.asm	/^	BPB_TotSec16	DW 2880		; 逻辑扇区总数$/;"	d
BPB_TotSec32	boot.asm	/^	BPB_TotSec32	DD 0		; wTotalSectorCount为0时这个值记录扇区数$/;"	d
BPB_TotSec32	loader-error.asm	/^	BPB_TotSec32	DD 0		; wTotalSectorCount为0时这个值记录扇区数$/;"	d
BPB_TotSec32	loader.asm	/^	BPB_TotSec32	DD 0		; wTotalSectorCount为0时这个值记录扇区数$/;"	d
BPB_TotSec32	pmtest2.asm	/^	BPB_TotSec32	DD 0		; wTotalSectorCount为0时这个值记录扇区数$/;"	d
BS_BootSig	boot.asm	/^	BS_BootSig	DB 29h		; 扩展引导标记 (29h)$/;"	d
BS_BootSig	loader-error.asm	/^	BS_BootSig	DB 29h		; 扩展引导标记 (29h)$/;"	d
BS_BootSig	loader.asm	/^	BS_BootSig	DB 29h		; 扩展引导标记 (29h)$/;"	d
BS_BootSig	pmtest2.asm	/^	BS_BootSig	DB 29h		; 扩展引导标记 (29h)$/;"	d
BS_DrvNum	boot.asm	/^	BS_DrvNum	DB 0		; 中断 13 的驱动器号$/;"	d
BS_DrvNum	loader-error.asm	/^	BS_DrvNum	DB 0		; 中断 13 的驱动器号$/;"	d
BS_DrvNum	loader.asm	/^	BS_DrvNum	DB 0		; 中断 13 的驱动器号$/;"	d
BS_DrvNum	pmtest2.asm	/^	BS_DrvNum	DB 0		; 中断 13 的驱动器号$/;"	d
BS_FileSysType	boot.asm	/^	BS_FileSysType	DB 'FAT12   '	; 文件系统类型, 必须 8个字节$/;"	d
BS_FileSysType	loader-error.asm	/^	BS_FileSysType	DB 'FAT12   '	; 文件系统类型, 必须 8个字节$/;"	d
BS_FileSysType	loader.asm	/^	BS_FileSysType	DB 'FAT12   '	; 文件系统类型, 必须 8个字节$/;"	d
BS_FileSysType	pmtest2.asm	/^	BS_FileSysType	DB 'FAT12   '	; 文件系统类型, 必须 8个字节$/;"	d
BS_OEMName	boot.asm	/^	BS_OEMName	DB 'ForrestY'	; OEM String, 必须 8 个字节$/;"	d
BS_OEMName	loader-error.asm	/^	BS_OEMName	DB 'ForrestY'	; OEM String, 必须 8 个字节$/;"	d
BS_OEMName	loader.asm	/^	BS_OEMName	DB 'ForrestY'	; OEM String, 必须 8 个字节$/;"	d
BS_OEMName	pmtest2.asm	/^	BS_OEMName	DB 'ForrestY'	; OEM String, 必须 8 个字节$/;"	d
BS_Reserved1	boot.asm	/^	BS_Reserved1	DB 0		; 未使用$/;"	d
BS_Reserved1	loader-error.asm	/^	BS_Reserved1	DB 0		; 未使用$/;"	d
BS_Reserved1	loader.asm	/^	BS_Reserved1	DB 0		; 未使用$/;"	d
BS_Reserved1	pmtest2.asm	/^	BS_Reserved1	DB 0		; 未使用$/;"	d
BS_VolID	boot.asm	/^	BS_VolID	DD 0		; 卷序列号$/;"	d
BS_VolID	loader-error.asm	/^	BS_VolID	DD 0		; 卷序列号$/;"	d
BS_VolID	loader.asm	/^	BS_VolID	DD 0		; 卷序列号$/;"	d
BS_VolID	pmtest2.asm	/^	BS_VolID	DD 0		; 卷序列号$/;"	d
BS_VolLab	boot.asm	/^	BS_VolLab	DB 'OrangeS0.02'; 卷标, 必须 11 个字节$/;"	d
BS_VolLab	loader-error.asm	/^	BS_VolLab	DB 'OrangeS0.02'; 卷标, 必须 11 个字节$/;"	d
BS_VolLab	loader.asm	/^	BS_VolLab	DB 'OrangeS0.02'; 卷标, 必须 11 个字节$/;"	d
BS_VolLab	pmtest2.asm	/^	BS_VolLab	DB 'OrangeS0.02'; 卷标, 必须 11 个字节$/;"	d
B_STACK_SIZE	main.c	270;"	d	file:
BaseOfFATEntry	boot.asm	/^BaseOfFATEntry	equ	0x1000$/;"	d
BaseOfFATEntry	loader-error.asm	/^BaseOfFATEntry	equ	0x1000$/;"	d
BaseOfFATEntry	loader.asm	/^BaseOfFATEntry	equ	0x1000$/;"	d
BaseOfKernel	loader-error.asm	/^BaseOfKernel	equ	0x800$/;"	d
BaseOfKernel	loader.asm	/^BaseOfKernel	equ	0x9000$/;"	d
BaseOfKernel2	loader.asm	/^BaseOfKernel2	equ	0x6000$/;"	d
BaseOfKernel3	loader.asm	/^BaseOfKernel3	equ	0x0$/;"	d
BaseOfKernelPhyAddr	loader.asm	/^BaseOfKernelPhyAddr	equ	BaseOfKernel * 10h  ; Kernel.BIN 被加载到的位置 ---- 物理地址 中的段基址部分$/;"	d
BaseOfLoader	boot.asm	/^BaseOfLoader	equ	0x2000$/;"	d
BaseOfLoader	loader.asm	/^BaseOfLoader    equ     0x2000$/;"	d
BaseOfLoaderPhyAddr	loader.asm	/^BaseOfLoaderPhyAddr	equ	BaseOfLoader * 10h	; LOADER.BIN 被加载到的位置 ---- 物理地址 (= BaseOfLoader * 10h)$/;"	d
Begin	loader-error.asm	/^Begin:$/;"	l
BootMessage	boot.asm	/^BootMessage:	db	"Hello,World OS!"$/;"	d
BootMessage	experiment/boot.asm	/^BootMessage:	db	"Hello,OS world"$/;"	d
BootMessage	loader-error.asm	/^BootMessage:	db	"Hello,World OS!"$/;"	d
BootMessage	loader.asm	/^BootMessage:	db	"Hello,World OS!"$/;"	d
BootMessage	test/boot.asm	/^BootMessage:	db	"Hello,World"$/;"	d
BootMessage	test/experiment/boot.asm	/^BootMessage:	db	"Hello,OS world"$/;"	d
BootMessageLength	boot.asm	/^BootMessageLength	equ	$ - BootMessage$/;"	d
BootMessageLength	loader-error.asm	/^BootMessageLength	equ	$ - BootMessage$/;"	d
BootMessageLength	loader.asm	/^BootMessageLength	equ	$ - BootMessage$/;"	d
BytesOfSector	boot.asm	/^BytesOfSector	equ	512	; 每个扇区包含的字节数量$/;"	d
BytesOfSector	loader-error.asm	/^BytesOfSector	equ	512	; 每个扇区包含的字节数量$/;"	d
BytesOfSector	loader.asm	/^BytesOfSector	equ	512	; 每个扇区包含的字节数量$/;"	d
C	keymap.h	37;"	d
CAPS_LOCK	keymap.h	46;"	d
COMPARE_FILENAME	boot.asm	/^COMPARE_FILENAME:$/;"	l
COMPARE_FILENAME	loader-error.asm	/^COMPARE_FILENAME:$/;"	l
COMPARE_FILENAME	loader.asm	/^COMPARE_FILENAME:$/;"	l
CONSOLE	main.c	/^}CONSOLE;$/;"	t	typeref:struct:__anon1	file:
CS_SELECTOR	main.c	134;"	d	file:
CS_SELECTOR_INDEX	main.c	125;"	d	file:
CTRL_L	keymap.h	23;"	d
CTRL_R	keymap.h	24;"	d
C_STACK_SIZE	main.c	271;"	d	file:
Code16Len	pmtest2.asm	/^Code16Len	equ	$ - LABEL_SEG_CODE16$/;"	d
D	keymap.h	27;"	d
DEFAULT_COLOUR	main.c	17;"	d	file:
DEFAULT_STACK_SIZE	main.c	266;"	d	file:
DELETE	keymap.h	81;"	d
DOWN	keymap.h	75;"	d
DS_SELECTOR	main.c	135;"	d	file:
DS_SELECTOR_INDEX	main.c	126;"	d	file:
DataLen	pmtest2.asm	/^DataLen			equ	$ - LABEL_DATA$/;"	d
Descriptor	main.c	/^}Descriptor;$/;"	t	typeref:struct:__anon3	file:
DispAL	pmtest2.asm	/^DispAL:$/;"	l
DispReturn	pmtest2.asm	/^DispReturn:$/;"	l
DispStr	experiment/boot.asm	/^DispStr:$/;"	l
DispStr	test/experiment/boot.asm	/^DispStr:$/;"	l
E	keymap.h	13;"	d
END	keymap.h	73;"	d
ENTER	keymap.h	21;"	d
ESC	keymap.h	8;"	d
F	keymap.h	28;"	d
F1	keymap.h	47;"	d
F10	keymap.h	56;"	d
F11	keymap.h	82;"	d
F12	keymap.h	83;"	d
F2	keymap.h	48;"	d
F3	keymap.h	49;"	d
F4	keymap.h	50;"	d
F5	keymap.h	51;"	d
F6	keymap.h	52;"	d
F7	keymap.h	53;"	d
F8	keymap.h	54;"	d
F9	keymap.h	55;"	d
FATEntryIsInt	boot.asm	/^FATEntryIsInt	equ 0		; FAT项的字节偏移量是不是整数个字节：0，不是；1，是。$/;"	d
FATEntryIsInt	loader-error.asm	/^FATEntryIsInt	equ 0		; FAT项的字节偏移量是不是整数个字节：0，不是；1，是。$/;"	d
FATEntryIsInt	loader.asm	/^FATEntryIsInt	equ 0		; FAT项的字节偏移量是不是整数个字节：0，不是；1，是。$/;"	d
FATEntry_Is_Int	boot.asm	/^FATEntry_Is_Int:$/;"	l
FATEntry_Is_Int	loader-error.asm	/^FATEntry_Is_Int:$/;"	l
FATEntry_Is_Int	loader.asm	/^FATEntry_Is_Int:$/;"	l
FILENAME_DIFFIERENT	boot.asm	/^FILENAME_DIFFIERENT:$/;"	l
FILENAME_DIFFIERENT	loader-error.asm	/^FILENAME_DIFFIERENT:$/;"	l
FILENAME_DIFFIERENT	loader.asm	/^FILENAME_DIFFIERENT:$/;"	l
FILE_FOUND	boot.asm	/^FILE_FOUND:$/;"	l
FILE_FOUND	loader-error.asm	/^FILE_FOUND:$/;"	l
FILE_FOUND	loader.asm	/^FILE_FOUND:$/;"	l
FILE_NOT_FOUND	boot.asm	/^FILE_NOT_FOUND:$/;"	l
FILE_NOT_FOUND	loader-error.asm	/^FILE_NOT_FOUND:$/;"	l
FILE_NOT_FOUND	loader.asm	/^FILE_NOT_FOUND:$/;"	l
FLAG_EXT	keymap.h	5;"	d
FirstSectorOfRootDirectory	boot.asm	/^FirstSectorOfRootDirectory	equ	19$/;"	d
FirstSectorOfRootDirectory	loader-error.asm	/^FirstSectorOfRootDirectory	equ	19$/;"	d
FirstSectorOfRootDirectory	loader.asm	/^FirstSectorOfRootDirectory	equ	19$/;"	d
Func	main.c	/^typedef void (*Func)();$/;"	t	file:
G	keymap.h	29;"	d
GO_BACK_REAL_MODEL	loader.asm	/^GO_BACK_REAL_MODEL:$/;"	l
GS_SELECTOR	main.c	137;"	d	file:
GS_SELECTOR_INDEX	main.c	127;"	d	file:
GUI_L	keymap.h	84;"	d
GUI_R	keymap.h	85;"	d
Gate	main.c	/^}Gate;$/;"	t	typeref:struct:__anon4	file:
GdtLen	loader.asm	/^	GdtLen	equ		$ - LABEL_GDT$/;"	d
GdtLen	pmtest2.asm	/^GdtLen		equ	$ - LABEL_GDT	; GDT长度$/;"	d
GdtPtr	loader.asm	/^	GdtPtr	dw	GdtLen - 1$/;"	d
GdtPtr	pmtest2.asm	/^GdtPtr		dw	GdtLen - 1	; GDT界限$/;"	d
GetFATEntry	boot.asm	/^GetFATEntry:$/;"	l
GetFATEntry	loader-error.asm	/^GetFATEntry:$/;"	l
GetFATEntry	loader.asm	/^GetFATEntry:$/;"	l
GreaterNumber	experiment/foo.asm	/^GreaterNumber	equ	51$/;"	d
H	keymap.h	30;"	d
HOME	keymap.h	60;"	d
I	keymap.h	18;"	d
INIT_MASTER_VEC_NO	main.c	/^const int INIT_MASTER_VEC_NO = 0x20;$/;"	v
INIT_SLAVE_VEC_NO	main.c	/^const int INIT_SLAVE_VEC_NO = 0x28;$/;"	v
INSERT	keymap.h	79;"	d
INT_VECTOR_TICKS	syscall.asm	/^INT_VECTOR_TICKS	equ	0x90$/;"	d
IN_REAL_MODEL	loader.asm	/^IN_REAL_MODEL:$/;"	l
Init8253	loader.asm	/^Init8253:$/;"	l
InitDescriptor	main.c	/^void InitDescriptor(Descriptor *desc, unsigned int base, unsigned int limit, unsigned short attribute)$/;"	f
InitInterruptDesc	main.c	/^void InitInterruptDesc(int vec_no, int_handle offset, int privilege, int type)$/;"	f
InitKernel	loader-error.asm	/^InitKernel:$/;"	l
InitKernel	loader.asm	/^InitKernel:$/;"	l
Init_8259A	loader.asm	/^Init_8259A:$/;"	l
InterruptTest	kernel.asm	/^InterruptTest:$/;"	l
J	keymap.h	31;"	d
K	keymap.h	32;"	d
KEYBOARD_BUF_SIZE	main.c	350;"	d	file:
KeyboardBuffer	main.c	/^}KeyboardBuffer;$/;"	t	typeref:struct:__anon9	file:
L	keymap.h	33;"	d
LABEL_BEGIN	pmtest2.asm	/^LABEL_BEGIN:$/;"	l
LABEL_DATA	pmtest2.asm	/^LABEL_DATA:$/;"	l
LABEL_DESC_CODE16	pmtest2.asm	/^LABEL_DESC_CODE16: Descriptor    0,         0ffffh, DA_C      ; 非一致代码段, 16$/;"	l
LABEL_DESC_CODE32	pmtest2.asm	/^LABEL_DESC_CODE32: Descriptor    0, SegCode32Len-1, DA_C+DA_32; 非一致代码段, 32$/;"	l
LABEL_DESC_DATA	pmtest2.asm	/^LABEL_DESC_DATA:   Descriptor    0,      DataLen-1, DA_DRW    ; Data$/;"	l
LABEL_DESC_NORMAL	pmtest2.asm	/^LABEL_DESC_NORMAL: Descriptor    0,         0ffffh, DA_DRW    ; Normal 描述符$/;"	l
LABEL_DESC_STACK	pmtest2.asm	/^LABEL_DESC_STACK:  Descriptor    0,     TopOfStack, DA_DRWA+DA_32; Stack, 32 位$/;"	l
LABEL_DESC_TEST	pmtest2.asm	/^LABEL_DESC_TEST:   Descriptor 0500000h,     0ffffh, DA_DRW$/;"	l
LABEL_DESC_VIDEO	pmtest2.asm	/^LABEL_DESC_VIDEO:  Descriptor  0B8000h,     0ffffh, DA_DRW    ; 显存首地址$/;"	l
LABEL_GDT	loader.asm	/^	LABEL_GDT:	Descriptor  0,	0,	0$/;"	l
LABEL_GDT	pmtest2.asm	/^LABEL_GDT:         Descriptor    0,              0, 0         ; 空描述符$/;"	l
LABEL_GO_BACK_TO_REAL	pmtest2.asm	/^LABEL_GO_BACK_TO_REAL:$/;"	l
LABEL_PM_START	bits-demo-16.asm	/^LABEL_PM_START:$/;"	l
LABEL_PM_START	bits-demo.asm	/^LABEL_PM_START:$/;"	l
LABEL_PM_START	loader.asm	/^LABEL_PM_START:$/;"	l
LABEL_REAL_ENTRY	pmtest2.asm	/^LABEL_REAL_ENTRY:$/;"	l
LABEL_SEG_16	loader.asm	/^LABEL_SEG_16:$/;"	l
LABEL_SEG_CODE16	pmtest2.asm	/^LABEL_SEG_CODE16:$/;"	l
LABEL_SEG_CODE32	pmtest2.asm	/^LABEL_SEG_CODE32:$/;"	l
LABEL_STACK	pmtest2.asm	/^LABEL_STACK:$/;"	l
LABEL_START	boot.asm	/^LABEL_START:$/;"	l
LABEL_START	loader-error.asm	/^LABEL_START:$/;"	l
LABEL_START	loader.asm	/^LABEL_START:$/;"	l
LABEL_START	test/boot.asm	/^LABEL_START:$/;"	l
LABLE_GDT_FLAT_X	loader.asm	/^	LABLE_GDT_FLAT_X: Descriptor	0,		0ffffffh,		 0c9ah$/;"	l
LABLE_GDT_FLAT_X_16	loader.asm	/^	LABLE_GDT_FLAT_X_16: Descriptor	0,		0ffffffh,		 98h$/;"	l
LABLE_GDT_FLAT_X_162	loader.asm	/^	LABLE_GDT_FLAT_X_162: Descriptor	0,		0ffffffh,		 98h$/;"	l
LABLE_GDT_VIDEO	loader.asm	/^	LABLE_GDT_VIDEO: Descriptor	0b8000h,		0ffffh,		 0f2h$/;"	l
LABLE_GDT_VIDEO	t2.asm	/^LABLE_GDT_VIDEO: Descriptor     0b8000h,                0ffffh,          0c9ah$/;"	l
LDT_FIRST_SELECTOR	main.c	139;"	d	file:
LDT_FIRST_SELECTOR_INDEX	main.c	130;"	d	file:
LEFT	keymap.h	67;"	d
Len	experiment/nasm_in_linux.asm	/^Len	equ	$ - Str$/;"	d
LoaderBinFileName	boot.asm	/^LoaderBinFileName:	db	"LOADER  BIN"$/;"	d
LoaderBinFileName	loader-error.asm	/^LoaderBinFileName:	db	"KERNEL  BIN"$/;"	d
LoaderBinFileName	loader.asm	/^LoaderBinFileName:	db	"KERNEL  BIN"$/;"	d
LoaderBinFileNameLength	boot.asm	/^LoaderBinFileNameLength	equ	$ - LoaderBinFileName	; 中间两个空格$/;"	d
LoaderBinFileNameLength	loader-error.asm	/^LoaderBinFileNameLength	equ	$ - LoaderBinFileName	; 中间两个空格$/;"	d
LoaderBinFileNameLength	loader.asm	/^LoaderBinFileNameLength	equ	$ - LoaderBinFileName	; 中间两个空格$/;"	d
M	keymap.h	41;"	d
MAP_COLS	keymap.h	2;"	d
Memcpy	loader-error.asm	/^Memcpy:$/;"	l
Memcpy	loader.asm	/^Memcpy:$/;"	l
Memcpy	string.asm	/^Memcpy:$/;"	l
Memset	string.asm	/^Memset:$/;"	l
N	keymap.h	40;"	d
NR_GET_TICKS	main.c	320;"	d	file:
NR_SCAN_CODES	keymap.h	1;"	d
NUM_LOCK	keymap.h	57;"	d
NoAction	loader-error.asm	/^NoAction:$/;"	l
O	keymap.h	19;"	d
OVER	boot.asm	/^OVER:$/;"	l
OVER	loader-error.asm	/^OVER:$/;"	l
OVER	loader.asm	/^OVER:$/;"	l
OVER	test/boot.asm	/^OVER:$/;"	l
OffSetOfLoader	boot.asm	/^OffSetOfLoader	equ	0x100$/;"	d
OffSetOfLoader	loader-error.asm	/^OffSetOfLoader	equ	0x0$/;"	d
OffSetOfLoader	loader.asm	/^OffSetOfLoader	equ	0x0$/;"	d
OffsetPMMessage	pmtest2.asm	/^OffsetPMMessage		equ	PMMessage - $\$$/;"	d
OffsetStrTest	pmtest2.asm	/^OffsetStrTest		equ	StrTest - $\$$/;"	d
P	keymap.h	20;"	d
PAD_DOT	keymap.h	80;"	d
PAD_DOWN	keymap.h	74;"	d
PAD_END	keymap.h	72;"	d
PAD_ENTER	keymap.h	22;"	d
PAD_HOME	keymap.h	59;"	d
PAD_INS	keymap.h	78;"	d
PAD_LEFT	keymap.h	66;"	d
PAD_MID	keymap.h	68;"	d
PAD_MINUS	keymap.h	65;"	d
PAD_PAGEDOWN	keymap.h	76;"	d
PAD_PAGEUP	keymap.h	63;"	d
PAD_PLUS	keymap.h	71;"	d
PAD_RIGHT	keymap.h	69;"	d
PAD_SLASH	keymap.h	42;"	d
PAD_UP	keymap.h	61;"	d
PAGEDOWN	keymap.h	77;"	d
PAGEUP	keymap.h	64;"	d
PAUSE	keymap.h	88;"	d
PMMessage	pmtest2.asm	/^PMMessage:		db	"3333In Protect Mode now. ^-^", 0	; 在保护模式中显示$/;"	d
PRINT_SCREEN	keymap.h	89;"	d
Printf	main.c	/^void Printf(char *fmt, ...)$/;"	f
Proc	main.c	/^}Proc;$/;"	t	typeref:struct:__anon7	file:
Q	keymap.h	11;"	d
R	keymap.h	14;"	d
READ_FILE	boot.asm	/^READ_FILE:$/;"	l
READ_FILE	loader-error.asm	/^READ_FILE:$/;"	l
READ_FILE	loader.asm	/^READ_FILE:$/;"	l
READ_FILE_OVER	boot.asm	/^READ_FILE_OVER:$/;"	l
READ_FILE_OVER	loader-error.asm	/^READ_FILE_OVER:$/;"	l
READ_FILE_OVER	loader.asm	/^READ_FILE_OVER:$/;"	l
RIGHT	keymap.h	70;"	d
ReadSector	boot.asm	/^ReadSector:$/;"	l
ReadSector	loader-error.asm	/^ReadSector:$/;"	l
ReadSector	loader.asm	/^ReadSector:$/;"	l
ReadSector2	boot.asm	/^ReadSector2:$/;"	l
ReadSector2	loader-error.asm	/^ReadSector2:$/;"	l
ReadSector2	loader.asm	/^ReadSector2:$/;"	l
Regs	main.c	/^}Regs;$/;"	t	typeref:struct:__anon6	file:
ReloadGDT	main.c	/^void ReloadGDT()$/;"	f
S	keymap.h	26;"	d
SCREEN_SIZE	main.c	9;"	d	file:
SCREEN_WIDTH	main.c	11;"	d	file:
SCROLL_LOCK	keymap.h	58;"	d
SEARCH_FILE_IN_ROOT_DIRECTORY	boot.asm	/^SEARCH_FILE_IN_ROOT_DIRECTORY:$/;"	l
SEARCH_FILE_IN_ROOT_DIRECTORY	loader-error.asm	/^SEARCH_FILE_IN_ROOT_DIRECTORY:$/;"	l
SEARCH_FILE_IN_ROOT_DIRECTORY	loader.asm	/^SEARCH_FILE_IN_ROOT_DIRECTORY:$/;"	l
SHIFT_L	keymap.h	34;"	d
SHIFT_L1	main.c	383;"	d	file:
SHIFT_R	keymap.h	43;"	d
SHIFT_R1	main.c	382;"	d	file:
SPValueInRealMode	pmtest2.asm	/^SPValueInRealMode	dw	0$/;"	d
STACK_SIZE	main.c	280;"	d	file:
SectorNumberOfFAT1	boot.asm	/^SectorNumberOfFAT1	equ	1$/;"	d
SectorNumberOfFAT1	loader-error.asm	/^SectorNumberOfFAT1	equ	1$/;"	d
SectorNumberOfFAT1	loader.asm	/^SectorNumberOfFAT1	equ	1$/;"	d
SectorNumberOfTrack	boot.asm	/^SectorNumberOfTrack	equ	18$/;"	d
SectorNumberOfTrack	loader-error.asm	/^SectorNumberOfTrack	equ	18$/;"	d
SectorNumberOfTrack	loader.asm	/^SectorNumberOfTrack	equ	18$/;"	d
Seg2PhyAddr	main.c	/^unsigned int Seg2PhyAddr(unsigned int selector)$/;"	f
SegCode32Len	pmtest2.asm	/^SegCode32Len	equ	$ - LABEL_SEG_CODE32$/;"	d
SelectFlatWR	bits-demo-16.asm	/^SelectFlatWR    equ     $ - $\$$/;"	d
SelectFlatWR	bits-demo.asm	/^SelectFlatWR	equ	$ - $\$$/;"	d
SelectFlatWR	loader.asm	/^	SelectFlatWR	equ	LABLE_GDT_FLAT_WR - LABEL_GDT$/;"	d
SelectFlatWR_16	loader.asm	/^	SelectFlatWR_16	equ	LABLE_GDT_FLAT_WR_16 - LABEL_GDT$/;"	d
SelectFlatWR_TEST	loader.asm	/^	SelectFlatWR_TEST	equ	LABLE_GDT_FLAT_WR_TEST - LABEL_GDT$/;"	d
SelectFlatX	loader.asm	/^	SelectFlatX	equ	LABLE_GDT_FLAT_X - LABEL_GDT$/;"	d
SelectFlatX_16	loader.asm	/^	SelectFlatX_16	equ	LABLE_GDT_FLAT_X_16 - LABEL_GDT$/;"	d
SelectFlatX_162	loader.asm	/^	SelectFlatX_162	equ	LABLE_GDT_FLAT_X_162 - LABEL_GDT$/;"	d
SelectVideo	bits-demo-16.asm	/^SelectVideo     equ     $ - $\$$/;"	d
SelectVideo	bits-demo.asm	/^SelectVideo	equ	$ - $\$$/;"	d
SelectVideo	loader.asm	/^	SelectVideo	equ	LABLE_GDT_VIDEO - LABEL_GDT + 3$/;"	d
SelectorCode16	pmtest2.asm	/^SelectorCode16		equ	LABEL_DESC_CODE16	- LABEL_GDT$/;"	d
SelectorCode32	pmtest2.asm	/^SelectorCode32		equ	LABEL_DESC_CODE32	- LABEL_GDT$/;"	d
SelectorData	pmtest2.asm	/^SelectorData		equ	LABEL_DESC_DATA		- LABEL_GDT$/;"	d
SelectorNormal	pmtest2.asm	/^SelectorNormal		equ	LABEL_DESC_NORMAL	- LABEL_GDT$/;"	d
SelectorStack	pmtest2.asm	/^SelectorStack		equ	LABEL_DESC_STACK	- LABEL_GDT$/;"	d
SelectorTest	pmtest2.asm	/^SelectorTest		equ	LABEL_DESC_TEST		- LABEL_GDT$/;"	d
SelectorVideo	pmtest2.asm	/^SelectorVideo		equ	LABEL_DESC_VIDEO	- LABEL_GDT$/;"	d
SmallerNumber	experiment/foo.asm	/^SmallerNumber equ	23$/;"	d
Stack	kernel.asm	/^Stack	resb	1024*1024$/;"	l
StackTop	kernel.asm	/^StackTop:$/;"	l
Str	experiment/foo.asm	/^Str:	db	"Hello"$/;"	d
Str	experiment/nasm_in_linux.asm	/^Str:	db	"Hello,World"$/;"	d
StrTest	pmtest2.asm	/^StrTest:		db	"ABCDEFGHIJKLMNOPQRSTUVWXYZ", 0$/;"	d
Strcpy	string.asm	/^Strcpy:$/;"	l
Strlen	experiment/foo.asm	/^Strlen	dd	5$/;"	d
Strlen	string.asm	/^Strlen:$/;"	l
T	keymap.h	15;"	d
TAB	keymap.h	10;"	d
TASK_PROC_NUM	main.c	253;"	d	file:
TASK_SYS_SIZE	main.c	274;"	d	file:
TSS	main.c	/^}TSS;$/;"	t	typeref:struct:__anon5	file:
TSS_SELECTOR	kernel.asm	/^TSS_SELECTOR	equ	0x40$/;"	d
TSS_SELECTOR	main.c	138;"	d	file:
TSS_SELECTOR_INDEX	main.c	129;"	d	file:
TTY	main.c	/^}TTY;$/;"	t	typeref:struct:__anon2	file:
TTY_BUF_SIZE	main.c	5;"	d	file:
TTY_NUM	main.c	6;"	d	file:
Task	main.c	/^}Task;$/;"	t	typeref:struct:__anon8	file:
TaskSys	main.c	/^void TaskSys()$/;"	f
TaskTTY	main.c	/^void TaskTTY()$/;"	f
TaskTTY_STACK_SIZE	main.c	273;"	d	file:
TestA	main.c	/^void TestA()$/;"	f
TestB	main.c	/^void TestB()$/;"	f
TestC	main.c	/^void TestC()$/;"	f
TestRead	pmtest2.asm	/^TestRead:$/;"	l
TestWrite	pmtest2.asm	/^TestWrite:$/;"	l
TopOfStack	pmtest2.asm	/^TopOfStack	equ	$ - LABEL_STACK - 1$/;"	d
U	keymap.h	17;"	d
UP	keymap.h	62;"	d
USER_PROC_NUM	main.c	251;"	d	file:
V	keymap.h	38;"	d
VM_BASE_ADDR	main.c	13;"	d	file:
VM_TOTAL	main.c	15;"	d	file:
VirAddr2PhyAddr	main.c	/^unsigned int VirAddr2PhyAddr(unsigned int base, void *offset)$/;"	f
W	keymap.h	12;"	d
X	keymap.h	36;"	d
Y	keymap.h	16;"	d
Z	keymap.h	35;"	d
_NR_GET_TICKS	syscall.asm	/^_NR_GET_TICKS	equ	0$/;"	d
_NR_WRITE	main.c	321;"	d	file:
_NR_WRITE	syscall.asm	/^_NR_WRITE	equ	1$/;"	d
_displayStr	experiment/foo.asm	/^_displayStr:$/;"	l
_start	experiment/foo.asm	/^_start:$/;"	l
_start	experiment/nasm_in_linux.asm	/^_start:$/;"	l
_start	kernel.asm	/^_start:$/;"	l
align_check_fault	kernel.asm	/^align_check_fault:$/;"	l
arr	generate_constant.php	/^$arr = [$/;"	v
arr2	generate_constant.php	/^$arr2 = [];$/;"	v
arr3	generate_constant.php	/^$arr3 = array_unique($arr2);$/;"	v
assert	experiment/c/assert-demo.c	6;"	d	file:
assert	experiment/c/assert-demo.c	9;"	d	file:
assertion_failure	experiment/c/assert-demo.c	/^void assertion_failure(char *exp, char *file, char *base_file, int line)$/;"	f
atoi	main.c	/^void atoi(char *str, int num)$/;"	f
bound_range_exceeded_fault	kernel.asm	/^bound_range_exceeded_fault:$/;"	l
breakpoint_trap	kernel.asm	/^breakpoint_trap:$/;"	l
buf	main.c	/^	unsigned char buf[KEYBOARD_BUF_SIZE];$/;"	m	struct:__anon9	file:
buf	main.c	/^	unsigned int buf[TTY_BUF_SIZE];$/;"	m	struct:__anon2	file:
c	experiment/c/var.c	/^int c = 0;$/;"	v
ch	generate_constant.php	/^	$ch = $v[0];$/;"	v
choose	experiment/bar.c	/^int choose(int a, int b)$/;"	f
cld	test/boot.asm	/^cld$/;"	l
clock_handler	main.c	/^void clock_handler()$/;"	f
console	main.c	/^	CONSOLE *console;$/;"	m	struct:__anon2	file:
console_table	main.c	/^CONSOLE console_table[TTY_NUM];$/;"	v
coprocessor_error_fault	kernel.asm	/^coprocessor_error_fault:$/;"	l
coprocessor_not_available_fault	kernel.asm	/^coprocessor_not_available_fault:$/;"	l
coprocessor_segment_overrun	kernel.asm	/^coprocessor_segment_overrun:$/;"	l
counter	generate_constant.php	/^$counter = 1;$/;"	v
counter	main.c	/^	int counter;$/;"	m	struct:__anon9	file:
counter	main.c	/^	unsigned int counter;$/;"	m	struct:__anon2	file:
counter	main.c	/^unsigned int counter;$/;"	v
cr3	main.c	/^	unsigned int cr3;$/;"	m	struct:__anon5	file:
cs	main.c	/^	unsigned int cs;$/;"	m	struct:__anon5	file:
cs	main.c	/^	unsigned int cs;$/;"	m	struct:__anon6	file:
csinit	kernel.asm	/^csinit:$/;"	l
current_tty	main.c	/^TTY *current_tty;$/;"	v
cursor	main.c	/^	unsigned int cursor;$/;"	m	struct:__anon1	file:
delay	main.c	/^void delay(int time)$/;"	f
dis_pos	experiment/disp_str_colour/test.c	/^int dis_pos;$/;"	v
dis_pos	main.c	/^int dis_pos;$/;"	v
disable_int	kernel.asm	/^disable_int:$/;"	l
disp_int	main.c	/^void disp_int(int num)$/;"	f
disp_str	kernel.asm	/^disp_str:$/;"	l
disp_str_colour	experiment/disp_str_colour/disp_str.asm	/^disp_str_colour:$/;"	l
disp_str_colour	kernel.asm	/^disp_str_colour:$/;"	l
disp_str_colour3	main.c	/^void disp_str_colour3(char *str, int colour)$/;"	f
divide_zero_fault	kernel.asm	/^divide_zero_fault:$/;"	l
double_fault_exception_abort	kernel.asm	/^double_fault_exception_abort:$/;"	l
ds	main.c	/^	unsigned int ds;	$/;"	m	struct:__anon6	file:
ds	main.c	/^	unsigned int ds;$/;"	m	struct:__anon5	file:
dw	boot.asm	/^dw	0xAA55$/;"	l
dw	experiment/boot.asm	/^dw	0xaa55				;$/;"	l
dw	test/boot.asm	/^dw	0xAA55$/;"	l
dw	test/experiment/boot.asm	/^dw	0xaa55				;$/;"	l
eax	main.c	/^	unsigned int eax;$/;"	m	struct:__anon5	file:
eax	main.c	/^	unsigned int eax;$/;"	m	struct:__anon6	file:
ebp	main.c	/^	unsigned int ebp;	$/;"	m	struct:__anon6	file:
ebp	main.c	/^	unsigned int ebp;$/;"	m	struct:__anon5	file:
ebx	main.c	/^	unsigned int ebx;	$/;"	m	struct:__anon6	file:
ebx	main.c	/^	unsigned int ebx;$/;"	m	struct:__anon5	file:
ecx	main.c	/^	unsigned int ecx;	$/;"	m	struct:__anon6	file:
ecx	main.c	/^	unsigned int ecx;$/;"	m	struct:__anon5	file:
edi	main.c	/^	unsigned int edi;	$/;"	m	struct:__anon6	file:
edi	main.c	/^	unsigned int edi;$/;"	m	struct:__anon5	file:
edx	main.c	/^	unsigned int edx;	$/;"	m	struct:__anon6	file:
edx	main.c	/^	unsigned int edx;$/;"	m	struct:__anon5	file:
eflags	main.c	/^	unsigned int eflags;$/;"	m	struct:__anon5	file:
eflags	main.c	/^	unsigned int eflags;$/;"	m	struct:__anon6	file:
eip	main.c	/^	unsigned int eip;$/;"	m	struct:__anon5	file:
eip	main.c	/^	unsigned int eip;$/;"	m	struct:__anon6	file:
enable_int	kernel.asm	/^enable_int:$/;"	l
es	main.c	/^	unsigned int es;	$/;"	m	struct:__anon6	file:
es	main.c	/^	unsigned int es;$/;"	m	struct:__anon5	file:
esi	main.c	/^	unsigned int esi;	$/;"	m	struct:__anon6	file:
esi	main.c	/^	unsigned int esi;$/;"	m	struct:__anon5	file:
esp	main.c	/^	unsigned int esp;	\/\/ 漏掉了这个。iretd会出栈更新esp。$/;"	m	struct:__anon6	file:
esp	main.c	/^	unsigned int esp;$/;"	m	struct:__anon5	file:
esp0	main.c	/^	unsigned int esp0;$/;"	m	struct:__anon5	file:
esp1	main.c	/^	unsigned int esp1;$/;"	m	struct:__anon5	file:
esp2	main.c	/^	unsigned int esp2;$/;"	m	struct:__anon5	file:
exception	kernel.asm	/^exception:$/;"	l
exception_handler	main.c	/^void exception_handler(int vec_no, int error_no, int eip, int cs, int eflags)$/;"	f
extern	experiment/disp_str_colour/disp_str.asm	/^extern dis_pos$/;"	l
extern	experiment/foo.asm	/^extern choose$/;"	l
extern	kernel.asm	/^extern ReloadGDT$/;"	l
extern	kernel.asm	/^extern clock_handler$/;"	l
extern	kernel.asm	/^extern dis_pos$/;"	l
extern	kernel.asm	/^extern disp_int$/;"	l
extern	kernel.asm	/^extern exception_handler$/;"	l
extern	kernel.asm	/^extern gdt_ptr$/;"	l
extern	kernel.asm	/^extern idt_ptr$/;"	l
extern	kernel.asm	/^extern k_reenter$/;"	l
extern	kernel.asm	/^extern kernel_main$/;"	l
extern	kernel.asm	/^extern keyboard_handler$/;"	l
extern	kernel.asm	/^extern proc_ready_table$/;"	l
extern	kernel.asm	/^extern proc_table$/;"	l
extern	kernel.asm	/^extern spurious_irq$/;"	l
extern	kernel.asm	/^extern sys_call_table$/;"	l
extern	kernel.asm	/^extern test$/;"	l
extern	kernel.asm	/^extern ticks$/;"	l
extern	kernel.asm	/^extern tss$/;"	l
f	Makefile	/^	dd if=boot.bin of=a.img bs=512 count=1 conv=notrunc$/;"	m
f	test/Makefile	/^	dd if=boot.bin of=a.img count=1 conv=notrunc$/;"	m
flush	main.c	/^void flush(TTY *tty)$/;"	f
fs	main.c	/^	unsigned int fs;	$/;"	m	struct:__anon6	file:
fs	main.c	/^	unsigned int fs;$/;"	m	struct:__anon5	file:
func	experiment/c/arr.c	/^void func()$/;"	f
func	experiment/c/arr.s	/^func:$/;"	l
func_name	main.c	/^	Func func_name;$/;"	m	struct:__anon8	file:
gdt	main.c	/^Descriptor gdt[128];$/;"	v
gdt_ptr	main.c	/^unsigned char gdt_ptr[6];$/;"	v
gdt_ptr2	t.c	/^char gdt_ptr2[6];$/;"	v
general_protection_exception_fault	kernel.asm	/^general_protection_exception_fault:$/;"	l
get_ticks	syscall.asm	/^get_ticks:$/;"	l
global	experiment/disp_str_colour/disp_str.asm	/^global disp_str_colour$/;"	l
global	experiment/foo.asm	/^global _displayStr$/;"	l
global	experiment/foo.asm	/^global _start$/;"	l
global	experiment/nasm_in_linux.asm	/^global _start$/;"	l
global	kernel.asm	/^global InterruptTest$/;"	l
global	kernel.asm	/^global _start$/;"	l
global	kernel.asm	/^global align_check_fault$/;"	l
global	kernel.asm	/^global bound_range_exceeded_fault$/;"	l
global	kernel.asm	/^global breakpoint_trap$/;"	l
global	kernel.asm	/^global coprocessor_error_fault$/;"	l
global	kernel.asm	/^global coprocessor_not_available_fault$/;"	l
global	kernel.asm	/^global coprocessor_segment_overrun$/;"	l
global	kernel.asm	/^global disable_int:$/;"	l
global	kernel.asm	/^global disp_str$/;"	l
global	kernel.asm	/^global disp_str_colour$/;"	l
global	kernel.asm	/^global divide_zero_fault$/;"	l
global	kernel.asm	/^global double_fault_exception_abort$/;"	l
global	kernel.asm	/^global enable_int$/;"	l
global	kernel.asm	/^global general_protection_exception_fault$/;"	l
global	kernel.asm	/^global hwint0$/;"	l
global	kernel.asm	/^global hwint1$/;"	l
global	kernel.asm	/^global in_byte$/;"	l
global	kernel.asm	/^global invalid_opcode_fault$/;"	l
global	kernel.asm	/^global invalid_task_state_segment_fault$/;"	l
global	kernel.asm	/^global non_maskable_interrupt$/;"	l
global	kernel.asm	/^global out_byte$/;"	l
global	kernel.asm	/^global overflow_trap$/;"	l
global	kernel.asm	/^global page_fault$/;"	l
global	kernel.asm	/^global restart$/;"	l
global	kernel.asm	/^global segment_not_present_fault$/;"	l
global	kernel.asm	/^global simd_float_exception_fault$/;"	l
global	kernel.asm	/^global single_step_fault$/;"	l
global	kernel.asm	/^global stack_exception_fault$/;"	l
global	kernel.asm	/^global sys_call$/;"	l
global	string.asm	/^global Memcpy$/;"	l
global	string.asm	/^global Memset$/;"	l
global	string.asm	/^global Strcpy$/;"	l
global	string.asm	/^global Strlen$/;"	l
global	syscall.asm	/^global get_ticks$/;"	l
global	syscall.asm	/^global write$/;"	l
gs	main.c	/^	unsigned int gs;	$/;"	m	struct:__anon6	file:
gs	main.c	/^	unsigned int gs;$/;"	m	struct:__anon5	file:
head	main.c	/^	unsigned char *head;$/;"	m	struct:__anon9	file:
head	main.c	/^	unsigned int *head;$/;"	m	struct:__anon2	file:
hwint0	kernel.asm	/^hwint0:$/;"	l
hwint1	kernel.asm	/^hwint1:$/;"	l
idt	main.c	/^Gate idt[256];$/;"	v
idt_ptr	main.c	/^unsigned char idt_ptr[6];$/;"	v
in_byte	kernel.asm	/^in_byte:$/;"	l
in_byte2	kernel.asm	/^in_byte2:$/;"	l
in_process	main.c	/^void in_process(TTY *tty, unsigned int key)$/;"	f
inc	boot.asm	/^	inc di$/;"	d
inc	boot.asm	/^	inc dx$/;"	d
inc	loader-error.asm	/^	inc di$/;"	d
inc	loader-error.asm	/^	inc dx$/;"	d
inc	loader.asm	/^	inc di$/;"	d
inc	loader.asm	/^	inc dx$/;"	d
init_internal_interrupt	main.c	/^void init_internal_interrupt()$/;"	f
init_keyboard_handler	main.c	/^void init_keyboard_handler()$/;"	f
init_propt	main.c	/^void init_propt()$/;"	f
init_screen	main.c	/^void init_screen(TTY *tty)$/;"	f
init_tty	main.c	/^void init_tty()$/;"	f
int_handle	main.c	/^typedef void (*int_handle) ();$/;"	t	file:
invalid_opcode_fault	kernel.asm	/^invalid_opcode_fault:$/;"	l
invalid_task_state_segment_fault	kernel.asm	/^invalid_task_state_segment_fault:$/;"	l
io_delay	loader.asm	/^io_delay:$/;"	l
iobase	main.c	/^	unsigned int iobase;$/;"	m	struct:__anon5	file:
is_disp	main.c	/^unsigned char is_disp;$/;"	v
is_e0	main.c	/^unsigned char is_e0;$/;"	v
is_shift	main.c	/^unsigned char is_shift;$/;"	v
jmp	bits-demo-16.asm	/^jmp \$$/;"	l
jmp	bits-demo.asm	/^jmp \$$/;"	l
jmp	t2.asm	/^jmp \$$/;"	l
k_reenter	main.c	/^int k_reenter;$/;"	v
kernel_esp	main.c	/^	unsigned int kernel_esp;	$/;"	m	struct:__anon6	file:
kernel_main	main.c	/^void kernel_main()$/;"	f
keyboard_buffer	main.c	/^KeyboardBuffer keyboard_buffer;$/;"	v
keyboard_handler	main.c	/^void keyboard_handler()$/;"	f
keyboard_read	main.c	/^void keyboard_read(TTY *tty)$/;"	f
keymap	keymap.h	/^unsigned int keymap[NR_SCAN_CODES * MAP_COLS] = {$/;"	v
last_tss_ptr	main.c	/^	unsigned int last_tss_ptr;$/;"	m	struct:__anon5	file:
ldt	main.c	/^	unsigned int ldt;$/;"	m	struct:__anon5	file:
ldt_selector	main.c	/^	unsigned short ldt_selector;$/;"	m	struct:__anon7	file:
ldts	main.c	/^	Descriptor ldts[2];	$/;"	m	struct:__anon7	file:
main	experiment/c/array.c	/^int main(int argc, char **argv)$/;"	f
main	experiment/c/assert-demo.c	/^int main(int argc, char **argv)$/;"	f
main	experiment/c/bool-condition.c	/^int main(int argc, char **argv)$/;"	f
main	experiment/c/char-overflow.c	/^int main(int argc, char **argv)$/;"	f
main	experiment/c/magic-constant.c	/^int main(int argc, char **argv)$/;"	f
main	experiment/c/point.c	/^int main(int argc, char **argv)$/;"	f
main	experiment/c/str.c	/^int main(int argc, char **argv)$/;"	f
main	experiment/c/var.c	/^int main(int argc, char **argv)$/;"	f
main	experiment/c/var_list.c	/^int main(int argc, char **argv)$/;"	f
main	experiment/disp_str_colour/test.c	/^int main(void)$/;"	f
main	t.c	/^int main(void)$/;"	f
milli_delay	main.c	/^void milli_delay(unsigned int milli_sec)$/;"	f
mov	bits-demo-16.asm	/^mov ax, 3$/;"	l
mov	bits-demo-16.asm	/^mov cx, 1$/;"	l
mov	bits-demo.asm	/^mov ax, 3$/;"	l
mov	bits-demo.asm	/^mov cx, 1$/;"	l
mov	t2.asm	/^mov ax, 'C'$/;"	l
mov	t2.asm	/^mov ax, 9$/;"	l
mov	t2.asm	/^mov cx, 1$/;"	l
mov	t2.asm	/^mov cx, 2$/;"	l
mov	t2.asm	/^mov dx, 10$/;"	l
mov	t2.asm	/^mov dx, 12$/;"	l
mov	t3.asm	/^mov	ds,	ax$/;"	l
mov	t3.asm	/^mov     ax,     cs$/;"	l
mov	test.asm	/^mov ax, 5$/;"	l
mov	test/boot.asm	/^mov ax, 0xB800$/;"	l
mov	test/boot.asm	/^mov ax, cs$/;"	l
mov	test/boot.asm	/^mov cx, 0$/;"	l
mov	test/boot.asm	/^mov di, (80 * 20 + 20) * 2$/;"	l
mov	test/boot.asm	/^mov ds, ax$/;"	l
mov	test/boot.asm	/^mov es, ax$/;"	l
mov	test/boot.asm	/^mov gs, ax$/;"	l
mov	test/boot.asm	/^mov si, BootMessage$/;"	l
non_maskable_interrupt	kernel.asm	/^non_maskable_interrupt:$/;"	l
offset_below	main.c	/^	unsigned short offset_below;$/;"	m	struct:__anon4	file:
offset_high	main.c	/^	unsigned short offset_high;$/;"	m	struct:__anon4	file:
org	boot.asm	/^org 0x7c00$/;"	l
org	kernel2.asm	/^org	0100h$/;"	l
org	loader-error.asm	/^org	0100h$/;"	l
org	loader.asm	/^org	0100h$/;"	l
org	pmtest2.asm	/^org	0100h$/;"	l
org	test/boot.asm	/^org 0x7c00$/;"	l
org	test/loader.asm	/^org	0100h$/;"	l
original_addr	main.c	/^	unsigned int original_addr;$/;"	m	struct:__anon1	file:
out_byte	kernel.asm	/^out_byte:$/;"	l
out_char	main.c	/^void out_char(TTY *tty, unsigned char key)$/;"	f
overflow_trap	kernel.asm	/^overflow_trap:$/;"	l
page_fault	kernel.asm	/^page_fault:$/;"	l
paramCount	main.c	/^	unsigned char paramCount;$/;"	m	struct:__anon4	file:
pid	main.c	/^	unsigned int pid;$/;"	m	struct:__anon7	file:
pop	boot.asm	/^	pop ds	$/;"	d
pop	boot.asm	/^	pop dx$/;"	d
pop	kernel.asm	/^	pop ds$/;"	d
pop	loader-error.asm	/^	pop di$/;"	d
pop	loader-error.asm	/^	pop ds	$/;"	d
pop	loader-error.asm	/^	pop dx$/;"	d
pop	loader.asm	/^	pop ds	$/;"	d
pop	loader.asm	/^	pop dx$/;"	d
priority	main.c	/^	unsigned int priority;$/;"	m	struct:__anon7	file:
proc_ready_table	main.c	/^Proc *proc_ready_table;$/;"	v
proc_stack	main.c	/^int proc_stack[STACK_SIZE];$/;"	v
proc_table	main.c	/^Proc proc_table[TASK_PROC_NUM + USER_PROC_NUM];$/;"	v
push	boot.asm	/^	push ds$/;"	d
push	boot.asm	/^	push dx$/;"	d
push	kernel.asm	/^	push ds$/;"	d
push	loader-error.asm	/^	push di$/;"	d
push	loader-error.asm	/^	push ds$/;"	d
push	loader-error.asm	/^	push dx$/;"	d
push	loader.asm	/^	push ds$/;"	d
push	loader.asm	/^	push dx$/;"	d
put_key	main.c	/^void put_key(TTY *tty, unsigned char key)$/;"	f
read_from_keyboard_buf	main.c	/^unsigned char read_from_keyboard_buf()$/;"	f
restart	kernel.asm	/^restart:$/;"	l
restore	kernel.asm	/^restore:$/;"	l
s_reg	main.c	/^	Regs s_reg;$/;"	m	struct:__anon7	file:
schedule_process	main.c	/^void schedule_process()$/;"	f
scroll_down	main.c	/^void scroll_down(TTY *tty)$/;"	f
scroll_up	main.c	/^void scroll_up(TTY *tty)$/;"	f
seg_attr1	main.c	/^	unsigned char seg_attr1;$/;"	m	struct:__anon3	file:
seg_base_below	main.c	/^	unsigned short seg_base_below;$/;"	m	struct:__anon3	file:
seg_base_high	main.c	/^	unsigned char seg_base_high;$/;"	m	struct:__anon3	file:
seg_base_middle	main.c	/^	unsigned char  seg_base_middle;$/;"	m	struct:__anon3	file:
seg_limit_below	main.c	/^	unsigned short seg_limit_below;$/;"	m	struct:__anon3	file:
seg_limit_high_and_attr2	main.c	/^	unsigned char seg_limit_high_and_attr2;$/;"	m	struct:__anon3	file:
segment_not_present_fault	kernel.asm	/^segment_not_present_fault:$/;"	l
select_console	main.c	/^void select_console(unsigned char tty_index)$/;"	f
selector	main.c	/^	unsigned short selector;$/;"	m	struct:__anon4	file:
set_console_start_video_addr	main.c	/^void set_console_start_video_addr(unsigned int start_video_addr)$/;"	f
set_cursor	main.c	/^void set_cursor(unsigned int cursor)$/;"	f
simd_float_exception_fault	kernel.asm	/^simd_float_exception_fault:$/;"	l
single_step_fault	kernel.asm	/^single_step_fault:$/;"	l
spurious_irq	main.c	/^void spurious_irq(int irq)$/;"	f
ss	main.c	/^	unsigned int ss;$/;"	m	struct:__anon5	file:
ss	main.c	/^	unsigned int ss;$/;"	m	struct:__anon6	file:
ss0	main.c	/^	unsigned int ss0;$/;"	m	struct:__anon5	file:
ss1	main.c	/^	unsigned int ss1;$/;"	m	struct:__anon5	file:
ss2	main.c	/^	unsigned int ss2;$/;"	m	struct:__anon5	file:
stack_exception_fault	kernel.asm	/^stack_exception_fault:$/;"	l
stack_size	main.c	/^	unsigned short stack_size;$/;"	m	struct:__anon8	file:
start_video_addr	main.c	/^	unsigned int start_video_addr;$/;"	m	struct:__anon1	file:
sys_call	kernel.asm	/^sys_call:$/;"	l
sys_call_table	main.c	/^int_handle sys_call_table[2] = {$/;"	v
sys_get_ticks	main.c	/^int sys_get_ticks()$/;"	f
sys_task_table	main.c	/^Task sys_task_table[TASK_PROC_NUM] = {$/;"	v
sys_write	main.c	/^void sys_write(char *buf, int len, Proc *proc)$/;"	f
system_call	main.c	/^typedef void *system_call;$/;"	t	file:
tail	main.c	/^	unsigned char *tail;$/;"	m	struct:__anon9	file:
tail	main.c	/^	unsigned int *tail;$/;"	m	struct:__anon2	file:
test	experiment/c/var_list.c	/^void test(char *fmt, ...)$/;"	f
test	main.c	/^void test()$/;"	f
test2	experiment/c/var_list.c	/^void test2(const char *fmt, char *var_list)$/;"	f
ticks	main.c	/^	unsigned int ticks;$/;"	m	struct:__anon7	file:
ticks	main.c	/^unsigned int ticks;$/;"	v
times	boot.asm	/^times	510 - ($ - $$)	db	0$/;"	l
times	experiment/boot.asm	/^times	510-($-$$)	db	0	;$/;"	l
times	test/boot.asm	/^times	510 - ($ - $$)	db	0$/;"	l
times	test/experiment/boot.asm	/^times	510-($-$$)	db	0	;$/;"	l
trace	main.c	/^	unsigned int trace;$/;"	m	struct:__anon5	file:
tss	main.c	/^TSS tss;$/;"	v
tty_do_read	main.c	/^void tty_do_read(TTY *tty)$/;"	f
tty_do_write	main.c	/^void tty_do_write(TTY *tty)$/;"	f
tty_index	main.c	/^	unsigned int tty_index;$/;"	m	struct:__anon7	file:
tty_table	main.c	/^TTY tty_table[TTY_NUM];$/;"	v
type_other_attribute	main.c	/^	unsigned char type_other_attribute;$/;"	m	struct:__anon4	file:
user_task_table	main.c	/^Task user_task_table[USER_PROC_NUM] = {$/;"	v
vm_limit	main.c	/^	unsigned int vm_limit;$/;"	m	struct:__anon1	file:
vsprintf	main.c	/^int vsprintf(char *buf, char *fmt, char *var_list)$/;"	f
write	syscall.asm	/^write:$/;"	l
