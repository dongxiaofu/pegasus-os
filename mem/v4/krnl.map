
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
idt_ptr             0x6               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x7000            global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
tty_table           0x186c            kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
root                0x28              fs_main.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
ticks               0x4               kernel_main.o
UserPool            0x10              kernel_main.o
console_table       0x30              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table2         0x4               global.o
proc_table          0xb0              global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mem/mem.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001000
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
LOAD switch_to.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001000     0x7ed0
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001000       0x75 kernel_sub.o
                0x00000000c0001000                _start
 *fill*         0x00000000c0001075        0xb 
 .text          0x00000000c0001080      0x316 kernel.o
                0x00000000c0001080                InterruptTest
                0x00000000c000108c                disp_str
                0x00000000c00010c7                disp_str_colour
                0x00000000c0001103                divide_zero_fault
                0x00000000c0001109                single_step_fault
                0x00000000c000110f                non_maskable_interrupt
                0x00000000c0001115                breakpoint_trap
                0x00000000c000111b                overflow_trap
                0x00000000c0001121                bound_range_exceeded_fault
                0x00000000c0001127                invalid_opcode_fault
                0x00000000c000112d                coprocessor_not_available_fault
                0x00000000c0001133                double_fault_exception_abort
                0x00000000c0001137                coprocessor_segment_overrun
                0x00000000c000113d                invalid_task_state_segment_fault
                0x00000000c0001141                segment_not_present_fault
                0x00000000c0001145                stack_exception_fault
                0x00000000c0001149                general_protection_exception_fault
                0x00000000c000114d                page_fault
                0x00000000c0001151                coprocessor_error_fault
                0x00000000c0001157                align_check_fault
                0x00000000c000115b                simd_float_exception_fault
                0x00000000c000116b                hwint0
                0x00000000c00011b4                hwint1
                0x00000000c00011fd                hwint14
                0x00000000c0001242                sys_call
                0x00000000c000128c                restart
                0x00000000c00012a8                in_byte
                0x00000000c00012b4                out_byte
                0x00000000c00012d6                disable_int
                0x00000000c00012d8                enable_int
                0x00000000c000136e                enable_8259A_casecade_irq
                0x00000000c0001378                disable_8259A_casecade_irq
                0x00000000c0001382                enable_8259A_slave_winchester_irq
                0x00000000c000138c                disable_8259A_slave_winchester_irq
 .text          0x00000000c0001396     0x277c kernel_main.o
                0x00000000c0001396                untar
                0x00000000c00015a0                atoi
                0x00000000c0001646                disp_int
                0x00000000c000166f                do_page_fault
                0x00000000c00017de                exception_handler
                0x00000000c000196b                init_internal_interrupt
                0x00000000c0001ae0                test
                0x00000000c0001b16                disp_str_colour3
                0x00000000c0001b1c                spurious_irq
                0x00000000c0001b95                init_keyboard
                0x00000000c0001c12                init
                0x00000000c0001c43                kernel_main
                0x00000000c0001e71                TestFS
                0x00000000c0002245                wait_exit
                0x00000000c0002313                INIT_fork
                0x00000000c0002603                simple_shell
                0x00000000c00027da                test_split_str
                0x00000000c0002967                test_shell
                0x00000000c0002a45                test_exec
                0x00000000c0002b0d                INIT
                0x00000000c0002b1a                TestA
                0x00000000c0002b22                delay
                0x00000000c0002b69                TestB
                0x00000000c0002b98                TestC
                0x00000000c0002bcb                sys_get_ticks
                0x00000000c0002bd5                sys_write
                0x00000000c0002c26                milli_delay
                0x00000000c0002c62                TaskSys
                0x00000000c0002ce2                Printf
                0x00000000c0002d40                vsprintf
                0x00000000c0002eec                printx
                0x00000000c0002f2f                sys_printx
                0x00000000c000300e                spin
                0x00000000c0003013                panic
                0x00000000c0003031                assertion_failure
                0x00000000c0003068                dead_lock
                0x00000000c0003072                sys_send_msg
                0x00000000c000338a                sys_receive_msg
                0x00000000c00037cf                disp_str_colour_debug
                0x00000000c00037d5                send_rec
                0x00000000c00038bb                block
                0x00000000c00038cd                unblock
                0x00000000c0003901                get_ticks_ipc
                0x00000000c000394c                itoa
                0x00000000c00039a2                i2a
                0x00000000c0003a08                inform_int
                0x00000000c0003aa3                strcmp
 .text          0x00000000c0003b12      0xc69 hd.o
                0x00000000c0003b12                TaskHD
                0x00000000c0003b24                init_hd
                0x00000000c0003b3e                hd_handle
                0x00000000c0003c03                hd_cmd_out
                0x00000000c0003d05                hd_identify
                0x00000000c0003dbc                print_hdinfo
                0x00000000c0003f4a                print_dpt_entry
                0x00000000c0003fb6                get_partition_table
                0x00000000c0004095                partition
                0x00000000c00042af                hd_open
                0x00000000c00042fe                get_hd_ioctl
                0x00000000c0004357                wait_for
                0x00000000c0004388                interrupt_wait
                0x00000000c00043a7                hd_rdwt
                0x00000000c00045d9                hd_handler
                0x00000000c0004605                waitfor
                0x00000000c0004656                print_hd_info
                0x00000000c0004743                is_empty
 *fill*         0x00000000c000477b        0x5 
 .text          0x00000000c0004780       0x74 syscall.o
                0x00000000c0004780                get_ticks
                0x00000000c0004788                write2
                0x00000000c0004798                write_debug
                0x00000000c00047b8                send_msg
                0x00000000c00047de                receive_msg
 .text          0x00000000c00047f4     0x1ec8 fs_main.o
                0x00000000c00047f4                task_fs
                0x00000000c000492f                rd_wt
                0x00000000c00049d3                mkfs
                0x00000000c0004f93                init_fs
                0x00000000c0004fc2                do_open
                0x00000000c00051a3                search_file
                0x00000000c00052d3                strip_path
                0x00000000c000539f                get_inode
                0x00000000c0005561                create_file
                0x00000000c000566c                alloc_imap_bit
                0x00000000c0005769                alloc_smap_bit
                0x00000000c000590a                new_inode
                0x00000000c0005a28                new_dir_entry
                0x00000000c0005c30                do_unlink
                0x00000000c0006100                do_rdwt
                0x00000000c0006470                sync_inode
                0x00000000c00065c4                put_inode
                0x00000000c0006602                do_close
                0x00000000c0006654                get_super_block
 .text          0x00000000c00066bc        0x0 global.o
 .text          0x00000000c00066bc      0x185 process.o
                0x00000000c00066bc                check
                0x00000000c0006728                schedule_process
                0x00000000c000677b                clock_handler
                0x00000000c0006806                pid2proc
                0x00000000c0006822                proc2pid
 .text          0x00000000c0006841      0x31a protect.o
                0x00000000c0006841                InitDescriptor
                0x00000000c00068ae                Seg2PhyAddr
                0x00000000c00068ef                Seg2PhyAddrLDT
                0x00000000c0006930                VirAddr2PhyAddr
                0x00000000c0006946                v2l
                0x00000000c0006989                init_propt
                0x00000000c0006a74                InitInterruptDesc
                0x00000000c0006ad0                ReloadGDT
 .text          0x00000000c0006b5b      0xa38 console.o
                0x00000000c0006b5b                select_console
                0x00000000c0006b97                flush
                0x00000000c0006bd0                set_cursor
                0x00000000c0006c2e                set_console_start_video_addr
                0x00000000c0006c8c                put_key
                0x00000000c0006cf8                scroll_up
                0x00000000c0006d3a                scroll_down
                0x00000000c0006da5                out_char
                0x00000000c0006f4c                tty_dev_read
                0x00000000c0006f76                tty_dev_write
                0x00000000c000717d                tty_do_read
                0x00000000c000720e                tty_do_write
                0x00000000c0007356                init_screen
                0x00000000c00073ea                init_tty
                0x00000000c0007484                TaskTTY
 .text          0x00000000c0007593      0x407 keyboard.o
                0x00000000c0007593                keyboard_handler
                0x00000000c0007615                read_from_keyboard_buf
                0x00000000c0007675                keyboard_read
                0x00000000c00077f4                init_keyboard_handler
                0x00000000c0007808                in_process
 .text          0x00000000c000799a       0x55 open.o
                0x00000000c000799a                open
 .text          0x00000000c00079ef       0x37 read.o
                0x00000000c00079ef                read
 .text          0x00000000c0007a26       0x37 write.o
                0x00000000c0007a26                write
 .text          0x00000000c0007a5d       0x4c close.o
                0x00000000c0007a5d                close
 .text          0x00000000c0007aa9       0x3e wait.o
                0x00000000c0007aa9                wait
 .text          0x00000000c0007ae7       0x29 exit.o
                0x00000000c0007ae7                exit
 .text          0x00000000c0007b10       0x5f fork.o
                0x00000000c0007b10                fork
 .text          0x00000000c0007b6f       0x25 getpid.o
                0x00000000c0007b6f                getpid
 .text          0x00000000c0007b94      0x235 exec.o
                0x00000000c0007b94                exec
                0x00000000c0007bff                execv
                0x00000000c0007da4                execl
 .text          0x00000000c0007dc9      0x130 mm/main.o
                0x00000000c0007dc9                TaskMM
                0x00000000c0007eda                alloc_mem
 .text          0x00000000c0007ef9      0x344 mm/exec.o
                0x00000000c0007ef9                do_exec2
                0x00000000c0007f0d                do_exec
 .text          0x00000000c000823d      0x403 mm/forkexit.o
                0x00000000c000823d                do_fork
                0x00000000c000843b                do_exit
                0x00000000c000852e                do_wait
                0x00000000c00085f8                cleanup
 .text          0x00000000c0008640      0x872 mem/mem.o
                0x00000000c0008640                test_bit_val
                0x00000000c00086a9                set_bit_val
                0x00000000c0008724                set_bits
                0x00000000c000875e                get_first_free_bit
                0x00000000c00087a2                get_bits
                0x00000000c0008863                get_a_page2
                0x00000000c0008892                get_a_page
                0x00000000c0008921                get_virtual_address
                0x00000000c00089ad                ptr_pte
                0x00000000c00089dd                ptr_pde
                0x00000000c00089f9                add_map_entry
                0x00000000c0008a87                get_physical_address
                0x00000000c0008ab9                alloc_memory
                0x00000000c0008b1b                init_memory2
                0x00000000c0008d92                init_memory
 *fill*         0x00000000c0008eb2        0xe 
 .text          0x00000000c0008ec0       0x10 switch_to.o
                0x00000000c0008ec0                switch_to
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c0008ee0      0xa82
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0008ee0      0x721 kernel_main.o
 .rodata        0x00000000c0009601      0x10e hd.o
 *fill*         0x00000000c000970f        0x1 
 .rodata        0x00000000c0009710      0x173 fs_main.o
                0x00000000c0009710                FSBUF_SIZE
 .rodata        0x00000000c0009883        0x6 process.o
 .rodata        0x00000000c0009889        0x9 console.o
 .rodata        0x00000000c0009892       0x24 close.o
 .rodata        0x00000000c00098b6       0x1b fork.o
 .rodata        0x00000000c00098d1       0x31 exec.o
 .rodata        0x00000000c0009902       0x11 mm/main.o
 *fill*         0x00000000c0009913        0x1 
 .rodata        0x00000000c0009914       0x37 mm/forkexit.o
 .rodata        0x00000000c000994b       0x17 mem/mem.o

.txt            0x00000000c0009962       0xaa
 .txt           0x00000000c0009962       0x82 string.o
                0x00000000c0009962                Memcpy
                0x00000000c0009990                Memset
                0x00000000c00099af                Strcpy
                0x00000000c00099c9                Strlen
 .txt           0x00000000c00099e4       0x28 hd_rdwt.o
                0x00000000c00099e4                read_port
                0x00000000c00099f8                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c0009a0c     0x1338
 *(.eh_frame)
 .eh_frame      0x00000000c0009a0c      0x5ec kernel_main.o
 .eh_frame      0x00000000c0009ff8      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x00000000c000a23c      0x288 fs_main.o
                                        0x2a0 (size before relaxing)
 .eh_frame      0x00000000c000a4c4       0xa0 process.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000a564      0x100 protect.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c000a664      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x00000000c000a844       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000a8e4       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000a904       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000a924       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000a944       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000a964       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000a984       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000a9a4       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000a9c4       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000a9e4       0x64 exec.o
                                         0x7c (size before relaxing)
 .eh_frame      0x00000000c000aa48       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x00000000c000aa84       0x4c mm/exec.o
                                         0x64 (size before relaxing)
 .eh_frame      0x00000000c000aad0       0x90 mm/forkexit.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x00000000c000ab60      0x1e4 mem/mem.o
                                        0x1fc (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c000c000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c000c000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c000c000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c000c000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c000c000        0x0
 *(.got)
 .got           0x00000000c000c000        0x0 kernel_sub.o
 *(.igot)
                0x00000000c000c000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c000c000        0x0
 *(.got.plt)
 .got.plt       0x00000000c000c000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x00000000c000c000        0x0 kernel_sub.o

.data           0x00000000c000c000      0x660
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000c000        0xf kernel_sub.o
 *fill*         0x00000000c000c00f        0x1 
 .data          0x00000000c000c010        0xf kernel.o
 .data          0x00000000c000c01f        0x0 kernel_main.o
 .data          0x00000000c000c01f        0x0 hd.o
 *fill*         0x00000000c000c01f        0x1 
 .data          0x00000000c000c020        0x0 syscall.o
 .data          0x00000000c000c020        0x8 fs_main.o
                0x00000000c000c020                fsbuf
                0x00000000c000c024                super_block_buf
 .data          0x00000000c000c028       0x30 global.o
                0x00000000c000c028                sys_task_table
                0x00000000c000c044                sys_call_table
 .data          0x00000000c000c058        0x0 process.o
 .data          0x00000000c000c058        0x0 protect.o
 .data          0x00000000c000c058        0x0 console.o
 *fill*         0x00000000c000c058        0x8 
 .data          0x00000000c000c060      0x600 keyboard.o
                0x00000000c000c060                keymap
 .data          0x00000000c000c660        0x0 open.o
 .data          0x00000000c000c660        0x0 read.o
 .data          0x00000000c000c660        0x0 write.o
 .data          0x00000000c000c660        0x0 close.o
 .data          0x00000000c000c660        0x0 wait.o
 .data          0x00000000c000c660        0x0 exit.o
 .data          0x00000000c000c660        0x0 fork.o
 .data          0x00000000c000c660        0x0 getpid.o
 .data          0x00000000c000c660        0x0 exec.o
 .data          0x00000000c000c660        0x0 mm/main.o
 .data          0x00000000c000c660        0x0 mm/exec.o
 .data          0x00000000c000c660        0x0 mm/forkexit.o
 .data          0x00000000c000c660        0x0 mem/mem.o

.data1
 *(.data1)
                0x00000000c000c660                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c000c660                . = .
                0x00000000c000c660                __bss_start = .

.bss            0x00000000c000c660     0xb370
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c000c660      0x400 kernel_sub.o
 .bss           0x00000000c000ca60      0x400 kernel.o
 .bss           0x00000000c000ce60        0x0 kernel_main.o
 .bss           0x00000000c000ce60        0x0 hd.o
 .bss           0x00000000c000ce60        0x4 fs_main.o
                0x00000000c000ce60                c
 .bss           0x00000000c000ce64        0x1 global.o
                0x00000000c000ce64                user_task_table
 .bss           0x00000000c000ce65        0x0 process.o
 .bss           0x00000000c000ce65        0x0 protect.o
 .bss           0x00000000c000ce65        0x0 console.o
 .bss           0x00000000c000ce65        0x0 keyboard.o
 .bss           0x00000000c000ce65        0x0 open.o
 .bss           0x00000000c000ce65        0x0 read.o
 .bss           0x00000000c000ce65        0x0 write.o
 .bss           0x00000000c000ce65        0x0 close.o
 .bss           0x00000000c000ce65        0x0 wait.o
 .bss           0x00000000c000ce65        0x0 exit.o
 .bss           0x00000000c000ce65        0x0 fork.o
 .bss           0x00000000c000ce65        0x0 getpid.o
 .bss           0x00000000c000ce65        0x0 exec.o
 .bss           0x00000000c000ce65        0x0 mm/main.o
 .bss           0x00000000c000ce65        0x0 mm/exec.o
 .bss           0x00000000c000ce65        0x0 mm/forkexit.o
 .bss           0x00000000c000ce65        0x0 mem/mem.o
 *(COMMON)
 *fill*         0x00000000c000ce65       0x1b 
 COMMON         0x00000000c000ce80     0x27f1 kernel_main.o
                0x00000000c000ce80                current_tty
                0x00000000c000ce84                is_e0
                0x00000000c000ce88                idt_ptr
                0x00000000c000ce90                KernelVirtualMemory
                0x00000000c000ce9c                dis_pos
                0x00000000c000cea0                k_reenter
                0x00000000c000cec0                gdt
                0x00000000c000d2c0                proc_ready_table
                0x00000000c000d2c4                pcaller
                0x00000000c000d2e0                keyboard_buffer
                0x00000000c000d500                tty_table
                0x00000000c000ed80                tss
                0x00000000c000edec                KernelPool
                0x00000000c000edfc                counter
                0x00000000c000ee00                key_pressed
                0x00000000c000ee04                is_shift
                0x00000000c000ee08                gdt_ptr
                0x00000000c000ee20                idt
                0x00000000c000f620                ticks
                0x00000000c000f624                UserPool
                0x00000000c000f640                console_table
                0x00000000c000f670                is_disp
 *fill*         0x00000000c000f671        0xf 
 COMMON         0x00000000c000f680      0x440 hd.o
                0x00000000c000f680                hd_info
                0x00000000c000f8c0                hd_cache
 COMMON         0x00000000c000fac0      0xe28 fs_main.o
                0x00000000c000fac0                file_desc_table
                0x00000000c000fec0                inode_table
                0x00000000c00108c0                root
 *fill*         0x00000000c00108e8       0x18 
 COMMON         0x00000000c0010900     0x70d0 global.o
                0x00000000c0010900                proc_stack
                0x00000000c0017900                proc_table2
                0x00000000c0017920                proc_table
                0x00000000c00179d0                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c00179d0                . = ALIGN (0x4)
                0x00000000c00179d0                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c00179d0                . = ALIGN (0x4)
                0x00000000c00179d0                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c00179d0                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o
 .comment       0x000000000000002c       0x2d mem/mem.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
