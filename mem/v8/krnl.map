
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
phy_super_block_buf
                    0x4               fs_main.o
phy_fsbuf           0x4               fs_main.o
idt_ptr             0x6               kernel_main.o
pid                 0x4               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
super_block_buf     0x4               fs_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
pcb_list            0x10              kernel_main.o
tty_table           0x186c            kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
fsbuf               0x4               fs_main.o
root                0x28              fs_main.o
kernel_mem_block_decs_array
                    0xf0              global.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
ticks               0x4               kernel_main.o
UserPool            0x10              kernel_main.o
all_pcb_list        0x10              kernel_main.o
console_table       0x30              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table          0xab0             global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mem/mem.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main_old.o
 .note.GNU-stack
                0x0000000000000000        0x0 my_process.o
 .note.GNU-stack
                0x0000000000000000        0x0 double_link_list.o
 .note.GNU-stack
                0x0000000000000000        0x0 thread.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
LOAD kernel_main_old.o
LOAD my_process.o
LOAD switch_to.o
LOAD double_link_list.o
LOAD thread.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x907b
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0x76 kernel_sub.o
                0x00000000c0001500                _start
 *fill*         0x00000000c0001576        0xa 
 .text          0x00000000c0001580      0x314 kernel.o
                0x00000000c0001580                InterruptTest
                0x00000000c000158c                disp_str
                0x00000000c00015c7                disp_str_colour
                0x00000000c0001603                divide_zero_fault
                0x00000000c0001609                single_step_fault
                0x00000000c000160f                non_maskable_interrupt
                0x00000000c0001615                breakpoint_trap
                0x00000000c000161b                overflow_trap
                0x00000000c0001621                bound_range_exceeded_fault
                0x00000000c0001627                invalid_opcode_fault
                0x00000000c000162d                coprocessor_not_available_fault
                0x00000000c0001633                double_fault_exception_abort
                0x00000000c0001637                coprocessor_segment_overrun
                0x00000000c000163d                invalid_task_state_segment_fault
                0x00000000c0001641                segment_not_present_fault
                0x00000000c0001645                stack_exception_fault
                0x00000000c0001649                general_protection_exception_fault
                0x00000000c000164d                page_fault
                0x00000000c0001651                coprocessor_error_fault
                0x00000000c0001657                align_check_fault
                0x00000000c000165b                simd_float_exception_fault
                0x00000000c000166a                hwint0
                0x00000000c0001698                hwint1
                0x00000000c00016dc                hwint14
                0x00000000c000171c                sys_call
                0x00000000c0001761                restart
                0x00000000c0001782                in_byte
                0x00000000c000178e                out_byte
                0x00000000c00017b0                disable_int
                0x00000000c00017b2                enable_int
                0x00000000c0001848                enable_8259A_casecade_irq
                0x00000000c0001852                disable_8259A_casecade_irq
                0x00000000c000185c                enable_8259A_slave_winchester_irq
                0x00000000c0001866                disable_8259A_slave_winchester_irq
                0x00000000c0001870                update_cr3
                0x00000000c000187d                update_tss
                0x00000000c000188c                get_running_thread_pcb
 .text          0x00000000c0001894      0x20d kernel_main.o
                0x00000000c0001894                kernel_main
                0x00000000c000191a                init
                0x00000000c000197c                kernel_thread_a
                0x00000000c00019de                kernel_thread_b
                0x00000000c0001a40                kernel_thread_c
                0x00000000c0001a56                kernel_thread_d
                0x00000000c0001a6c                user_proc_a
                0x00000000c0001a89                user_proc_b
 .text          0x00000000c0001aa1      0xd11 hd.o
                0x00000000c0001aa1                TaskHD
                0x00000000c0001ad4                init_hd
                0x00000000c0001aee                hd_handle
                0x00000000c0001be8                hd_cmd_out
                0x00000000c0001cea                hd_identify
                0x00000000c0001da1                print_hdinfo
                0x00000000c0001f2f                print_dpt_entry
                0x00000000c0001f9b                get_partition_table
                0x00000000c000207a                partition
                0x00000000c0002294                hd_open
                0x00000000c00022e3                get_hd_ioctl
                0x00000000c000233c                wait_for
                0x00000000c000236d                interrupt_wait
                0x00000000c00023be                hd_rdwt
                0x00000000c000261d                hd_handler
                0x00000000c0002649                waitfor
                0x00000000c000268d                print_hd_info
                0x00000000c000277a                is_empty
 *fill*         0x00000000c00027b2        0xe 
 .text          0x00000000c00027c0       0x74 syscall.o
                0x00000000c00027c0                get_ticks
                0x00000000c00027c8                write2
                0x00000000c00027d8                write_debug
                0x00000000c00027f8                send_msg
                0x00000000c000281e                receive_msg
 .text          0x00000000c0002834     0x1f54 fs_main.o
                0x00000000c0002834                task_fs
                0x00000000c000299b                rd_wt
                0x00000000c0002a75                mkfs
                0x00000000c0003057                init_fs
                0x00000000c00030ac                do_open
                0x00000000c000327b                search_file
                0x00000000c00033ad                strip_path
                0x00000000c0003479                get_inode
                0x00000000c000363b                create_file
                0x00000000c0003746                alloc_imap_bit
                0x00000000c0003843                alloc_smap_bit
                0x00000000c00039e4                new_inode
                0x00000000c0003b02                new_dir_entry
                0x00000000c0003d0e                do_unlink
                0x00000000c00041ea                do_rdwt
                0x00000000c000453c                sync_inode
                0x00000000c0004690                put_inode
                0x00000000c00046ce                do_close
                0x00000000c0004720                get_super_block
 .text          0x00000000c0004788        0x0 global.o
 .text          0x00000000c0004788      0x20c process.o
                0x00000000c0004788                check
                0x00000000c00047fd                schedule_process
                0x00000000c00048ff                clock_handler
                0x00000000c000490d                pid2proc
                0x00000000c000497d                proc2pid
 .text          0x00000000c0004994      0x360 protect.o
                0x00000000c0004994                InitDescriptor
                0x00000000c0004a01                Seg2PhyAddr
                0x00000000c0004a42                Seg2PhyAddrLDT
                0x00000000c0004a86                VirAddr2PhyAddr
                0x00000000c0004a9c                v2l
                0x00000000c0004adf                init_propt
                0x00000000c0004c0d                InitInterruptDesc
                0x00000000c0004c69                ReloadGDT
 .text          0x00000000c0004cf4      0xa28 console.o
                0x00000000c0004cf4                select_console
                0x00000000c0004d30                flush
                0x00000000c0004d69                set_cursor
                0x00000000c0004dc7                set_console_start_video_addr
                0x00000000c0004e25                put_key
                0x00000000c0004e91                scroll_up
                0x00000000c0004ed3                scroll_down
                0x00000000c0004f3e                out_char
                0x00000000c00050e5                tty_dev_read
                0x00000000c000510f                tty_dev_write
                0x00000000c0005316                tty_do_read
                0x00000000c00053a7                tty_do_write
                0x00000000c00054eb                init_screen
                0x00000000c000557f                init_tty
                0x00000000c0005619                TaskTTY
 .text          0x00000000c000571c      0x407 keyboard.o
                0x00000000c000571c                keyboard_handler
                0x00000000c000579e                read_from_keyboard_buf
                0x00000000c00057fe                keyboard_read
                0x00000000c000597d                init_keyboard_handler
                0x00000000c0005991                in_process
 .text          0x00000000c0005b23       0x85 open.o
                0x00000000c0005b23                open
 .text          0x00000000c0005ba8       0x74 read.o
                0x00000000c0005ba8                read
 .text          0x00000000c0005c1c       0x74 write.o
                0x00000000c0005c1c                write
 .text          0x00000000c0005c90       0x4c close.o
                0x00000000c0005c90                close
 .text          0x00000000c0005cdc       0x3e wait.o
                0x00000000c0005cdc                wait
 .text          0x00000000c0005d1a       0x29 exit.o
                0x00000000c0005d1a                exit
 .text          0x00000000c0005d43       0x5f fork.o
                0x00000000c0005d43                fork
 .text          0x00000000c0005da2       0x25 getpid.o
                0x00000000c0005da2                getpid
 .text          0x00000000c0005dc7      0x235 exec.o
                0x00000000c0005dc7                exec
                0x00000000c0005e32                execv
                0x00000000c0005fd7                execl
 .text          0x00000000c0005ffc       0x24 mm/main.o
                0x00000000c0005ffc                TaskMM
                0x00000000c0006001                alloc_mem
 .text          0x00000000c0006020      0x345 mm/exec.o
                0x00000000c0006020                do_exec2
                0x00000000c0006034                do_exec
 .text          0x00000000c0006365      0x425 mm/forkexit.o
                0x00000000c0006365                do_fork
                0x00000000c0006570                do_exit
                0x00000000c000666c                do_wait
                0x00000000c0006736                cleanup
 .text          0x00000000c000678a      0xe6d mem/mem.o
                0x00000000c000678a                init_bitmap
                0x00000000c00067ad                test_bit_val
                0x00000000c0006816                set_bit_val
                0x00000000c0006891                set_bits
                0x00000000c00068cb                get_first_free_bit
                0x00000000c000690f                get_bits
                0x00000000c00069d7                get_a_page2
                0x00000000c0006a06                get_a_page
                0x00000000c0006a95                get_virtual_address
                0x00000000c0006b25                ptr_pde
                0x00000000c0006b38                ptr_pte
                0x00000000c0006b5f                add_map_entry
                0x00000000c0006bed                alloc_virtual_memory
                0x00000000c0006c5a                get_physical_address
                0x00000000c0006c8c                alloc_memory
                0x00000000c0006cee                get_a_virtual_page
                0x00000000c0006d18                block2arena
                0x00000000c0006d2e                sys_malloc
                0x00000000c0006f45                remove_map_entry
                0x00000000c0006f66                free_a_page
                0x00000000c000700d                sys_free
                0x00000000c000717d                init_memory_block_desc
                0x00000000c000724e                init_memory2
                0x00000000c00074c5                init_memory
 .text          0x00000000c00075f7     0x2a3a kernel_main_old.o
                0x00000000c00075f7                untar
                0x00000000c0007801                atoi
                0x00000000c00078a7                disp_int
                0x00000000c00078d0                do_page_fault
                0x00000000c0007a0d                exception_handler
                0x00000000c0007bde                exception_handler2
                0x00000000c0007d7f                init_internal_interrupt
                0x00000000c0007ef4                test
                0x00000000c0007f2a                disp_str_colour3
                0x00000000c0007f30                spurious_irq
                0x00000000c0007fa9                init_keyboard
                0x00000000c0008016                init2
                0x00000000c0008044                u_thread_a
                0x00000000c000805c                kernel_main2
                0x00000000c00082c2                TestFS
                0x00000000c0008696                wait_exit
                0x00000000c0008764                INIT_fork
                0x00000000c0008a54                simple_shell
                0x00000000c0008c2b                test_split_str
                0x00000000c0008db8                test_shell
                0x00000000c0008e96                test_exec
                0x00000000c0008f5e                INIT
                0x00000000c0008f6b                TestA
                0x00000000c0008fa0                delay
                0x00000000c0008fe7                TestB
                0x00000000c0008fff                TestC
                0x00000000c0009032                sys_get_ticks
                0x00000000c000903c                sys_write
                0x00000000c0009090                milli_delay
                0x00000000c00090cc                TaskSys
                0x00000000c00090d1                Printf
                0x00000000c000912f                vsprintf
                0x00000000c00092db                printx
                0x00000000c000931e                sys_printx
                0x00000000c0009401                spin
                0x00000000c0009427                panic
                0x00000000c0009445                assertion_failure
                0x00000000c000947c                dead_lock
                0x00000000c0009486                sys_send_msg
                0x00000000c00097d8                sys_receive_msg
                0x00000000c0009c60                disp_str_colour_debug
                0x00000000c0009c66                send_rec
                0x00000000c0009d62                block
                0x00000000c0009d9e                unblock
                0x00000000c0009dee                get_ticks_ipc
                0x00000000c0009e39                itoa
                0x00000000c0009e8f                i2a
                0x00000000c0009ef5                inform_int
                0x00000000c0009fc2                strcmp
 .text          0x00000000c000a031      0x29b my_process.o
                0x00000000c000a031                create_user_process_address_space
                0x00000000c000a0c1                user_process
                0x00000000c000a18a                process_execute
 *fill*         0x00000000c000a2cc        0x4 
 .text          0x00000000c000a2d0       0x15 switch_to.o
                0x00000000c000a2d0                switch_to
 .text          0x00000000c000a2e5      0x12a double_link_list.o
                0x00000000c000a2e5                initDoubleLinkList
                0x00000000c000a313                isListEmpty
                0x00000000c000a334                appendToDoubleLinkList
                0x00000000c000a379                insertToDoubleLinkList
                0x00000000c000a3ba                popFromDoubleLinkList
 .text          0x00000000c000a40f      0x16c thread.o
                0x00000000c000a40f                kernel_thread
                0x00000000c000a427                thread_init
                0x00000000c000a48e                thread_create
                0x00000000c000a4c3                thread_start
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c000a580      0xbad
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c000a580       0x92 kernel_main.o
 *fill*         0x00000000c000a612        0x2 
 .rodata        0x00000000c000a614      0x188 hd.o
 .rodata        0x00000000c000a79c      0x187 fs_main.o
                0x00000000c000a79c                FSBUF_SIZE
 .rodata        0x00000000c000a923        0xe process.o
 .rodata        0x00000000c000a931       0x24 close.o
 .rodata        0x00000000c000a955       0x1b fork.o
 .rodata        0x00000000c000a970       0x31 exec.o
 *fill*         0x00000000c000a9a1        0x3 
 .rodata        0x00000000c000a9a4       0x37 mm/forkexit.o
 .rodata        0x00000000c000a9db        0x2 mem/mem.o
 *fill*         0x00000000c000a9dd        0x3 
 .rodata        0x00000000c000a9e0      0x74d kernel_main_old.o

.txt            0x00000000c000b12d       0xaa
 .txt           0x00000000c000b12d       0x82 string.o
                0x00000000c000b12d                Memcpy
                0x00000000c000b15b                Memset
                0x00000000c000b17a                Strcpy
                0x00000000c000b194                Strlen
 .txt           0x00000000c000b1af       0x28 hd_rdwt.o
                0x00000000c000b1af                read_port
                0x00000000c000b1c3                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c000b1d8     0x16fc
 *(.eh_frame)
 .eh_frame      0x00000000c000b1d8       0xfc kernel_main.o
 .eh_frame      0x00000000c000b2d4      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x00000000c000b518      0x27c fs_main.o
                                        0x294 (size before relaxing)
 .eh_frame      0x00000000c000b794       0xa0 process.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000b834      0x100 protect.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c000b934      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x00000000c000bb14       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000bbb4       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bbd4       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bbf4       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bc14       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bc34       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bc54       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bc74       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bc94       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bcb4       0x64 exec.o
                                         0x7c (size before relaxing)
 .eh_frame      0x00000000c000bd18       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x00000000c000bd54       0x4c mm/exec.o
                                         0x64 (size before relaxing)
 .eh_frame      0x00000000c000bda0       0x90 mm/forkexit.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x00000000c000be30      0x304 mem/mem.o
                                        0x31c (size before relaxing)
 .eh_frame      0x00000000c000c134      0x620 kernel_main_old.o
                                        0x638 (size before relaxing)
 .eh_frame      0x00000000c000c754       0x60 my_process.o
                                         0x78 (size before relaxing)
 .eh_frame      0x00000000c000c7b4       0xa0 double_link_list.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000c854       0x80 thread.o
                                         0x98 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c000e000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c000e000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c000e000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c000e000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c000e000        0x0
 *(.got)
 .got           0x00000000c000e000        0x0 kernel_sub.o
 *(.igot)
                0x00000000c000e000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c000e000        0x0
 *(.got.plt)
 .got.plt       0x00000000c000e000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x00000000c000e000        0x0 kernel_sub.o

.data           0x00000000c000e000      0x700
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000e000        0xf kernel_sub.o
 *fill*         0x00000000c000e00f        0x1 
 .data          0x00000000c000e010        0xf kernel.o
 .data          0x00000000c000e01f        0x0 kernel_main.o
 .data          0x00000000c000e01f        0x0 hd.o
 *fill*         0x00000000c000e01f        0x1 
 .data          0x00000000c000e020        0x0 syscall.o
 .data          0x00000000c000e020        0x0 fs_main.o
 .data          0x00000000c000e020       0xe0 global.o
                0x00000000c000e020                user_task_table
                0x00000000c000e060                sys_task_table
                0x00000000c000e0ec                sys_call_table
 .data          0x00000000c000e100        0x0 process.o
 .data          0x00000000c000e100        0x0 protect.o
 .data          0x00000000c000e100        0x0 console.o
 .data          0x00000000c000e100      0x600 keyboard.o
                0x00000000c000e100                keymap
 .data          0x00000000c000e700        0x0 open.o
 .data          0x00000000c000e700        0x0 read.o
 .data          0x00000000c000e700        0x0 write.o
 .data          0x00000000c000e700        0x0 close.o
 .data          0x00000000c000e700        0x0 wait.o
 .data          0x00000000c000e700        0x0 exit.o
 .data          0x00000000c000e700        0x0 fork.o
 .data          0x00000000c000e700        0x0 getpid.o
 .data          0x00000000c000e700        0x0 exec.o
 .data          0x00000000c000e700        0x0 mm/main.o
 .data          0x00000000c000e700        0x0 mm/exec.o
 .data          0x00000000c000e700        0x0 mm/forkexit.o
 .data          0x00000000c000e700        0x0 mem/mem.o
 .data          0x00000000c000e700        0x0 kernel_main_old.o
 .data          0x00000000c000e700        0x0 my_process.o
 .data          0x00000000c000e700        0x0 double_link_list.o
 .data          0x00000000c000e700        0x0 thread.o

.data1
 *(.data1)
                0x00000000c000e700                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c000e700                . = .
                0x00000000c000e700                __bss_start = .

.bss            0x00000000c000e700    0x756b0
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c000e700      0x800 kernel_sub.o
 .bss           0x00000000c000ef00      0x800 kernel.o
 .bss           0x00000000c000f700        0x0 kernel_main.o
 .bss           0x00000000c000f700        0x0 hd.o
 .bss           0x00000000c000f700        0x4 fs_main.o
                0x00000000c000f700                c
 .bss           0x00000000c000f704        0x0 global.o
 .bss           0x00000000c000f704        0x0 process.o
 .bss           0x00000000c000f704        0x0 protect.o
 .bss           0x00000000c000f704        0x0 console.o
 .bss           0x00000000c000f704        0x0 keyboard.o
 .bss           0x00000000c000f704        0x0 open.o
 .bss           0x00000000c000f704        0x0 read.o
 .bss           0x00000000c000f704        0x0 write.o
 .bss           0x00000000c000f704        0x0 close.o
 .bss           0x00000000c000f704        0x0 wait.o
 .bss           0x00000000c000f704        0x0 exit.o
 .bss           0x00000000c000f704        0x0 fork.o
 .bss           0x00000000c000f704        0x0 getpid.o
 .bss           0x00000000c000f704        0x0 exec.o
 .bss           0x00000000c000f704        0x0 mm/main.o
 .bss           0x00000000c000f704        0x0 mm/exec.o
 .bss           0x00000000c000f704        0x0 mm/forkexit.o
 .bss           0x00000000c000f704        0x0 mem/mem.o
 .bss           0x00000000c000f704        0x0 kernel_main_old.o
 .bss           0x00000000c000f704        0x0 my_process.o
 .bss           0x00000000c000f704        0x0 double_link_list.o
 .bss           0x00000000c000f704        0x0 thread.o
 *(COMMON)
 *fill*         0x00000000c000f704       0x1c 
 COMMON         0x00000000c000f720     0x2811 kernel_main.o
                0x00000000c000f720                current_tty
                0x00000000c000f724                is_e0
                0x00000000c000f728                idt_ptr
                0x00000000c000f730                pid
                0x00000000c000f734                KernelVirtualMemory
                0x00000000c000f740                dis_pos
                0x00000000c000f744                k_reenter
                0x00000000c000f760                gdt
                0x00000000c000fb60                proc_ready_table
                0x00000000c000fb64                pcaller
                0x00000000c000fb80                keyboard_buffer
                0x00000000c000fd8c                pcb_list
                0x00000000c000fda0                tty_table
                0x00000000c0011620                tss
                0x00000000c001168c                KernelPool
                0x00000000c001169c                counter
                0x00000000c00116a0                key_pressed
                0x00000000c00116a4                is_shift
                0x00000000c00116a8                gdt_ptr
                0x00000000c00116c0                idt
                0x00000000c0011ec0                ticks
                0x00000000c0011ec4                UserPool
                0x00000000c0011ed4                all_pcb_list
                0x00000000c0011f00                console_table
                0x00000000c0011f30                is_disp
 *fill*         0x00000000c0011f31        0xf 
 COMMON         0x00000000c0011f40      0x440 hd.o
                0x00000000c0011f40                hd_info
                0x00000000c0012180                hd_cache
 COMMON         0x00000000c0012380      0xe68 fs_main.o
                0x00000000c0012380                file_desc_table
                0x00000000c0012780                phy_super_block_buf
                0x00000000c0012784                phy_fsbuf
                0x00000000c00127a0                inode_table
                0x00000000c00131a0                super_block_buf
                0x00000000c00131a4                fsbuf
                0x00000000c00131c0                root
 *fill*         0x00000000c00131e8       0x18 
 COMMON         0x00000000c0013200    0x70bb0 global.o
                0x00000000c0013200                proc_stack
                0x00000000c0083200                kernel_mem_block_decs_array
                0x00000000c0083300                proc_table
                0x00000000c0083db0                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0083db0                . = ALIGN (0x4)
                0x00000000c0083db0                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0083db0                . = ALIGN (0x4)
                0x00000000c0083db0                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c0083db0                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o
 .comment       0x000000000000002c       0x2d mem/mem.o
 .comment       0x000000000000002c       0x2d kernel_main_old.o
 .comment       0x000000000000002c       0x2d my_process.o
 .comment       0x000000000000002c       0x2d double_link_list.o
 .comment       0x000000000000002c       0x2d thread.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x318
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel_main.o
 .debug_aranges
                0x0000000000000020       0x20 hd.o
 .debug_aranges
                0x0000000000000040       0x20 fs_main.o
 .debug_aranges
                0x0000000000000060       0x18 global.o
 .debug_aranges
                0x0000000000000078       0x20 process.o
 .debug_aranges
                0x0000000000000098       0x20 protect.o
 .debug_aranges
                0x00000000000000b8       0x20 console.o
 .debug_aranges
                0x00000000000000d8       0x20 keyboard.o
 .debug_aranges
                0x00000000000000f8       0x20 open.o
 .debug_aranges
                0x0000000000000118       0x20 read.o
 .debug_aranges
                0x0000000000000138       0x20 write.o
 .debug_aranges
                0x0000000000000158       0x20 close.o
 .debug_aranges
                0x0000000000000178       0x20 wait.o
 .debug_aranges
                0x0000000000000198       0x20 exit.o
 .debug_aranges
                0x00000000000001b8       0x20 fork.o
 .debug_aranges
                0x00000000000001d8       0x20 getpid.o
 .debug_aranges
                0x00000000000001f8       0x20 exec.o
 .debug_aranges
                0x0000000000000218       0x20 mm/main.o
 .debug_aranges
                0x0000000000000238       0x20 mm/exec.o
 .debug_aranges
                0x0000000000000258       0x20 mm/forkexit.o
 .debug_aranges
                0x0000000000000278       0x20 mem/mem.o
 .debug_aranges
                0x0000000000000298       0x20 kernel_main_old.o
 .debug_aranges
                0x00000000000002b8       0x20 my_process.o
 .debug_aranges
                0x00000000000002d8       0x20 double_link_list.o
 .debug_aranges
                0x00000000000002f8       0x20 thread.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000    0x19811
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0xe2c kernel_main.o
 .debug_info    0x0000000000000e2c     0x161b hd.o
 .debug_info    0x0000000000002447     0x1dff fs_main.o
 .debug_info    0x0000000000004246      0xd53 global.o
 .debug_info    0x0000000000004f99      0xe46 process.o
 .debug_info    0x0000000000005ddf     0x103c protect.o
 .debug_info    0x0000000000006e1b     0x10da console.o
 .debug_info    0x0000000000007ef5      0xe9f keyboard.o
 .debug_info    0x0000000000008d94      0xca7 open.o
 .debug_info    0x0000000000009a3b      0xccf read.o
 .debug_info    0x000000000000a70a      0xcd8 write.o
 .debug_info    0x000000000000b3e2      0xc6d close.o
 .debug_info    0x000000000000c04f      0xc78 wait.o
 .debug_info    0x000000000000ccc7      0xc6a exit.o
 .debug_info    0x000000000000d931      0xc5f fork.o
 .debug_info    0x000000000000e590      0xc5f getpid.o
 .debug_info    0x000000000000f1ef      0xdca exec.o
 .debug_info    0x000000000000ffb9      0xc7b mm/main.o
 .debug_info    0x0000000000010c34      0xf76 mm/exec.o
 .debug_info    0x0000000000011baa      0xefc mm/forkexit.o
 .debug_info    0x0000000000012aa6     0x18e8 mem/mem.o
 .debug_info    0x000000000001438e     0x2791 kernel_main_old.o
 .debug_info    0x0000000000016b1f      0xfce my_process.o
 .debug_info    0x0000000000017aed      0xe1e double_link_list.o
 .debug_info    0x000000000001890b      0xf06 thread.o

.debug_abbrev   0x0000000000000000     0x3345
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x1d6 kernel_main.o
 .debug_abbrev  0x00000000000001d6      0x2d0 hd.o
 .debug_abbrev  0x00000000000004a6      0x2dc fs_main.o
 .debug_abbrev  0x0000000000000782      0x157 global.o
 .debug_abbrev  0x00000000000008d9      0x201 process.o
 .debug_abbrev  0x0000000000000ada      0x212 protect.o
 .debug_abbrev  0x0000000000000cec      0x279 console.o
 .debug_abbrev  0x0000000000000f65      0x1fb keyboard.o
 .debug_abbrev  0x0000000000001160      0x1c5 open.o
 .debug_abbrev  0x0000000000001325      0x1c8 read.o
 .debug_abbrev  0x00000000000014ed      0x1c8 write.o
 .debug_abbrev  0x00000000000016b5      0x19d close.o
 .debug_abbrev  0x0000000000001852      0x19f wait.o
 .debug_abbrev  0x00000000000019f1      0x19b exit.o
 .debug_abbrev  0x0000000000001b8c      0x18a fork.o
 .debug_abbrev  0x0000000000001d16      0x18a getpid.o
 .debug_abbrev  0x0000000000001ea0      0x1d3 exec.o
 .debug_abbrev  0x0000000000002073      0x1ef mm/main.o
 .debug_abbrev  0x0000000000002262      0x1f5 mm/exec.o
 .debug_abbrev  0x0000000000002457      0x206 mm/forkexit.o
 .debug_abbrev  0x000000000000265d      0x2ea mem/mem.o
 .debug_abbrev  0x0000000000002947      0x3e3 kernel_main_old.o
 .debug_abbrev  0x0000000000002d2a      0x212 my_process.o
 .debug_abbrev  0x0000000000002f3c      0x1e7 double_link_list.o
 .debug_abbrev  0x0000000000003123      0x222 thread.o

.debug_line     0x0000000000000000     0x4238
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x152 kernel_main.o
 .debug_line    0x0000000000000152      0x590 hd.o
 .debug_line    0x00000000000006e2      0xbd9 fs_main.o
 .debug_line    0x00000000000012bb       0x95 global.o
 .debug_line    0x0000000000001350      0x18f process.o
 .debug_line    0x00000000000014df      0x1ef protect.o
 .debug_line    0x00000000000016ce      0x52d console.o
 .debug_line    0x0000000000001bfb      0x28a keyboard.o
 .debug_line    0x0000000000001e85       0xbc open.o
 .debug_line    0x0000000000001f41       0xb7 read.o
 .debug_line    0x0000000000001ff8       0xb8 write.o
 .debug_line    0x00000000000020b0       0xad close.o
 .debug_line    0x000000000000215d       0xb7 wait.o
 .debug_line    0x0000000000002214       0xa0 exit.o
 .debug_line    0x00000000000022b4       0xae fork.o
 .debug_line    0x0000000000002362       0xa0 getpid.o
 .debug_line    0x0000000000002402      0x15b exec.o
 .debug_line    0x000000000000255d       0x9f mm/main.o
 .debug_line    0x00000000000025fc      0x1d3 mm/exec.o
 .debug_line    0x00000000000027cf      0x202 mm/forkexit.o
 .debug_line    0x00000000000029d1      0x67a mem/mem.o
 .debug_line    0x000000000000304b      0xdcd kernel_main_old.o
 .debug_line    0x0000000000003e18      0x185 my_process.o
 .debug_line    0x0000000000003f9d      0x168 double_link_list.o
 .debug_line    0x0000000000004105      0x133 thread.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000     0x1b22
 *(.debug_str)
 .debug_str     0x0000000000000000      0x4d3 kernel_main.o
                                        0x5b5 (size before relaxing)
 .debug_str     0x00000000000004d3      0x2b4 hd.o
                                        0x836 (size before relaxing)
 .debug_str     0x0000000000000787      0x481 fs_main.o
                                        0xa2d (size before relaxing)
 .debug_str     0x0000000000000c08       0x25 global.o
                                        0x563 (size before relaxing)
 .debug_str     0x0000000000000c2d       0x3f process.o
                                        0x587 (size before relaxing)
 .debug_str     0x0000000000000c6c      0x10e protect.o
                                        0x67c (size before relaxing)
 .debug_str     0x0000000000000d7a      0x10d console.o
                                        0x657 (size before relaxing)
 .debug_str     0x0000000000000e87       0x84 keyboard.o
                                        0x5d3 (size before relaxing)
 .debug_str     0x0000000000000f0b       0x29 open.o
                                        0x506 (size before relaxing)
 .debug_str     0x0000000000000f34       0x1c read.o
                                        0x501 (size before relaxing)
 .debug_str     0x0000000000000f50        0xc write.o
                                        0x503 (size before relaxing)
 .debug_str     0x0000000000000f5c        0xc close.o
                                        0x4d7 (size before relaxing)
 .debug_str     0x0000000000000f68        0xb wait.o
                                        0x4dc (size before relaxing)
 .debug_str     0x0000000000000f73        0xb exit.o
                                        0x4dc (size before relaxing)
 .debug_str     0x0000000000000f7e        0xb fork.o
                                        0x4d5 (size before relaxing)
 .debug_str     0x0000000000000f89       0x14 getpid.o
                                        0x4d9 (size before relaxing)
 .debug_str     0x0000000000000f9d       0x2b exec.o
                                        0x4fe (size before relaxing)
 .debug_str     0x0000000000000fc8       0x52 mm/main.o
                                        0x4e9 (size before relaxing)
 .debug_str     0x000000000000101a      0x18f mm/exec.o
                                        0x649 (size before relaxing)
 .debug_str     0x00000000000011a9       0xab mm/forkexit.o
                                        0x596 (size before relaxing)
 .debug_str     0x0000000000001254      0x2e7 mem/mem.o
                                        0x8fd (size before relaxing)
 .debug_str     0x000000000000153b      0x47b kernel_main_old.o
                                        0xac1 (size before relaxing)
 .debug_str     0x00000000000019b6       0xac my_process.o
                                        0x6a2 (size before relaxing)
 .debug_str     0x0000000000001a62       0x76 double_link_list.o
                                        0x5c7 (size before relaxing)
 .debug_str     0x0000000000001ad8       0x4a thread.o
                                        0x644 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x78
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x48 hd.o
 .debug_ranges  0x0000000000000048       0x18 mm/exec.o
 .debug_ranges  0x0000000000000060       0x18 kernel_main_old.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
