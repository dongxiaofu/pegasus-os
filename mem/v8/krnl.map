
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
phy_super_block_buf
                    0x4               fs_main.o
phy_fsbuf           0x4               fs_main.o
idt_ptr             0x6               kernel_main.o
pid                 0x4               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
super_block_buf     0x4               fs_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
pcb_list            0x10              kernel_main.o
tty_table           0x186c            kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
fsbuf               0x4               fs_main.o
root                0x28              fs_main.o
kernel_mem_block_decs_array
                    0xf0              global.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
ticks               0x4               kernel_main.o
UserPool            0x10              kernel_main.o
all_pcb_list        0x10              kernel_main.o
console_table       0x30              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table          0xab0             global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mem/mem.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main_old.o
 .note.GNU-stack
                0x0000000000000000        0x0 my_process.o
 .note.GNU-stack
                0x0000000000000000        0x0 double_link_list.o
 .note.GNU-stack
                0x0000000000000000        0x0 thread.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
LOAD kernel_main_old.o
LOAD my_process.o
LOAD switch_to.o
LOAD double_link_list.o
LOAD thread.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x905b
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0x76 kernel_sub.o
                0x00000000c0001500                _start
 *fill*         0x00000000c0001576        0xa 
 .text          0x00000000c0001580      0x314 kernel.o
                0x00000000c0001580                InterruptTest
                0x00000000c000158c                disp_str
                0x00000000c00015c7                disp_str_colour
                0x00000000c0001603                divide_zero_fault
                0x00000000c0001609                single_step_fault
                0x00000000c000160f                non_maskable_interrupt
                0x00000000c0001615                breakpoint_trap
                0x00000000c000161b                overflow_trap
                0x00000000c0001621                bound_range_exceeded_fault
                0x00000000c0001627                invalid_opcode_fault
                0x00000000c000162d                coprocessor_not_available_fault
                0x00000000c0001633                double_fault_exception_abort
                0x00000000c0001637                coprocessor_segment_overrun
                0x00000000c000163d                invalid_task_state_segment_fault
                0x00000000c0001641                segment_not_present_fault
                0x00000000c0001645                stack_exception_fault
                0x00000000c0001649                general_protection_exception_fault
                0x00000000c000164d                page_fault
                0x00000000c0001651                coprocessor_error_fault
                0x00000000c0001657                align_check_fault
                0x00000000c000165b                simd_float_exception_fault
                0x00000000c000166a                hwint0
                0x00000000c0001698                hwint1
                0x00000000c00016dc                hwint14
                0x00000000c000171c                sys_call
                0x00000000c0001761                restart
                0x00000000c0001782                in_byte
                0x00000000c000178e                out_byte
                0x00000000c00017b0                disable_int
                0x00000000c00017b2                enable_int
                0x00000000c0001848                enable_8259A_casecade_irq
                0x00000000c0001852                disable_8259A_casecade_irq
                0x00000000c000185c                enable_8259A_slave_winchester_irq
                0x00000000c0001866                disable_8259A_slave_winchester_irq
                0x00000000c0001870                update_cr3
                0x00000000c000187d                update_tss
                0x00000000c000188c                get_running_thread_pcb
 .text          0x00000000c0001894      0x20d kernel_main.o
                0x00000000c0001894                kernel_main
                0x00000000c000191a                init
                0x00000000c000197c                kernel_thread_a
                0x00000000c00019de                kernel_thread_b
                0x00000000c0001a40                kernel_thread_c
                0x00000000c0001a56                kernel_thread_d
                0x00000000c0001a6c                user_proc_a
                0x00000000c0001a89                user_proc_b
 .text          0x00000000c0001aa1      0xcb5 hd.o
                0x00000000c0001aa1                TaskHD
                0x00000000c0001ad4                init_hd
                0x00000000c0001aee                hd_handle
                0x00000000c0001bb7                hd_cmd_out
                0x00000000c0001cb9                hd_identify
                0x00000000c0001d70                print_hdinfo
                0x00000000c0001efe                print_dpt_entry
                0x00000000c0001f6a                get_partition_table
                0x00000000c0002049                partition
                0x00000000c0002263                hd_open
                0x00000000c00022b2                get_hd_ioctl
                0x00000000c000230b                wait_for
                0x00000000c000233c                interrupt_wait
                0x00000000c000238d                hd_rdwt
                0x00000000c00025c1                hd_handler
                0x00000000c00025ed                waitfor
                0x00000000c0002631                print_hd_info
                0x00000000c000271e                is_empty
 *fill*         0x00000000c0002756        0xa 
 .text          0x00000000c0002760       0x74 syscall.o
                0x00000000c0002760                get_ticks
                0x00000000c0002768                write2
                0x00000000c0002778                write_debug
                0x00000000c0002798                send_msg
                0x00000000c00027be                receive_msg
 .text          0x00000000c00027d4     0x1f8a fs_main.o
                0x00000000c00027d4                task_fs
                0x00000000c000293b                rd_wt
                0x00000000c0002a04                mkfs
                0x00000000c000302a                init_fs
                0x00000000c000306e                do_open
                0x00000000c000323d                search_file
                0x00000000c000336f                strip_path
                0x00000000c000343b                get_inode
                0x00000000c00035fd                create_file
                0x00000000c0003708                alloc_imap_bit
                0x00000000c0003805                alloc_smap_bit
                0x00000000c00039a6                new_inode
                0x00000000c0003ac4                new_dir_entry
                0x00000000c0003cd0                do_unlink
                0x00000000c00041ac                do_rdwt
                0x00000000c0004512                sync_inode
                0x00000000c0004666                put_inode
                0x00000000c00046a4                do_close
                0x00000000c00046f6                get_super_block
 .text          0x00000000c000475e        0x0 global.o
 .text          0x00000000c000475e      0x20c process.o
                0x00000000c000475e                check
                0x00000000c00047d3                schedule_process
                0x00000000c00048d5                clock_handler
                0x00000000c00048e3                pid2proc
                0x00000000c0004953                proc2pid
 .text          0x00000000c000496a      0x360 protect.o
                0x00000000c000496a                InitDescriptor
                0x00000000c00049d7                Seg2PhyAddr
                0x00000000c0004a18                Seg2PhyAddrLDT
                0x00000000c0004a5c                VirAddr2PhyAddr
                0x00000000c0004a72                v2l
                0x00000000c0004ab5                init_propt
                0x00000000c0004be3                InitInterruptDesc
                0x00000000c0004c3f                ReloadGDT
 .text          0x00000000c0004cca      0xa89 console.o
                0x00000000c0004cca                select_console
                0x00000000c0004d06                flush
                0x00000000c0004d3f                set_cursor
                0x00000000c0004d9d                set_console_start_video_addr
                0x00000000c0004dfb                put_key
                0x00000000c0004e67                scroll_up
                0x00000000c0004ea9                scroll_down
                0x00000000c0004f14                out_char
                0x00000000c00050bb                tty_dev_read
                0x00000000c00050e5                tty_dev_write
                0x00000000c00052ec                tty_do_read
                0x00000000c000537d                tty_do_write
                0x00000000c00054c5                init_screen
                0x00000000c0005559                init_tty
                0x00000000c00055f3                TaskTTY
 .text          0x00000000c0005753      0x407 keyboard.o
                0x00000000c0005753                keyboard_handler
                0x00000000c00057d5                read_from_keyboard_buf
                0x00000000c0005835                keyboard_read
                0x00000000c00059b4                init_keyboard_handler
                0x00000000c00059c8                in_process
 .text          0x00000000c0005b5a       0x85 open.o
                0x00000000c0005b5a                open
 .text          0x00000000c0005bdf       0x37 read.o
                0x00000000c0005bdf                read
 .text          0x00000000c0005c16       0x55 write.o
                0x00000000c0005c16                write
 .text          0x00000000c0005c6b       0x4c close.o
                0x00000000c0005c6b                close
 .text          0x00000000c0005cb7       0x3e wait.o
                0x00000000c0005cb7                wait
 .text          0x00000000c0005cf5       0x29 exit.o
                0x00000000c0005cf5                exit
 .text          0x00000000c0005d1e       0x5f fork.o
                0x00000000c0005d1e                fork
 .text          0x00000000c0005d7d       0x25 getpid.o
                0x00000000c0005d7d                getpid
 .text          0x00000000c0005da2      0x235 exec.o
                0x00000000c0005da2                exec
                0x00000000c0005e0d                execv
                0x00000000c0005fb2                execl
 .text          0x00000000c0005fd7       0x24 mm/main.o
                0x00000000c0005fd7                TaskMM
                0x00000000c0005fdc                alloc_mem
 .text          0x00000000c0005ffb      0x345 mm/exec.o
                0x00000000c0005ffb                do_exec2
                0x00000000c000600f                do_exec
 .text          0x00000000c0006340      0x425 mm/forkexit.o
                0x00000000c0006340                do_fork
                0x00000000c000654b                do_exit
                0x00000000c0006647                do_wait
                0x00000000c0006711                cleanup
 .text          0x00000000c0006765      0xe6d mem/mem.o
                0x00000000c0006765                init_bitmap
                0x00000000c0006788                test_bit_val
                0x00000000c00067f1                set_bit_val
                0x00000000c000686c                set_bits
                0x00000000c00068a6                get_first_free_bit
                0x00000000c00068ea                get_bits
                0x00000000c00069b2                get_a_page2
                0x00000000c00069e1                get_a_page
                0x00000000c0006a70                get_virtual_address
                0x00000000c0006b00                ptr_pde
                0x00000000c0006b13                ptr_pte
                0x00000000c0006b3a                add_map_entry
                0x00000000c0006bc8                alloc_virtual_memory
                0x00000000c0006c35                get_physical_address
                0x00000000c0006c67                alloc_memory
                0x00000000c0006cc9                get_a_virtual_page
                0x00000000c0006cf3                block2arena
                0x00000000c0006d09                sys_malloc
                0x00000000c0006f20                remove_map_entry
                0x00000000c0006f41                free_a_page
                0x00000000c0006fe8                sys_free
                0x00000000c0007158                init_memory_block_desc
                0x00000000c0007229                init_memory2
                0x00000000c00074a0                init_memory
 .text          0x00000000c00075d2     0x2a39 kernel_main_old.o
                0x00000000c00075d2                untar
                0x00000000c00077dc                atoi
                0x00000000c0007882                disp_int
                0x00000000c00078ab                do_page_fault
                0x00000000c00079e8                exception_handler
                0x00000000c0007bb9                exception_handler2
                0x00000000c0007d5a                init_internal_interrupt
                0x00000000c0007ecf                test
                0x00000000c0007f05                disp_str_colour3
                0x00000000c0007f0b                spurious_irq
                0x00000000c0007f84                init_keyboard
                0x00000000c0007ff1                init2
                0x00000000c000801f                u_thread_a
                0x00000000c0008037                kernel_main2
                0x00000000c000829d                TestFS
                0x00000000c0008691                wait_exit
                0x00000000c000875f                INIT_fork
                0x00000000c0008a4f                simple_shell
                0x00000000c0008c26                test_split_str
                0x00000000c0008db3                test_shell
                0x00000000c0008e91                test_exec
                0x00000000c0008f59                INIT
                0x00000000c0008f66                TestA
                0x00000000c0008f9b                delay
                0x00000000c0008fe2                TestB
                0x00000000c0008ffa                TestC
                0x00000000c000902d                sys_get_ticks
                0x00000000c0009037                sys_write
                0x00000000c000908b                milli_delay
                0x00000000c00090c7                TaskSys
                0x00000000c00090cc                Printf
                0x00000000c000912a                vsprintf
                0x00000000c00092d6                printx
                0x00000000c0009319                sys_printx
                0x00000000c00093fc                spin
                0x00000000c0009401                panic
                0x00000000c000941f                assertion_failure
                0x00000000c0009456                dead_lock
                0x00000000c0009460                sys_send_msg
                0x00000000c00097b2                sys_receive_msg
                0x00000000c0009c3a                disp_str_colour_debug
                0x00000000c0009c40                send_rec
                0x00000000c0009d3c                block
                0x00000000c0009d78                unblock
                0x00000000c0009dc8                get_ticks_ipc
                0x00000000c0009e13                itoa
                0x00000000c0009e69                i2a
                0x00000000c0009ecf                inform_int
                0x00000000c0009f9c                strcmp
 .text          0x00000000c000a00b      0x29b my_process.o
                0x00000000c000a00b                create_user_process_address_space
                0x00000000c000a09b                user_process
                0x00000000c000a164                process_execute
 *fill*         0x00000000c000a2a6        0xa 
 .text          0x00000000c000a2b0       0x15 switch_to.o
                0x00000000c000a2b0                switch_to
 .text          0x00000000c000a2c5      0x12a double_link_list.o
                0x00000000c000a2c5                initDoubleLinkList
                0x00000000c000a2f3                isListEmpty
                0x00000000c000a314                appendToDoubleLinkList
                0x00000000c000a359                insertToDoubleLinkList
                0x00000000c000a39a                popFromDoubleLinkList
 .text          0x00000000c000a3ef      0x16c thread.o
                0x00000000c000a3ef                kernel_thread
                0x00000000c000a407                thread_init
                0x00000000c000a46e                thread_create
                0x00000000c000a4a3                thread_start
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c000a560      0xb75
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c000a560       0x92 kernel_main.o
 .rodata        0x00000000c000a5f2      0x10e hd.o
 .rodata        0x00000000c000a700      0x187 fs_main.o
                0x00000000c000a700                FSBUF_SIZE
 .rodata        0x00000000c000a887        0xe process.o
 .rodata        0x00000000c000a895       0x10 console.o
 .rodata        0x00000000c000a8a5       0x24 close.o
 .rodata        0x00000000c000a8c9       0x1b fork.o
 .rodata        0x00000000c000a8e4       0x31 exec.o
 *fill*         0x00000000c000a915        0x3 
 .rodata        0x00000000c000a918       0x37 mm/forkexit.o
 .rodata        0x00000000c000a94f        0x2 mem/mem.o
 *fill*         0x00000000c000a951        0xf 
 .rodata        0x00000000c000a960      0x775 kernel_main_old.o

.txt            0x00000000c000b0d5       0xaa
 .txt           0x00000000c000b0d5       0x82 string.o
                0x00000000c000b0d5                Memcpy
                0x00000000c000b103                Memset
                0x00000000c000b122                Strcpy
                0x00000000c000b13c                Strlen
 .txt           0x00000000c000b157       0x28 hd_rdwt.o
                0x00000000c000b157                read_port
                0x00000000c000b16b                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c000b180     0x16fc
 *(.eh_frame)
 .eh_frame      0x00000000c000b180       0xfc kernel_main.o
 .eh_frame      0x00000000c000b27c      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x00000000c000b4c0      0x27c fs_main.o
                                        0x294 (size before relaxing)
 .eh_frame      0x00000000c000b73c       0xa0 process.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000b7dc      0x100 protect.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c000b8dc      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x00000000c000babc       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000bb5c       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bb7c       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bb9c       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bbbc       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bbdc       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bbfc       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bc1c       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bc3c       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000bc5c       0x64 exec.o
                                         0x7c (size before relaxing)
 .eh_frame      0x00000000c000bcc0       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x00000000c000bcfc       0x4c mm/exec.o
                                         0x64 (size before relaxing)
 .eh_frame      0x00000000c000bd48       0x90 mm/forkexit.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x00000000c000bdd8      0x304 mem/mem.o
                                        0x31c (size before relaxing)
 .eh_frame      0x00000000c000c0dc      0x620 kernel_main_old.o
                                        0x638 (size before relaxing)
 .eh_frame      0x00000000c000c6fc       0x60 my_process.o
                                         0x78 (size before relaxing)
 .eh_frame      0x00000000c000c75c       0xa0 double_link_list.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000c7fc       0x80 thread.o
                                         0x98 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c000e000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c000e000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c000e000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c000e000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c000e000        0x0
 *(.got)
 .got           0x00000000c000e000        0x0 kernel_sub.o
 *(.igot)
                0x00000000c000e000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c000e000        0x0
 *(.got.plt)
 .got.plt       0x00000000c000e000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x00000000c000e000        0x0 kernel_sub.o

.data           0x00000000c000e000      0x700
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000e000        0xf kernel_sub.o
 *fill*         0x00000000c000e00f        0x1 
 .data          0x00000000c000e010        0xf kernel.o
 .data          0x00000000c000e01f        0x0 kernel_main.o
 .data          0x00000000c000e01f        0x0 hd.o
 *fill*         0x00000000c000e01f        0x1 
 .data          0x00000000c000e020        0x0 syscall.o
 .data          0x00000000c000e020        0x0 fs_main.o
 .data          0x00000000c000e020       0xe0 global.o
                0x00000000c000e020                user_task_table
                0x00000000c000e060                sys_task_table
                0x00000000c000e0ec                sys_call_table
 .data          0x00000000c000e100        0x0 process.o
 .data          0x00000000c000e100        0x0 protect.o
 .data          0x00000000c000e100        0x0 console.o
 .data          0x00000000c000e100      0x600 keyboard.o
                0x00000000c000e100                keymap
 .data          0x00000000c000e700        0x0 open.o
 .data          0x00000000c000e700        0x0 read.o
 .data          0x00000000c000e700        0x0 write.o
 .data          0x00000000c000e700        0x0 close.o
 .data          0x00000000c000e700        0x0 wait.o
 .data          0x00000000c000e700        0x0 exit.o
 .data          0x00000000c000e700        0x0 fork.o
 .data          0x00000000c000e700        0x0 getpid.o
 .data          0x00000000c000e700        0x0 exec.o
 .data          0x00000000c000e700        0x0 mm/main.o
 .data          0x00000000c000e700        0x0 mm/exec.o
 .data          0x00000000c000e700        0x0 mm/forkexit.o
 .data          0x00000000c000e700        0x0 mem/mem.o
 .data          0x00000000c000e700        0x0 kernel_main_old.o
 .data          0x00000000c000e700        0x0 my_process.o
 .data          0x00000000c000e700        0x0 double_link_list.o
 .data          0x00000000c000e700        0x0 thread.o

.data1
 *(.data1)
                0x00000000c000e700                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c000e700                . = .
                0x00000000c000e700                __bss_start = .

.bss            0x00000000c000e700    0x756b0
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c000e700      0x800 kernel_sub.o
 .bss           0x00000000c000ef00      0x800 kernel.o
 .bss           0x00000000c000f700        0x0 kernel_main.o
 .bss           0x00000000c000f700        0x0 hd.o
 .bss           0x00000000c000f700        0x4 fs_main.o
                0x00000000c000f700                c
 .bss           0x00000000c000f704        0x0 global.o
 .bss           0x00000000c000f704        0x0 process.o
 .bss           0x00000000c000f704        0x0 protect.o
 .bss           0x00000000c000f704        0x0 console.o
 .bss           0x00000000c000f704        0x0 keyboard.o
 .bss           0x00000000c000f704        0x0 open.o
 .bss           0x00000000c000f704        0x0 read.o
 .bss           0x00000000c000f704        0x0 write.o
 .bss           0x00000000c000f704        0x0 close.o
 .bss           0x00000000c000f704        0x0 wait.o
 .bss           0x00000000c000f704        0x0 exit.o
 .bss           0x00000000c000f704        0x0 fork.o
 .bss           0x00000000c000f704        0x0 getpid.o
 .bss           0x00000000c000f704        0x0 exec.o
 .bss           0x00000000c000f704        0x0 mm/main.o
 .bss           0x00000000c000f704        0x0 mm/exec.o
 .bss           0x00000000c000f704        0x0 mm/forkexit.o
 .bss           0x00000000c000f704        0x0 mem/mem.o
 .bss           0x00000000c000f704        0x0 kernel_main_old.o
 .bss           0x00000000c000f704        0x0 my_process.o
 .bss           0x00000000c000f704        0x0 double_link_list.o
 .bss           0x00000000c000f704        0x0 thread.o
 *(COMMON)
 *fill*         0x00000000c000f704       0x1c 
 COMMON         0x00000000c000f720     0x2811 kernel_main.o
                0x00000000c000f720                current_tty
                0x00000000c000f724                is_e0
                0x00000000c000f728                idt_ptr
                0x00000000c000f730                pid
                0x00000000c000f734                KernelVirtualMemory
                0x00000000c000f740                dis_pos
                0x00000000c000f744                k_reenter
                0x00000000c000f760                gdt
                0x00000000c000fb60                proc_ready_table
                0x00000000c000fb64                pcaller
                0x00000000c000fb80                keyboard_buffer
                0x00000000c000fd8c                pcb_list
                0x00000000c000fda0                tty_table
                0x00000000c0011620                tss
                0x00000000c001168c                KernelPool
                0x00000000c001169c                counter
                0x00000000c00116a0                key_pressed
                0x00000000c00116a4                is_shift
                0x00000000c00116a8                gdt_ptr
                0x00000000c00116c0                idt
                0x00000000c0011ec0                ticks
                0x00000000c0011ec4                UserPool
                0x00000000c0011ed4                all_pcb_list
                0x00000000c0011f00                console_table
                0x00000000c0011f30                is_disp
 *fill*         0x00000000c0011f31        0xf 
 COMMON         0x00000000c0011f40      0x440 hd.o
                0x00000000c0011f40                hd_info
                0x00000000c0012180                hd_cache
 COMMON         0x00000000c0012380      0xe68 fs_main.o
                0x00000000c0012380                file_desc_table
                0x00000000c0012780                phy_super_block_buf
                0x00000000c0012784                phy_fsbuf
                0x00000000c00127a0                inode_table
                0x00000000c00131a0                super_block_buf
                0x00000000c00131a4                fsbuf
                0x00000000c00131c0                root
 *fill*         0x00000000c00131e8       0x18 
 COMMON         0x00000000c0013200    0x70bb0 global.o
                0x00000000c0013200                proc_stack
                0x00000000c0083200                kernel_mem_block_decs_array
                0x00000000c0083300                proc_table
                0x00000000c0083db0                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0083db0                . = ALIGN (0x4)
                0x00000000c0083db0                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0083db0                . = ALIGN (0x4)
                0x00000000c0083db0                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c0083db0                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o
 .comment       0x000000000000002c       0x2d mem/mem.o
 .comment       0x000000000000002c       0x2d kernel_main_old.o
 .comment       0x000000000000002c       0x2d my_process.o
 .comment       0x000000000000002c       0x2d double_link_list.o
 .comment       0x000000000000002c       0x2d thread.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x318
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel_main.o
 .debug_aranges
                0x0000000000000020       0x20 hd.o
 .debug_aranges
                0x0000000000000040       0x20 fs_main.o
 .debug_aranges
                0x0000000000000060       0x18 global.o
 .debug_aranges
                0x0000000000000078       0x20 process.o
 .debug_aranges
                0x0000000000000098       0x20 protect.o
 .debug_aranges
                0x00000000000000b8       0x20 console.o
 .debug_aranges
                0x00000000000000d8       0x20 keyboard.o
 .debug_aranges
                0x00000000000000f8       0x20 open.o
 .debug_aranges
                0x0000000000000118       0x20 read.o
 .debug_aranges
                0x0000000000000138       0x20 write.o
 .debug_aranges
                0x0000000000000158       0x20 close.o
 .debug_aranges
                0x0000000000000178       0x20 wait.o
 .debug_aranges
                0x0000000000000198       0x20 exit.o
 .debug_aranges
                0x00000000000001b8       0x20 fork.o
 .debug_aranges
                0x00000000000001d8       0x20 getpid.o
 .debug_aranges
                0x00000000000001f8       0x20 exec.o
 .debug_aranges
                0x0000000000000218       0x20 mm/main.o
 .debug_aranges
                0x0000000000000238       0x20 mm/exec.o
 .debug_aranges
                0x0000000000000258       0x20 mm/forkexit.o
 .debug_aranges
                0x0000000000000278       0x20 mem/mem.o
 .debug_aranges
                0x0000000000000298       0x20 kernel_main_old.o
 .debug_aranges
                0x00000000000002b8       0x20 my_process.o
 .debug_aranges
                0x00000000000002d8       0x20 double_link_list.o
 .debug_aranges
                0x00000000000002f8       0x20 thread.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000    0x19788
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0xe2c kernel_main.o
 .debug_info    0x0000000000000e2c     0x1617 hd.o
 .debug_info    0x0000000000002443     0x1dff fs_main.o
 .debug_info    0x0000000000004242      0xd53 global.o
 .debug_info    0x0000000000004f95      0xe46 process.o
 .debug_info    0x0000000000005ddb     0x103c protect.o
 .debug_info    0x0000000000006e17     0x10da console.o
 .debug_info    0x0000000000007ef1      0xe9f keyboard.o
 .debug_info    0x0000000000008d90      0xca7 open.o
 .debug_info    0x0000000000009a37      0xc8d read.o
 .debug_info    0x000000000000a6c4      0xc95 write.o
 .debug_info    0x000000000000b359      0xc6d close.o
 .debug_info    0x000000000000bfc6      0xc78 wait.o
 .debug_info    0x000000000000cc3e      0xc6a exit.o
 .debug_info    0x000000000000d8a8      0xc5f fork.o
 .debug_info    0x000000000000e507      0xc5f getpid.o
 .debug_info    0x000000000000f166      0xdca exec.o
 .debug_info    0x000000000000ff30      0xc7b mm/main.o
 .debug_info    0x0000000000010bab      0xf76 mm/exec.o
 .debug_info    0x0000000000011b21      0xefc mm/forkexit.o
 .debug_info    0x0000000000012a1d     0x18e8 mem/mem.o
 .debug_info    0x0000000000014305     0x2791 kernel_main_old.o
 .debug_info    0x0000000000016a96      0xfce my_process.o
 .debug_info    0x0000000000017a64      0xe1e double_link_list.o
 .debug_info    0x0000000000018882      0xf06 thread.o

.debug_abbrev   0x0000000000000000     0x331f
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x1d6 kernel_main.o
 .debug_abbrev  0x00000000000001d6      0x2d0 hd.o
 .debug_abbrev  0x00000000000004a6      0x2dc fs_main.o
 .debug_abbrev  0x0000000000000782      0x157 global.o
 .debug_abbrev  0x00000000000008d9      0x201 process.o
 .debug_abbrev  0x0000000000000ada      0x212 protect.o
 .debug_abbrev  0x0000000000000cec      0x279 console.o
 .debug_abbrev  0x0000000000000f65      0x1fb keyboard.o
 .debug_abbrev  0x0000000000001160      0x1c5 open.o
 .debug_abbrev  0x0000000000001325      0x1b5 read.o
 .debug_abbrev  0x00000000000014da      0x1b5 write.o
 .debug_abbrev  0x000000000000168f      0x19d close.o
 .debug_abbrev  0x000000000000182c      0x19f wait.o
 .debug_abbrev  0x00000000000019cb      0x19b exit.o
 .debug_abbrev  0x0000000000001b66      0x18a fork.o
 .debug_abbrev  0x0000000000001cf0      0x18a getpid.o
 .debug_abbrev  0x0000000000001e7a      0x1d3 exec.o
 .debug_abbrev  0x000000000000204d      0x1ef mm/main.o
 .debug_abbrev  0x000000000000223c      0x1f5 mm/exec.o
 .debug_abbrev  0x0000000000002431      0x206 mm/forkexit.o
 .debug_abbrev  0x0000000000002637      0x2ea mem/mem.o
 .debug_abbrev  0x0000000000002921      0x3e3 kernel_main_old.o
 .debug_abbrev  0x0000000000002d04      0x212 my_process.o
 .debug_abbrev  0x0000000000002f16      0x1e7 double_link_list.o
 .debug_abbrev  0x00000000000030fd      0x222 thread.o

.debug_line     0x0000000000000000     0x422b
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x152 kernel_main.o
 .debug_line    0x0000000000000152      0x56a hd.o
 .debug_line    0x00000000000006bc      0xbee fs_main.o
 .debug_line    0x00000000000012aa       0x95 global.o
 .debug_line    0x000000000000133f      0x18f process.o
 .debug_line    0x00000000000014ce      0x1ef protect.o
 .debug_line    0x00000000000016bd      0x549 console.o
 .debug_line    0x0000000000001c06      0x28a keyboard.o
 .debug_line    0x0000000000001e90       0xbc open.o
 .debug_line    0x0000000000001f4c       0xa7 read.o
 .debug_line    0x0000000000001ff3       0xae write.o
 .debug_line    0x00000000000020a1       0xad close.o
 .debug_line    0x000000000000214e       0xb7 wait.o
 .debug_line    0x0000000000002205       0xa0 exit.o
 .debug_line    0x00000000000022a5       0xae fork.o
 .debug_line    0x0000000000002353       0xa0 getpid.o
 .debug_line    0x00000000000023f3      0x15b exec.o
 .debug_line    0x000000000000254e       0x9f mm/main.o
 .debug_line    0x00000000000025ed      0x1d3 mm/exec.o
 .debug_line    0x00000000000027c0      0x202 mm/forkexit.o
 .debug_line    0x00000000000029c2      0x67a mem/mem.o
 .debug_line    0x000000000000303c      0xdcf kernel_main_old.o
 .debug_line    0x0000000000003e0b      0x185 my_process.o
 .debug_line    0x0000000000003f90      0x168 double_link_list.o
 .debug_line    0x00000000000040f8      0x133 thread.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000     0x1b10
 *(.debug_str)
 .debug_str     0x0000000000000000      0x4d3 kernel_main.o
                                        0x5b5 (size before relaxing)
 .debug_str     0x00000000000004d3      0x2b4 hd.o
                                        0x836 (size before relaxing)
 .debug_str     0x0000000000000787      0x481 fs_main.o
                                        0xa2d (size before relaxing)
 .debug_str     0x0000000000000c08       0x25 global.o
                                        0x563 (size before relaxing)
 .debug_str     0x0000000000000c2d       0x3f process.o
                                        0x587 (size before relaxing)
 .debug_str     0x0000000000000c6c      0x10e protect.o
                                        0x67c (size before relaxing)
 .debug_str     0x0000000000000d7a      0x103 console.o
                                        0x64d (size before relaxing)
 .debug_str     0x0000000000000e7d       0x84 keyboard.o
                                        0x5d3 (size before relaxing)
 .debug_str     0x0000000000000f01       0x29 open.o
                                        0x506 (size before relaxing)
 .debug_str     0x0000000000000f2a        0xb read.o
                                        0x4db (size before relaxing)
 .debug_str     0x0000000000000f35        0xc write.o
                                        0x4dd (size before relaxing)
 .debug_str     0x0000000000000f41        0xc close.o
                                        0x4d7 (size before relaxing)
 .debug_str     0x0000000000000f4d        0xb wait.o
                                        0x4dc (size before relaxing)
 .debug_str     0x0000000000000f58        0xb exit.o
                                        0x4dc (size before relaxing)
 .debug_str     0x0000000000000f63        0xb fork.o
                                        0x4d5 (size before relaxing)
 .debug_str     0x0000000000000f6e       0x14 getpid.o
                                        0x4d9 (size before relaxing)
 .debug_str     0x0000000000000f82       0x2b exec.o
                                        0x4fe (size before relaxing)
 .debug_str     0x0000000000000fad       0x52 mm/main.o
                                        0x4e9 (size before relaxing)
 .debug_str     0x0000000000000fff      0x18f mm/exec.o
                                        0x649 (size before relaxing)
 .debug_str     0x000000000000118e       0xab mm/forkexit.o
                                        0x596 (size before relaxing)
 .debug_str     0x0000000000001239      0x2e7 mem/mem.o
                                        0x8fd (size before relaxing)
 .debug_str     0x0000000000001520      0x484 kernel_main_old.o
                                        0xac1 (size before relaxing)
 .debug_str     0x00000000000019a4       0xac my_process.o
                                        0x6a2 (size before relaxing)
 .debug_str     0x0000000000001a50       0x76 double_link_list.o
                                        0x5c7 (size before relaxing)
 .debug_str     0x0000000000001ac6       0x4a thread.o
                                        0x644 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x78
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x48 hd.o
 .debug_ranges  0x0000000000000048       0x18 mm/exec.o
 .debug_ranges  0x0000000000000060       0x18 kernel_main_old.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
