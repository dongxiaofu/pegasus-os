
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
idt_ptr             0x6               kernel_main.o
pid                 0x4               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
pcb_list            0x10              kernel_main.o
tty_table           0x186c            kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
root                0x28              fs_main.o
kernel_mem_block_decs_array
                    0xf0              global.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
ticks               0x4               kernel_main.o
UserPool            0x10              kernel_main.o
all_pcb_list        0x10              kernel_main.o
console_table       0x30              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table          0x6c0             global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mem/mem.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main_old.o
 .note.GNU-stack
                0x0000000000000000        0x0 my_process.o
 .note.GNU-stack
                0x0000000000000000        0x0 double_link_list.o
 .note.GNU-stack
                0x0000000000000000        0x0 thread.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
LOAD kernel_main_old.o
LOAD my_process.o
LOAD switch_to.o
LOAD double_link_list.o
LOAD thread.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x8c2b
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0x76 kernel_sub.o
                0x00000000c0001500                _start
 *fill*         0x00000000c0001576        0xa 
 .text          0x00000000c0001580      0x319 kernel.o
                0x00000000c0001580                InterruptTest
                0x00000000c000158c                disp_str
                0x00000000c00015c7                disp_str_colour
                0x00000000c0001603                divide_zero_fault
                0x00000000c0001609                single_step_fault
                0x00000000c000160f                non_maskable_interrupt
                0x00000000c0001615                breakpoint_trap
                0x00000000c000161b                overflow_trap
                0x00000000c0001621                bound_range_exceeded_fault
                0x00000000c0001627                invalid_opcode_fault
                0x00000000c000162d                coprocessor_not_available_fault
                0x00000000c0001633                double_fault_exception_abort
                0x00000000c0001637                coprocessor_segment_overrun
                0x00000000c000163d                invalid_task_state_segment_fault
                0x00000000c0001641                segment_not_present_fault
                0x00000000c0001645                stack_exception_fault
                0x00000000c0001649                general_protection_exception_fault
                0x00000000c000164d                page_fault
                0x00000000c0001651                coprocessor_error_fault
                0x00000000c0001657                align_check_fault
                0x00000000c000165b                simd_float_exception_fault
                0x00000000c000166a                hwint0
                0x00000000c0001698                hwint1
                0x00000000c00016dc                hwint14
                0x00000000c0001721                sys_call
                0x00000000c0001766                restart
                0x00000000c0001787                in_byte
                0x00000000c0001793                out_byte
                0x00000000c00017b5                disable_int
                0x00000000c00017b7                enable_int
                0x00000000c000184d                enable_8259A_casecade_irq
                0x00000000c0001857                disable_8259A_casecade_irq
                0x00000000c0001861                enable_8259A_slave_winchester_irq
                0x00000000c000186b                disable_8259A_slave_winchester_irq
                0x00000000c0001875                update_cr3
                0x00000000c0001882                update_tss
                0x00000000c0001891                get_running_thread_pcb
 .text          0x00000000c0001899      0x1f3 kernel_main.o
                0x00000000c0001899                kernel_main
                0x00000000c0001905                init
                0x00000000c0001967                kernel_thread_a
                0x00000000c00019c9                kernel_thread_b
                0x00000000c0001a2b                kernel_thread_c
                0x00000000c0001a41                kernel_thread_d
                0x00000000c0001a57                user_proc_a
                0x00000000c0001a74                user_proc_b
 .text          0x00000000c0001a8c      0xc60 hd.o
                0x00000000c0001a8c                TaskHD
                0x00000000c0001a91                init_hd
                0x00000000c0001aab                hd_handle
                0x00000000c0001b74                hd_cmd_out
                0x00000000c0001c76                hd_identify
                0x00000000c0001d2d                print_hdinfo
                0x00000000c0001ebb                print_dpt_entry
                0x00000000c0001f27                get_partition_table
                0x00000000c0002006                partition
                0x00000000c0002220                hd_open
                0x00000000c000226f                get_hd_ioctl
                0x00000000c00022c8                wait_for
                0x00000000c00022f9                interrupt_wait
                0x00000000c0002318                hd_rdwt
                0x00000000c000254a                hd_handler
                0x00000000c0002576                waitfor
                0x00000000c00025c7                print_hd_info
                0x00000000c00026b4                is_empty
 *fill*         0x00000000c00026ec        0x4 
 .text          0x00000000c00026f0       0x74 syscall.o
                0x00000000c00026f0                get_ticks
                0x00000000c00026f8                write2
                0x00000000c0002708                write_debug
                0x00000000c0002728                send_msg
                0x00000000c000274e                receive_msg
 .text          0x00000000c0002764     0x1fa3 fs_main.o
                0x00000000c0002764                task_fs
                0x00000000c0002989                rd_wt
                0x00000000c0002a2d                mkfs
                0x00000000c0002fed                init_fs
                0x00000000c000301c                do_open
                0x00000000c00031eb                search_file
                0x00000000c000331b                strip_path
                0x00000000c00033e7                get_inode
                0x00000000c00035a9                create_file
                0x00000000c00036b4                alloc_imap_bit
                0x00000000c00037b1                alloc_smap_bit
                0x00000000c0003952                new_inode
                0x00000000c0003a70                new_dir_entry
                0x00000000c0003c78                do_unlink
                0x00000000c0004148                do_rdwt
                0x00000000c00044bb                sync_inode
                0x00000000c000460f                put_inode
                0x00000000c000464d                do_close
                0x00000000c000469f                get_super_block
 .text          0x00000000c0004707        0x0 global.o
 .text          0x00000000c0004707      0x20c process.o
                0x00000000c0004707                check
                0x00000000c000477c                schedule_process
                0x00000000c000487e                clock_handler
                0x00000000c000488c                pid2proc
                0x00000000c00048fc                proc2pid
 .text          0x00000000c0004913      0x360 protect.o
                0x00000000c0004913                InitDescriptor
                0x00000000c0004980                Seg2PhyAddr
                0x00000000c00049c1                Seg2PhyAddrLDT
                0x00000000c0004a05                VirAddr2PhyAddr
                0x00000000c0004a1b                v2l
                0x00000000c0004a5e                init_propt
                0x00000000c0004b8c                InitInterruptDesc
                0x00000000c0004be8                ReloadGDT
 .text          0x00000000c0004c73      0xa89 console.o
                0x00000000c0004c73                select_console
                0x00000000c0004caf                flush
                0x00000000c0004ce8                set_cursor
                0x00000000c0004d46                set_console_start_video_addr
                0x00000000c0004da4                put_key
                0x00000000c0004e10                scroll_up
                0x00000000c0004e52                scroll_down
                0x00000000c0004ebd                out_char
                0x00000000c0005064                tty_dev_read
                0x00000000c000508e                tty_dev_write
                0x00000000c0005295                tty_do_read
                0x00000000c0005326                tty_do_write
                0x00000000c000546e                init_screen
                0x00000000c0005502                init_tty
                0x00000000c000559c                TaskTTY
 .text          0x00000000c00056fc      0x407 keyboard.o
                0x00000000c00056fc                keyboard_handler
                0x00000000c000577e                read_from_keyboard_buf
                0x00000000c00057de                keyboard_read
                0x00000000c000595d                init_keyboard_handler
                0x00000000c0005971                in_process
 .text          0x00000000c0005b03       0x85 open.o
                0x00000000c0005b03                open
 .text          0x00000000c0005b88       0x37 read.o
                0x00000000c0005b88                read
 .text          0x00000000c0005bbf       0x55 write.o
                0x00000000c0005bbf                write
 .text          0x00000000c0005c14       0x4c close.o
                0x00000000c0005c14                close
 .text          0x00000000c0005c60       0x3e wait.o
                0x00000000c0005c60                wait
 .text          0x00000000c0005c9e       0x29 exit.o
                0x00000000c0005c9e                exit
 .text          0x00000000c0005cc7       0x5f fork.o
                0x00000000c0005cc7                fork
 .text          0x00000000c0005d26       0x25 getpid.o
                0x00000000c0005d26                getpid
 .text          0x00000000c0005d4b      0x235 exec.o
                0x00000000c0005d4b                exec
                0x00000000c0005db6                execv
                0x00000000c0005f5b                execl
 .text          0x00000000c0005f80       0x24 mm/main.o
                0x00000000c0005f80                TaskMM
                0x00000000c0005f85                alloc_mem
 .text          0x00000000c0005fa4      0x345 mm/exec.o
                0x00000000c0005fa4                do_exec2
                0x00000000c0005fb8                do_exec
 .text          0x00000000c00062e9      0x425 mm/forkexit.o
                0x00000000c00062e9                do_fork
                0x00000000c00064f4                do_exit
                0x00000000c00065f0                do_wait
                0x00000000c00066ba                cleanup
 .text          0x00000000c000670e      0xe68 mem/mem.o
                0x00000000c000670e                init_bitmap
                0x00000000c0006731                test_bit_val
                0x00000000c000679a                set_bit_val
                0x00000000c0006815                set_bits
                0x00000000c000684f                get_first_free_bit
                0x00000000c0006893                get_bits
                0x00000000c000695b                get_a_page2
                0x00000000c000698a                get_a_page
                0x00000000c0006a19                get_virtual_address
                0x00000000c0006aa9                ptr_pde
                0x00000000c0006abc                ptr_pte
                0x00000000c0006ae3                add_map_entry
                0x00000000c0006b71                alloc_virtual_memory
                0x00000000c0006bde                get_physical_address
                0x00000000c0006c10                alloc_memory
                0x00000000c0006c72                get_a_virtual_page
                0x00000000c0006c9c                block2arena
                0x00000000c0006cb2                sys_malloc
                0x00000000c0006ec4                remove_map_entry
                0x00000000c0006ee5                free_a_page
                0x00000000c0006f8c                sys_free
                0x00000000c00070fc                init_memory_block_desc
                0x00000000c00071cd                init_memory2
                0x00000000c0007444                init_memory
 .text          0x00000000c0007576     0x266f kernel_main_old.o
                0x00000000c0007576                untar
                0x00000000c0007780                atoi
                0x00000000c0007826                disp_int
                0x00000000c000784f                do_page_fault
                0x00000000c0007982                exception_handler
                0x00000000c0007b49                exception_handler2
                0x00000000c0007cea                init_internal_interrupt
                0x00000000c0007e5f                test
                0x00000000c0007e95                disp_str_colour3
                0x00000000c0007e9b                spurious_irq
                0x00000000c0007f14                init_keyboard
                0x00000000c0007f81                init2
                0x00000000c0007faf                u_thread_a
                0x00000000c0007fc7                kernel_main2
                0x00000000c000822d                TestFS
                0x00000000c0008295                wait_exit
                0x00000000c0008363                INIT_fork
                0x00000000c0008653                simple_shell
                0x00000000c000882a                test_split_str
                0x00000000c00089b7                test_shell
                0x00000000c0008a95                test_exec
                0x00000000c0008b5d                INIT
                0x00000000c0008b6a                TestA
                0x00000000c0008b9f                delay
                0x00000000c0008be6                TestB
                0x00000000c0008bfe                TestC
                0x00000000c0008c31                sys_get_ticks
                0x00000000c0008c3b                sys_write
                0x00000000c0008c8f                milli_delay
                0x00000000c0008ccb                TaskSys
                0x00000000c0008cd0                Printf
                0x00000000c0008d2e                vsprintf
                0x00000000c0008eda                printx
                0x00000000c0008f1d                sys_printx
                0x00000000c0009000                spin
                0x00000000c0009005                panic
                0x00000000c0009023                assertion_failure
                0x00000000c000905a                dead_lock
                0x00000000c0009064                sys_send_msg
                0x00000000c00093df                sys_receive_msg
                0x00000000c0009828                disp_str_colour_debug
                0x00000000c000982e                send_rec
                0x00000000c000992a                block
                0x00000000c0009966                unblock
                0x00000000c00099b6                get_ticks_ipc
                0x00000000c0009a01                itoa
                0x00000000c0009a57                i2a
                0x00000000c0009abd                inform_int
                0x00000000c0009b76                strcmp
 .text          0x00000000c0009be5      0x29b my_process.o
                0x00000000c0009be5                create_user_process_address_space
                0x00000000c0009c75                user_process
                0x00000000c0009d3e                process_execute
 .text          0x00000000c0009e80       0x15 switch_to.o
                0x00000000c0009e80                switch_to
 .text          0x00000000c0009e95      0x12a double_link_list.o
                0x00000000c0009e95                initDoubleLinkList
                0x00000000c0009ec3                isListEmpty
                0x00000000c0009ee4                appendToDoubleLinkList
                0x00000000c0009f29                insertToDoubleLinkList
                0x00000000c0009f6a                popFromDoubleLinkList
 .text          0x00000000c0009fbf      0x16c thread.o
                0x00000000c0009fbf                kernel_thread
                0x00000000c0009fd7                thread_init
                0x00000000c000a03e                thread_create
                0x00000000c000a073                thread_start
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c000a140      0xb69
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c000a140       0x82 kernel_main.o
 .rodata        0x00000000c000a1c2      0x10e hd.o
 .rodata        0x00000000c000a2d0      0x1d3 fs_main.o
                0x00000000c000a2d0                FSBUF_SIZE
 .rodata        0x00000000c000a4a3        0xe process.o
 .rodata        0x00000000c000a4b1       0x10 console.o
 .rodata        0x00000000c000a4c1       0x24 close.o
 .rodata        0x00000000c000a4e5       0x1b fork.o
 .rodata        0x00000000c000a500       0x31 exec.o
 *fill*         0x00000000c000a531        0x3 
 .rodata        0x00000000c000a534       0x37 mm/forkexit.o
 .rodata        0x00000000c000a56b        0x2 mem/mem.o
 *fill*         0x00000000c000a56d       0x13 
 .rodata        0x00000000c000a580      0x729 kernel_main_old.o

.txt            0x00000000c000aca9       0xaa
 .txt           0x00000000c000aca9       0x82 string.o
                0x00000000c000aca9                Memcpy
                0x00000000c000acd7                Memset
                0x00000000c000acf6                Strcpy
                0x00000000c000ad10                Strlen
 .txt           0x00000000c000ad2b       0x28 hd_rdwt.o
                0x00000000c000ad2b                read_port
                0x00000000c000ad3f                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c000ad54     0x1700
 *(.eh_frame)
 .eh_frame      0x00000000c000ad54       0xfc kernel_main.o
 .eh_frame      0x00000000c000ae50      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x00000000c000b094      0x27c fs_main.o
                                        0x294 (size before relaxing)
 .eh_frame      0x00000000c000b310       0xa0 process.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000b3b0      0x100 protect.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c000b4b0      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x00000000c000b690       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000b730       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b750       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b770       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b790       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b7b0       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b7d0       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b7f0       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b810       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b830       0x64 exec.o
                                         0x7c (size before relaxing)
 .eh_frame      0x00000000c000b894       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x00000000c000b8d0       0x4c mm/exec.o
                                         0x64 (size before relaxing)
 .eh_frame      0x00000000c000b91c       0x90 mm/forkexit.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x00000000c000b9ac      0x304 mem/mem.o
                                        0x31c (size before relaxing)
 .eh_frame      0x00000000c000bcb0      0x624 kernel_main_old.o
                                        0x63c (size before relaxing)
 .eh_frame      0x00000000c000c2d4       0x60 my_process.o
                                         0x78 (size before relaxing)
 .eh_frame      0x00000000c000c334       0xa0 double_link_list.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000c3d4       0x80 thread.o
                                         0x98 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c000e000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c000e000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c000e000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c000e000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c000e000        0x0
 *(.got)
 .got           0x00000000c000e000        0x0 kernel_sub.o
 *(.igot)
                0x00000000c000e000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c000e000        0x0
 *(.got.plt)
 .got.plt       0x00000000c000e000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x00000000c000e000        0x0 kernel_sub.o

.data           0x00000000c000e000      0x720
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000e000        0xf kernel_sub.o
 *fill*         0x00000000c000e00f        0x1 
 .data          0x00000000c000e010        0xf kernel.o
 .data          0x00000000c000e01f        0x0 kernel_main.o
 .data          0x00000000c000e01f        0x0 hd.o
 *fill*         0x00000000c000e01f        0x1 
 .data          0x00000000c000e020        0x0 syscall.o
 .data          0x00000000c000e020        0x8 fs_main.o
                0x00000000c000e020                fsbuf
                0x00000000c000e024                super_block_buf
 *fill*         0x00000000c000e028       0x18 
 .data          0x00000000c000e040       0xe0 global.o
                0x00000000c000e040                user_task_table
                0x00000000c000e080                sys_task_table
                0x00000000c000e10c                sys_call_table
 .data          0x00000000c000e120        0x0 process.o
 .data          0x00000000c000e120        0x0 protect.o
 .data          0x00000000c000e120        0x0 console.o
 .data          0x00000000c000e120      0x600 keyboard.o
                0x00000000c000e120                keymap
 .data          0x00000000c000e720        0x0 open.o
 .data          0x00000000c000e720        0x0 read.o
 .data          0x00000000c000e720        0x0 write.o
 .data          0x00000000c000e720        0x0 close.o
 .data          0x00000000c000e720        0x0 wait.o
 .data          0x00000000c000e720        0x0 exit.o
 .data          0x00000000c000e720        0x0 fork.o
 .data          0x00000000c000e720        0x0 getpid.o
 .data          0x00000000c000e720        0x0 exec.o
 .data          0x00000000c000e720        0x0 mm/main.o
 .data          0x00000000c000e720        0x0 mm/exec.o
 .data          0x00000000c000e720        0x0 mm/forkexit.o
 .data          0x00000000c000e720        0x0 mem/mem.o
 .data          0x00000000c000e720        0x0 kernel_main_old.o
 .data          0x00000000c000e720        0x0 my_process.o
 .data          0x00000000c000e720        0x0 double_link_list.o
 .data          0x00000000c000e720        0x0 thread.o

.data1
 *(.data1)
                0x00000000c000e720                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c000e720                . = .
                0x00000000c000e720                __bss_start = .

.bss            0x00000000c000e720    0x75280
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c000e720      0x800 kernel_sub.o
 .bss           0x00000000c000ef20      0x800 kernel.o
 .bss           0x00000000c000f720        0x0 kernel_main.o
 .bss           0x00000000c000f720        0x0 hd.o
 .bss           0x00000000c000f720        0x4 fs_main.o
                0x00000000c000f720                c
 .bss           0x00000000c000f724        0x0 global.o
 .bss           0x00000000c000f724        0x0 process.o
 .bss           0x00000000c000f724        0x0 protect.o
 .bss           0x00000000c000f724        0x0 console.o
 .bss           0x00000000c000f724        0x0 keyboard.o
 .bss           0x00000000c000f724        0x0 open.o
 .bss           0x00000000c000f724        0x0 read.o
 .bss           0x00000000c000f724        0x0 write.o
 .bss           0x00000000c000f724        0x0 close.o
 .bss           0x00000000c000f724        0x0 wait.o
 .bss           0x00000000c000f724        0x0 exit.o
 .bss           0x00000000c000f724        0x0 fork.o
 .bss           0x00000000c000f724        0x0 getpid.o
 .bss           0x00000000c000f724        0x0 exec.o
 .bss           0x00000000c000f724        0x0 mm/main.o
 .bss           0x00000000c000f724        0x0 mm/exec.o
 .bss           0x00000000c000f724        0x0 mm/forkexit.o
 .bss           0x00000000c000f724        0x0 mem/mem.o
 .bss           0x00000000c000f724        0x0 kernel_main_old.o
 .bss           0x00000000c000f724        0x0 my_process.o
 .bss           0x00000000c000f724        0x0 double_link_list.o
 .bss           0x00000000c000f724        0x0 thread.o
 *(COMMON)
 *fill*         0x00000000c000f724       0x1c 
 COMMON         0x00000000c000f740     0x2811 kernel_main.o
                0x00000000c000f740                current_tty
                0x00000000c000f744                is_e0
                0x00000000c000f748                idt_ptr
                0x00000000c000f750                pid
                0x00000000c000f754                KernelVirtualMemory
                0x00000000c000f760                dis_pos
                0x00000000c000f764                k_reenter
                0x00000000c000f780                gdt
                0x00000000c000fb80                proc_ready_table
                0x00000000c000fb84                pcaller
                0x00000000c000fba0                keyboard_buffer
                0x00000000c000fdac                pcb_list
                0x00000000c000fdc0                tty_table
                0x00000000c0011640                tss
                0x00000000c00116ac                KernelPool
                0x00000000c00116bc                counter
                0x00000000c00116c0                key_pressed
                0x00000000c00116c4                is_shift
                0x00000000c00116c8                gdt_ptr
                0x00000000c00116e0                idt
                0x00000000c0011ee0                ticks
                0x00000000c0011ee4                UserPool
                0x00000000c0011ef4                all_pcb_list
                0x00000000c0011f20                console_table
                0x00000000c0011f50                is_disp
 *fill*         0x00000000c0011f51        0xf 
 COMMON         0x00000000c0011f60      0x440 hd.o
                0x00000000c0011f60                hd_info
                0x00000000c00121a0                hd_cache
 COMMON         0x00000000c00123a0      0xe28 fs_main.o
                0x00000000c00123a0                file_desc_table
                0x00000000c00127a0                inode_table
                0x00000000c00131a0                root
 *fill*         0x00000000c00131c8       0x18 
 COMMON         0x00000000c00131e0    0x707c0 global.o
                0x00000000c00131e0                proc_stack
                0x00000000c00831e0                kernel_mem_block_decs_array
                0x00000000c00832e0                proc_table
                0x00000000c00839a0                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c00839a0                . = ALIGN (0x4)
                0x00000000c00839a0                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c00839a0                . = ALIGN (0x4)
                0x00000000c00839a0                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c00839a0                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o
 .comment       0x000000000000002c       0x2d mem/mem.o
 .comment       0x000000000000002c       0x2d kernel_main_old.o
 .comment       0x000000000000002c       0x2d my_process.o
 .comment       0x000000000000002c       0x2d double_link_list.o
 .comment       0x000000000000002c       0x2d thread.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x318
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel_main.o
 .debug_aranges
                0x0000000000000020       0x20 hd.o
 .debug_aranges
                0x0000000000000040       0x20 fs_main.o
 .debug_aranges
                0x0000000000000060       0x18 global.o
 .debug_aranges
                0x0000000000000078       0x20 process.o
 .debug_aranges
                0x0000000000000098       0x20 protect.o
 .debug_aranges
                0x00000000000000b8       0x20 console.o
 .debug_aranges
                0x00000000000000d8       0x20 keyboard.o
 .debug_aranges
                0x00000000000000f8       0x20 open.o
 .debug_aranges
                0x0000000000000118       0x20 read.o
 .debug_aranges
                0x0000000000000138       0x20 write.o
 .debug_aranges
                0x0000000000000158       0x20 close.o
 .debug_aranges
                0x0000000000000178       0x20 wait.o
 .debug_aranges
                0x0000000000000198       0x20 exit.o
 .debug_aranges
                0x00000000000001b8       0x20 fork.o
 .debug_aranges
                0x00000000000001d8       0x20 getpid.o
 .debug_aranges
                0x00000000000001f8       0x20 exec.o
 .debug_aranges
                0x0000000000000218       0x20 mm/main.o
 .debug_aranges
                0x0000000000000238       0x20 mm/exec.o
 .debug_aranges
                0x0000000000000258       0x20 mm/forkexit.o
 .debug_aranges
                0x0000000000000278       0x20 mem/mem.o
 .debug_aranges
                0x0000000000000298       0x20 kernel_main_old.o
 .debug_aranges
                0x00000000000002b8       0x20 my_process.o
 .debug_aranges
                0x00000000000002d8       0x20 double_link_list.o
 .debug_aranges
                0x00000000000002f8       0x20 thread.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000    0x196cd
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0xe2c kernel_main.o
 .debug_info    0x0000000000000e2c     0x1612 hd.o
 .debug_info    0x000000000000243e     0x1ded fs_main.o
 .debug_info    0x000000000000422b      0xd53 global.o
 .debug_info    0x0000000000004f7e      0xe46 process.o
 .debug_info    0x0000000000005dc4     0x103c protect.o
 .debug_info    0x0000000000006e00     0x10da console.o
 .debug_info    0x0000000000007eda      0xe9f keyboard.o
 .debug_info    0x0000000000008d79      0xca7 open.o
 .debug_info    0x0000000000009a20      0xc8d read.o
 .debug_info    0x000000000000a6ad      0xc95 write.o
 .debug_info    0x000000000000b342      0xc6d close.o
 .debug_info    0x000000000000bfaf      0xc78 wait.o
 .debug_info    0x000000000000cc27      0xc6a exit.o
 .debug_info    0x000000000000d891      0xc5f fork.o
 .debug_info    0x000000000000e4f0      0xc5f getpid.o
 .debug_info    0x000000000000f14f      0xdca exec.o
 .debug_info    0x000000000000ff19      0xc7b mm/main.o
 .debug_info    0x0000000000010b94      0xf76 mm/exec.o
 .debug_info    0x0000000000011b0a      0xefc mm/forkexit.o
 .debug_info    0x0000000000012a06     0x18e8 mem/mem.o
 .debug_info    0x00000000000142ee     0x26ed kernel_main_old.o
 .debug_info    0x00000000000169db      0xfce my_process.o
 .debug_info    0x00000000000179a9      0xe1e double_link_list.o
 .debug_info    0x00000000000187c7      0xf06 thread.o

.debug_abbrev   0x0000000000000000     0x332e
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x1d6 kernel_main.o
 .debug_abbrev  0x00000000000001d6      0x2df hd.o
 .debug_abbrev  0x00000000000004b5      0x2dc fs_main.o
 .debug_abbrev  0x0000000000000791      0x157 global.o
 .debug_abbrev  0x00000000000008e8      0x201 process.o
 .debug_abbrev  0x0000000000000ae9      0x212 protect.o
 .debug_abbrev  0x0000000000000cfb      0x279 console.o
 .debug_abbrev  0x0000000000000f74      0x1fb keyboard.o
 .debug_abbrev  0x000000000000116f      0x1c5 open.o
 .debug_abbrev  0x0000000000001334      0x1b5 read.o
 .debug_abbrev  0x00000000000014e9      0x1b5 write.o
 .debug_abbrev  0x000000000000169e      0x19d close.o
 .debug_abbrev  0x000000000000183b      0x19f wait.o
 .debug_abbrev  0x00000000000019da      0x19b exit.o
 .debug_abbrev  0x0000000000001b75      0x18a fork.o
 .debug_abbrev  0x0000000000001cff      0x18a getpid.o
 .debug_abbrev  0x0000000000001e89      0x1d3 exec.o
 .debug_abbrev  0x000000000000205c      0x1ef mm/main.o
 .debug_abbrev  0x000000000000224b      0x1f5 mm/exec.o
 .debug_abbrev  0x0000000000002440      0x206 mm/forkexit.o
 .debug_abbrev  0x0000000000002646      0x2ea mem/mem.o
 .debug_abbrev  0x0000000000002930      0x3e3 kernel_main_old.o
 .debug_abbrev  0x0000000000002d13      0x212 my_process.o
 .debug_abbrev  0x0000000000002f25      0x1e7 double_link_list.o
 .debug_abbrev  0x000000000000310c      0x222 thread.o

.debug_line     0x0000000000000000     0x4149
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x150 kernel_main.o
 .debug_line    0x0000000000000150      0x558 hd.o
 .debug_line    0x00000000000006a8      0xbe7 fs_main.o
 .debug_line    0x000000000000128f       0x95 global.o
 .debug_line    0x0000000000001324      0x18f process.o
 .debug_line    0x00000000000014b3      0x1ef protect.o
 .debug_line    0x00000000000016a2      0x549 console.o
 .debug_line    0x0000000000001beb      0x28a keyboard.o
 .debug_line    0x0000000000001e75       0xbc open.o
 .debug_line    0x0000000000001f31       0xa7 read.o
 .debug_line    0x0000000000001fd8       0xae write.o
 .debug_line    0x0000000000002086       0xad close.o
 .debug_line    0x0000000000002133       0xb7 wait.o
 .debug_line    0x00000000000021ea       0xa0 exit.o
 .debug_line    0x000000000000228a       0xae fork.o
 .debug_line    0x0000000000002338       0xa0 getpid.o
 .debug_line    0x00000000000023d8      0x15b exec.o
 .debug_line    0x0000000000002533       0x9f mm/main.o
 .debug_line    0x00000000000025d2      0x1d3 mm/exec.o
 .debug_line    0x00000000000027a5      0x202 mm/forkexit.o
 .debug_line    0x00000000000029a7      0x673 mem/mem.o
 .debug_line    0x000000000000301a      0xd0f kernel_main_old.o
 .debug_line    0x0000000000003d29      0x185 my_process.o
 .debug_line    0x0000000000003eae      0x168 double_link_list.o
 .debug_line    0x0000000000004016      0x133 thread.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000     0x1ae4
 *(.debug_str)
 .debug_str     0x0000000000000000      0x4d3 kernel_main.o
                                        0x5b5 (size before relaxing)
 .debug_str     0x00000000000004d3      0x2a8 hd.o
                                        0x830 (size before relaxing)
 .debug_str     0x000000000000077b      0x46b fs_main.o
                                        0xa06 (size before relaxing)
 .debug_str     0x0000000000000be6       0x25 global.o
                                        0x563 (size before relaxing)
 .debug_str     0x0000000000000c0b       0x3f process.o
                                        0x587 (size before relaxing)
 .debug_str     0x0000000000000c4a      0x10e protect.o
                                        0x67c (size before relaxing)
 .debug_str     0x0000000000000d58      0x103 console.o
                                        0x64d (size before relaxing)
 .debug_str     0x0000000000000e5b       0x84 keyboard.o
                                        0x5d3 (size before relaxing)
 .debug_str     0x0000000000000edf       0x29 open.o
                                        0x506 (size before relaxing)
 .debug_str     0x0000000000000f08        0xb read.o
                                        0x4db (size before relaxing)
 .debug_str     0x0000000000000f13        0xc write.o
                                        0x4dd (size before relaxing)
 .debug_str     0x0000000000000f1f        0xc close.o
                                        0x4d7 (size before relaxing)
 .debug_str     0x0000000000000f2b        0xb wait.o
                                        0x4dc (size before relaxing)
 .debug_str     0x0000000000000f36        0xb exit.o
                                        0x4dc (size before relaxing)
 .debug_str     0x0000000000000f41        0xb fork.o
                                        0x4d5 (size before relaxing)
 .debug_str     0x0000000000000f4c       0x14 getpid.o
                                        0x4d9 (size before relaxing)
 .debug_str     0x0000000000000f60       0x2b exec.o
                                        0x4fe (size before relaxing)
 .debug_str     0x0000000000000f8b       0x52 mm/main.o
                                        0x4e9 (size before relaxing)
 .debug_str     0x0000000000000fdd      0x18f mm/exec.o
                                        0x649 (size before relaxing)
 .debug_str     0x000000000000116c       0xab mm/forkexit.o
                                        0x596 (size before relaxing)
 .debug_str     0x0000000000001217      0x2e7 mem/mem.o
                                        0x8fd (size before relaxing)
 .debug_str     0x00000000000014fe      0x47a kernel_main_old.o
                                        0xab7 (size before relaxing)
 .debug_str     0x0000000000001978       0xac my_process.o
                                        0x6a2 (size before relaxing)
 .debug_str     0x0000000000001a24       0x76 double_link_list.o
                                        0x5c7 (size before relaxing)
 .debug_str     0x0000000000001a9a       0x4a thread.o
                                        0x644 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x78
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x48 hd.o
 .debug_ranges  0x0000000000000048       0x18 mm/exec.o
 .debug_ranges  0x0000000000000060       0x18 kernel_main_old.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
