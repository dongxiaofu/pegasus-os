
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
idt_ptr             0x6               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
pcb_list            0x10              kernel_main.o
tty_table           0x186c            kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
root                0x28              fs_main.o
kernel_mem_block_decs_array
                    0xf0              global.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
ticks               0x4               kernel_main.o
UserPool            0x10              kernel_main.o
console_table       0x30              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table          0x2e0             global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mem/mem.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main_old.o
 .note.GNU-stack
                0x0000000000000000        0x0 my_process.o
 .note.GNU-stack
                0x0000000000000000        0x0 double_link_list.o
 .note.GNU-stack
                0x0000000000000000        0x0 thread.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
LOAD kernel_main_old.o
LOAD my_process.o
LOAD switch_to.o
LOAD double_link_list.o
LOAD thread.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x888d
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0x76 kernel_sub.o
                0x00000000c0001500                _start
 *fill*         0x00000000c0001576        0xa 
 .text          0x00000000c0001580      0x323 kernel.o
                0x00000000c0001580                InterruptTest
                0x00000000c000158c                disp_str
                0x00000000c00015c7                disp_str_colour
                0x00000000c0001603                divide_zero_fault
                0x00000000c0001609                single_step_fault
                0x00000000c000160f                non_maskable_interrupt
                0x00000000c0001615                breakpoint_trap
                0x00000000c000161b                overflow_trap
                0x00000000c0001621                bound_range_exceeded_fault
                0x00000000c0001627                invalid_opcode_fault
                0x00000000c000162d                coprocessor_not_available_fault
                0x00000000c0001633                double_fault_exception_abort
                0x00000000c0001637                coprocessor_segment_overrun
                0x00000000c000163d                invalid_task_state_segment_fault
                0x00000000c0001641                segment_not_present_fault
                0x00000000c0001645                stack_exception_fault
                0x00000000c0001649                general_protection_exception_fault
                0x00000000c000164d                page_fault
                0x00000000c0001651                coprocessor_error_fault
                0x00000000c0001657                align_check_fault
                0x00000000c000165b                simd_float_exception_fault
                0x00000000c000166a                hwint0
                0x00000000c0001698                hwint1
                0x00000000c00016e1                hwint14
                0x00000000c0001726                sys_call
                0x00000000c0001770                restart
                0x00000000c0001791                in_byte
                0x00000000c000179d                out_byte
                0x00000000c00017bf                disable_int
                0x00000000c00017c1                enable_int
                0x00000000c0001857                enable_8259A_casecade_irq
                0x00000000c0001861                disable_8259A_casecade_irq
                0x00000000c000186b                enable_8259A_slave_winchester_irq
                0x00000000c0001875                disable_8259A_slave_winchester_irq
                0x00000000c000187f                update_cr3
                0x00000000c000188c                update_tss
                0x00000000c000189b                get_running_thread_pcb
 .text          0x00000000c00018a3      0x209 kernel_main.o
                0x00000000c00018a3                kernel_main
                0x00000000c000194f                init
                0x00000000c000198c                kernel_thread_a
                0x00000000c00019ee                kernel_thread_b
                0x00000000c0001a50                kernel_thread_c
                0x00000000c0001a66                kernel_thread_d
                0x00000000c0001a7c                user_proc_a
                0x00000000c0001a94                user_proc_b
 .text          0x00000000c0001aac      0xc69 hd.o
                0x00000000c0001aac                TaskHD
                0x00000000c0001abe                init_hd
                0x00000000c0001ad8                hd_handle
                0x00000000c0001b9d                hd_cmd_out
                0x00000000c0001c9f                hd_identify
                0x00000000c0001d56                print_hdinfo
                0x00000000c0001ee4                print_dpt_entry
                0x00000000c0001f50                get_partition_table
                0x00000000c000202f                partition
                0x00000000c0002249                hd_open
                0x00000000c0002298                get_hd_ioctl
                0x00000000c00022f1                wait_for
                0x00000000c0002322                interrupt_wait
                0x00000000c0002341                hd_rdwt
                0x00000000c0002573                hd_handler
                0x00000000c000259f                waitfor
                0x00000000c00025f0                print_hd_info
                0x00000000c00026dd                is_empty
 *fill*         0x00000000c0002715        0xb 
 .text          0x00000000c0002720       0x74 syscall.o
                0x00000000c0002720                get_ticks
                0x00000000c0002728                write2
                0x00000000c0002738                write_debug
                0x00000000c0002758                send_msg
                0x00000000c000277e                receive_msg
 .text          0x00000000c0002794     0x1ecb fs_main.o
                0x00000000c0002794                task_fs
                0x00000000c00028cf                rd_wt
                0x00000000c0002973                mkfs
                0x00000000c0002f33                init_fs
                0x00000000c0002f62                do_open
                0x00000000c0003143                search_file
                0x00000000c0003273                strip_path
                0x00000000c000333f                get_inode
                0x00000000c0003501                create_file
                0x00000000c000360c                alloc_imap_bit
                0x00000000c0003709                alloc_smap_bit
                0x00000000c00038aa                new_inode
                0x00000000c00039c8                new_dir_entry
                0x00000000c0003bd0                do_unlink
                0x00000000c00040a0                do_rdwt
                0x00000000c0004413                sync_inode
                0x00000000c0004567                put_inode
                0x00000000c00045a5                do_close
                0x00000000c00045f7                get_super_block
 .text          0x00000000c000465f        0x0 global.o
 .text          0x00000000c000465f      0x1ab process.o
                0x00000000c000465f                check
                0x00000000c00046cb                schedule_process
                0x00000000c00047c1                clock_handler
                0x00000000c00047cf                pid2proc
                0x00000000c00047eb                proc2pid
 .text          0x00000000c000480a      0x360 protect.o
                0x00000000c000480a                InitDescriptor
                0x00000000c0004877                Seg2PhyAddr
                0x00000000c00048b8                Seg2PhyAddrLDT
                0x00000000c00048fc                VirAddr2PhyAddr
                0x00000000c0004912                v2l
                0x00000000c0004955                init_propt
                0x00000000c0004a83                InitInterruptDesc
                0x00000000c0004adf                ReloadGDT
 .text          0x00000000c0004b6a      0x941 console.o
                0x00000000c0004b6a                select_console
                0x00000000c0004ba6                flush
                0x00000000c0004bdf                set_cursor
                0x00000000c0004c3d                set_console_start_video_addr
                0x00000000c0004c9b                put_key
                0x00000000c0004d07                scroll_up
                0x00000000c0004d49                scroll_down
                0x00000000c0004db4                out_char
                0x00000000c0004f5b                tty_dev_read
                0x00000000c0004f85                tty_dev_write
                0x00000000c000518c                tty_do_read
                0x00000000c000521d                tty_do_write
                0x00000000c0005365                init_screen
                0x00000000c00053f9                init_tty
                0x00000000c0005493                TaskTTY
 .text          0x00000000c00054ab      0x407 keyboard.o
                0x00000000c00054ab                keyboard_handler
                0x00000000c000552d                read_from_keyboard_buf
                0x00000000c000558d                keyboard_read
                0x00000000c000570c                init_keyboard_handler
                0x00000000c0005720                in_process
 .text          0x00000000c00058b2       0x55 open.o
                0x00000000c00058b2                open
 .text          0x00000000c0005907       0x37 read.o
                0x00000000c0005907                read
 .text          0x00000000c000593e       0x37 write.o
                0x00000000c000593e                write
 .text          0x00000000c0005975       0x4c close.o
                0x00000000c0005975                close
 .text          0x00000000c00059c1       0x3e wait.o
                0x00000000c00059c1                wait
 .text          0x00000000c00059ff       0x29 exit.o
                0x00000000c00059ff                exit
 .text          0x00000000c0005a28       0x5f fork.o
                0x00000000c0005a28                fork
 .text          0x00000000c0005a87       0x25 getpid.o
                0x00000000c0005a87                getpid
 .text          0x00000000c0005aac      0x235 exec.o
                0x00000000c0005aac                exec
                0x00000000c0005b17                execv
                0x00000000c0005cbc                execl
 .text          0x00000000c0005ce1      0x130 mm/main.o
                0x00000000c0005ce1                TaskMM
                0x00000000c0005df2                alloc_mem
 .text          0x00000000c0005e11      0x345 mm/exec.o
                0x00000000c0005e11                do_exec2
                0x00000000c0005e25                do_exec
 .text          0x00000000c0006156      0x3fb mm/forkexit.o
                0x00000000c0006156                do_fork
                0x00000000c000634c                do_exit
                0x00000000c000643f                do_wait
                0x00000000c0006509                cleanup
 .text          0x00000000c0006551      0xa78 mem/mem.o
                0x00000000c0006551                init_bitmap
                0x00000000c0006574                test_bit_val
                0x00000000c00065dd                set_bit_val
                0x00000000c0006658                set_bits
                0x00000000c0006692                get_first_free_bit
                0x00000000c00066d6                get_bits
                0x00000000c000679e                get_a_page2
                0x00000000c00067cd                get_a_page
                0x00000000c000685c                get_virtual_address
                0x00000000c00068c7                ptr_pde
                0x00000000c00068da                ptr_pte
                0x00000000c0006901                add_map_entry
                0x00000000c000698f                get_physical_address
                0x00000000c00069c1                alloc_memory
                0x00000000c0006a1d                get_a_virtual_page
                0x00000000c0006a47                block2arena
                0x00000000c0006a5d                sys_malloc
                0x00000000c0006c30                init_memory2
                0x00000000c0006ea7                init_memory
 .text          0x00000000c0006fc9     0x2909 kernel_main_old.o
                0x00000000c0006fc9                untar
                0x00000000c00071d3                atoi
                0x00000000c0007279                disp_int
                0x00000000c00072a2                do_page_fault
                0x00000000c00073d5                exception_handler
                0x00000000c000759c                exception_handler2
                0x00000000c000773d                init_internal_interrupt
                0x00000000c00078b2                test
                0x00000000c00078e8                disp_str_colour3
                0x00000000c00078ee                spurious_irq
                0x00000000c0007967                init_keyboard
                0x00000000c00079d4                init2
                0x00000000c0007a02                u_thread_a
                0x00000000c0007a1a                kernel_main2
                0x00000000c0007c56                TestFS
                0x00000000c000802a                wait_exit
                0x00000000c00080f8                INIT_fork
                0x00000000c00083e8                simple_shell
                0x00000000c00085bf                test_split_str
                0x00000000c000874c                test_shell
                0x00000000c000882a                test_exec
                0x00000000c00088f2                INIT
                0x00000000c00088ff                TestA
                0x00000000c0008934                delay
                0x00000000c000897b                TestB
                0x00000000c0008993                TestC
                0x00000000c00089c6                sys_get_ticks
                0x00000000c00089d0                sys_write
                0x00000000c0008a21                milli_delay
                0x00000000c0008a5d                TaskSys
                0x00000000c0008a95                Printf
                0x00000000c0008af3                vsprintf
                0x00000000c0008c9f                printx
                0x00000000c0008ce2                sys_printx
                0x00000000c0008dc2                spin
                0x00000000c0008dc7                panic
                0x00000000c0008de5                assertion_failure
                0x00000000c0008e1c                dead_lock
                0x00000000c0008e26                sys_send_msg
                0x00000000c0009144                sys_receive_msg
                0x00000000c000958f                disp_str_colour_debug
                0x00000000c0009595                send_rec
                0x00000000c000967b                block
                0x00000000c000968d                unblock
                0x00000000c00096c1                get_ticks_ipc
                0x00000000c000970c                itoa
                0x00000000c0009762                i2a
                0x00000000c00097c8                inform_int
                0x00000000c0009863                strcmp
 .text          0x00000000c00098d2      0x252 my_process.o
                0x00000000c00098d2                create_user_process_address_space
                0x00000000c0009962                user_process
                0x00000000c0009a2b                process_execute
 *fill*         0x00000000c0009b24        0xc 
 .text          0x00000000c0009b30       0x15 switch_to.o
                0x00000000c0009b30                switch_to
 .text          0x00000000c0009b45      0x12a double_link_list.o
                0x00000000c0009b45                initDoubleLinkList
                0x00000000c0009b73                isListEmpty
                0x00000000c0009b94                appendToDoubleLinkList
                0x00000000c0009bd9                insertToDoubleLinkList
                0x00000000c0009c1a                popFromDoubleLinkList
 .text          0x00000000c0009c6f      0x11e thread.o
                0x00000000c0009c6f                kernel_thread
                0x00000000c0009c87                thread_init
                0x00000000c0009cd2                thread_create
                0x00000000c0009d07                thread_start
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c0009da0      0xb71
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0009da0       0x96 kernel_main.o
 .rodata        0x00000000c0009e36      0x10e hd.o
 .rodata        0x00000000c0009f44      0x173 fs_main.o
                0x00000000c0009f44                FSBUF_SIZE
 .rodata        0x00000000c000a0b7       0x20 process.o
 .rodata        0x00000000c000a0d7        0xa console.o
 .rodata        0x00000000c000a0e1       0x24 close.o
 .rodata        0x00000000c000a105       0x1b fork.o
 .rodata        0x00000000c000a120       0x31 exec.o
 .rodata        0x00000000c000a151       0x11 mm/main.o
 *fill*         0x00000000c000a162        0x2 
 .rodata        0x00000000c000a164       0x37 mm/forkexit.o
 .rodata        0x00000000c000a19b        0x2 mem/mem.o
 *fill*         0x00000000c000a19d        0x3 
 .rodata        0x00000000c000a1a0      0x771 kernel_main_old.o

.txt            0x00000000c000a911       0xaa
 .txt           0x00000000c000a911       0x82 string.o
                0x00000000c000a911                Memcpy
                0x00000000c000a93f                Memset
                0x00000000c000a95e                Strcpy
                0x00000000c000a978                Strlen
 .txt           0x00000000c000a993       0x28 hd_rdwt.o
                0x00000000c000a993                read_port
                0x00000000c000a9a7                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c000a9bc     0x1668
 *(.eh_frame)
 .eh_frame      0x00000000c000a9bc       0xfc kernel_main.o
 .eh_frame      0x00000000c000aab8      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x00000000c000acfc      0x288 fs_main.o
                                        0x2a0 (size before relaxing)
 .eh_frame      0x00000000c000af84       0xa0 process.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000b024      0x100 protect.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c000b124      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x00000000c000b304       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000b3a4       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b3c4       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b3e4       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b404       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b424       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b444       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b464       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b484       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b4a4       0x64 exec.o
                                         0x7c (size before relaxing)
 .eh_frame      0x00000000c000b508       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x00000000c000b544       0x4c mm/exec.o
                                         0x64 (size before relaxing)
 .eh_frame      0x00000000c000b590       0x90 mm/forkexit.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x00000000c000b620      0x264 mem/mem.o
                                        0x27c (size before relaxing)
 .eh_frame      0x00000000c000b884      0x620 kernel_main_old.o
                                        0x638 (size before relaxing)
 .eh_frame      0x00000000c000bea4       0x60 my_process.o
                                         0x78 (size before relaxing)
 .eh_frame      0x00000000c000bf04       0xa0 double_link_list.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000bfa4       0x80 thread.o
                                         0x98 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c000e000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c000e000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c000e000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c000e000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c000e000        0x0
 *(.got)
 .got           0x00000000c000e000        0x0 kernel_sub.o
 *(.igot)
                0x00000000c000e000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c000e000        0x0
 *(.got.plt)
 .got.plt       0x00000000c000e000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x00000000c000e000        0x0 kernel_sub.o

.data           0x00000000c000e000      0x720
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000e000        0xf kernel_sub.o
 *fill*         0x00000000c000e00f        0x1 
 .data          0x00000000c000e010        0xf kernel.o
 .data          0x00000000c000e01f        0x0 kernel_main.o
 .data          0x00000000c000e01f        0x0 hd.o
 *fill*         0x00000000c000e01f        0x1 
 .data          0x00000000c000e020        0x0 syscall.o
 .data          0x00000000c000e020        0x8 fs_main.o
                0x00000000c000e020                fsbuf
                0x00000000c000e024                super_block_buf
 *fill*         0x00000000c000e028       0x18 
 .data          0x00000000c000e040       0xe0 global.o
                0x00000000c000e040                user_task_table
                0x00000000c000e080                sys_task_table
                0x00000000c000e10c                sys_call_table
 .data          0x00000000c000e120        0x0 process.o
 .data          0x00000000c000e120        0x0 protect.o
 .data          0x00000000c000e120        0x0 console.o
 .data          0x00000000c000e120      0x600 keyboard.o
                0x00000000c000e120                keymap
 .data          0x00000000c000e720        0x0 open.o
 .data          0x00000000c000e720        0x0 read.o
 .data          0x00000000c000e720        0x0 write.o
 .data          0x00000000c000e720        0x0 close.o
 .data          0x00000000c000e720        0x0 wait.o
 .data          0x00000000c000e720        0x0 exit.o
 .data          0x00000000c000e720        0x0 fork.o
 .data          0x00000000c000e720        0x0 getpid.o
 .data          0x00000000c000e720        0x0 exec.o
 .data          0x00000000c000e720        0x0 mm/main.o
 .data          0x00000000c000e720        0x0 mm/exec.o
 .data          0x00000000c000e720        0x0 mm/forkexit.o
 .data          0x00000000c000e720        0x0 mem/mem.o
 .data          0x00000000c000e720        0x0 kernel_main_old.o
 .data          0x00000000c000e720        0x0 my_process.o
 .data          0x00000000c000e720        0x0 double_link_list.o
 .data          0x00000000c000e720        0x0 thread.o

.data1
 *(.data1)
                0x00000000c000e720                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c000e720                . = .
                0x00000000c000e720                __bss_start = .

.bss            0x00000000c000e720    0x74e80
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c000e720      0x800 kernel_sub.o
 .bss           0x00000000c000ef20      0x800 kernel.o
 .bss           0x00000000c000f720        0x0 kernel_main.o
 .bss           0x00000000c000f720        0x0 hd.o
 .bss           0x00000000c000f720        0x4 fs_main.o
                0x00000000c000f720                c
 .bss           0x00000000c000f724        0x0 global.o
 .bss           0x00000000c000f724        0x0 process.o
 .bss           0x00000000c000f724        0x0 protect.o
 .bss           0x00000000c000f724        0x0 console.o
 .bss           0x00000000c000f724        0x0 keyboard.o
 .bss           0x00000000c000f724        0x0 open.o
 .bss           0x00000000c000f724        0x0 read.o
 .bss           0x00000000c000f724        0x0 write.o
 .bss           0x00000000c000f724        0x0 close.o
 .bss           0x00000000c000f724        0x0 wait.o
 .bss           0x00000000c000f724        0x0 exit.o
 .bss           0x00000000c000f724        0x0 fork.o
 .bss           0x00000000c000f724        0x0 getpid.o
 .bss           0x00000000c000f724        0x0 exec.o
 .bss           0x00000000c000f724        0x0 mm/main.o
 .bss           0x00000000c000f724        0x0 mm/exec.o
 .bss           0x00000000c000f724        0x0 mm/forkexit.o
 .bss           0x00000000c000f724        0x0 mem/mem.o
 .bss           0x00000000c000f724        0x0 kernel_main_old.o
 .bss           0x00000000c000f724        0x0 my_process.o
 .bss           0x00000000c000f724        0x0 double_link_list.o
 .bss           0x00000000c000f724        0x0 thread.o
 *(COMMON)
 *fill*         0x00000000c000f724       0x1c 
 COMMON         0x00000000c000f740     0x27f1 kernel_main.o
                0x00000000c000f740                current_tty
                0x00000000c000f744                is_e0
                0x00000000c000f748                idt_ptr
                0x00000000c000f750                KernelVirtualMemory
                0x00000000c000f75c                dis_pos
                0x00000000c000f760                k_reenter
                0x00000000c000f780                gdt
                0x00000000c000fb80                proc_ready_table
                0x00000000c000fb84                pcaller
                0x00000000c000fba0                keyboard_buffer
                0x00000000c000fdac                pcb_list
                0x00000000c000fdc0                tty_table
                0x00000000c0011640                tss
                0x00000000c00116ac                KernelPool
                0x00000000c00116bc                counter
                0x00000000c00116c0                key_pressed
                0x00000000c00116c4                is_shift
                0x00000000c00116c8                gdt_ptr
                0x00000000c00116e0                idt
                0x00000000c0011ee0                ticks
                0x00000000c0011ee4                UserPool
                0x00000000c0011f00                console_table
                0x00000000c0011f30                is_disp
 *fill*         0x00000000c0011f31        0xf 
 COMMON         0x00000000c0011f40      0x440 hd.o
                0x00000000c0011f40                hd_info
                0x00000000c0012180                hd_cache
 COMMON         0x00000000c0012380      0xe28 fs_main.o
                0x00000000c0012380                file_desc_table
                0x00000000c0012780                inode_table
                0x00000000c0013180                root
 *fill*         0x00000000c00131a8       0x18 
 COMMON         0x00000000c00131c0    0x703e0 global.o
                0x00000000c00131c0                proc_stack
                0x00000000c00831c0                kernel_mem_block_decs_array
                0x00000000c00832c0                proc_table
                0x00000000c00835a0                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c00835a0                . = ALIGN (0x4)
                0x00000000c00835a0                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c00835a0                . = ALIGN (0x4)
                0x00000000c00835a0                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c00835a0                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o
 .comment       0x000000000000002c       0x2d mem/mem.o
 .comment       0x000000000000002c       0x2d kernel_main_old.o
 .comment       0x000000000000002c       0x2d my_process.o
 .comment       0x000000000000002c       0x2d double_link_list.o
 .comment       0x000000000000002c       0x2d thread.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x318
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel_main.o
 .debug_aranges
                0x0000000000000020       0x20 hd.o
 .debug_aranges
                0x0000000000000040       0x20 fs_main.o
 .debug_aranges
                0x0000000000000060       0x18 global.o
 .debug_aranges
                0x0000000000000078       0x20 process.o
 .debug_aranges
                0x0000000000000098       0x20 protect.o
 .debug_aranges
                0x00000000000000b8       0x20 console.o
 .debug_aranges
                0x00000000000000d8       0x20 keyboard.o
 .debug_aranges
                0x00000000000000f8       0x20 open.o
 .debug_aranges
                0x0000000000000118       0x20 read.o
 .debug_aranges
                0x0000000000000138       0x20 write.o
 .debug_aranges
                0x0000000000000158       0x20 close.o
 .debug_aranges
                0x0000000000000178       0x20 wait.o
 .debug_aranges
                0x0000000000000198       0x20 exit.o
 .debug_aranges
                0x00000000000001b8       0x20 fork.o
 .debug_aranges
                0x00000000000001d8       0x20 getpid.o
 .debug_aranges
                0x00000000000001f8       0x20 exec.o
 .debug_aranges
                0x0000000000000218       0x20 mm/main.o
 .debug_aranges
                0x0000000000000238       0x20 mm/exec.o
 .debug_aranges
                0x0000000000000258       0x20 mm/forkexit.o
 .debug_aranges
                0x0000000000000278       0x20 mem/mem.o
 .debug_aranges
                0x0000000000000298       0x20 kernel_main_old.o
 .debug_aranges
                0x00000000000002b8       0x20 my_process.o
 .debug_aranges
                0x00000000000002d8       0x20 double_link_list.o
 .debug_aranges
                0x00000000000002f8       0x20 thread.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000    0x1842a
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0xd75 kernel_main.o
 .debug_info    0x0000000000000d75     0x1556 hd.o
 .debug_info    0x00000000000022cb     0x1d1b fs_main.o
 .debug_info    0x0000000000003fe6      0xd00 global.o
 .debug_info    0x0000000000004ce6      0xd6f process.o
 .debug_info    0x0000000000005a55      0xf98 protect.o
 .debug_info    0x00000000000069ed     0x1007 console.o
 .debug_info    0x00000000000079f4      0xdfb keyboard.o
 .debug_info    0x00000000000087ef      0xbe3 open.o
 .debug_info    0x00000000000093d2      0xbe9 read.o
 .debug_info    0x0000000000009fbb      0xbf2 write.o
 .debug_info    0x000000000000abad      0xbc9 close.o
 .debug_info    0x000000000000b776      0xbd4 wait.o
 .debug_info    0x000000000000c34a      0xbc6 exit.o
 .debug_info    0x000000000000cf10      0xbbb fork.o
 .debug_info    0x000000000000dacb      0xbbb getpid.o
 .debug_info    0x000000000000e686      0xd26 exec.o
 .debug_info    0x000000000000f3ac      0xbd6 mm/main.o
 .debug_info    0x000000000000ff82      0xed2 mm/exec.o
 .debug_info    0x0000000000010e54      0xe58 mm/forkexit.o
 .debug_info    0x0000000000011cac     0x15e0 mem/mem.o
 .debug_info    0x000000000001328c     0x26d8 kernel_main_old.o
 .debug_info    0x0000000000015964      0xf09 my_process.o
 .debug_info    0x000000000001686d      0xd6a double_link_list.o
 .debug_info    0x00000000000175d7      0xe53 thread.o

.debug_abbrev   0x0000000000000000     0x2f94
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x187 kernel_main.o
 .debug_abbrev  0x0000000000000187      0x2bf hd.o
 .debug_abbrev  0x0000000000000446      0x2ba fs_main.o
 .debug_abbrev  0x0000000000000700      0x135 global.o
 .debug_abbrev  0x0000000000000835      0x1df process.o
 .debug_abbrev  0x0000000000000a14      0x1f0 protect.o
 .debug_abbrev  0x0000000000000c04      0x27a console.o
 .debug_abbrev  0x0000000000000e7e      0x1d9 keyboard.o
 .debug_abbrev  0x0000000000001057      0x17d open.o
 .debug_abbrev  0x00000000000011d4      0x193 read.o
 .debug_abbrev  0x0000000000001367      0x193 write.o
 .debug_abbrev  0x00000000000014fa      0x17b close.o
 .debug_abbrev  0x0000000000001675      0x17d wait.o
 .debug_abbrev  0x00000000000017f2      0x179 exit.o
 .debug_abbrev  0x000000000000196b      0x168 fork.o
 .debug_abbrev  0x0000000000001ad3      0x168 getpid.o
 .debug_abbrev  0x0000000000001c3b      0x1b1 exec.o
 .debug_abbrev  0x0000000000001dec      0x1d3 mm/main.o
 .debug_abbrev  0x0000000000001fbf      0x1d3 mm/exec.o
 .debug_abbrev  0x0000000000002192      0x1e4 mm/forkexit.o
 .debug_abbrev  0x0000000000002376      0x2c8 mem/mem.o
 .debug_abbrev  0x000000000000263e      0x3b8 kernel_main_old.o
 .debug_abbrev  0x00000000000029f6      0x1db my_process.o
 .debug_abbrev  0x0000000000002bd1      0x1c3 double_link_list.o
 .debug_abbrev  0x0000000000002d94      0x200 thread.o

.debug_line     0x0000000000000000     0x3fa2
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x152 kernel_main.o
 .debug_line    0x0000000000000152      0x55b hd.o
 .debug_line    0x00000000000006ad      0xbdf fs_main.o
 .debug_line    0x000000000000128c       0x95 global.o
 .debug_line    0x0000000000001321      0x15a process.o
 .debug_line    0x000000000000147b      0x1ef protect.o
 .debug_line    0x000000000000166a      0x4be console.o
 .debug_line    0x0000000000001b28      0x28a keyboard.o
 .debug_line    0x0000000000001db2       0xb0 open.o
 .debug_line    0x0000000000001e62       0xa7 read.o
 .debug_line    0x0000000000001f09       0xa8 write.o
 .debug_line    0x0000000000001fb1       0xad close.o
 .debug_line    0x000000000000205e       0xb7 wait.o
 .debug_line    0x0000000000002115       0xa0 exit.o
 .debug_line    0x00000000000021b5       0xae fork.o
 .debug_line    0x0000000000002263       0xa0 getpid.o
 .debug_line    0x0000000000002303      0x15b exec.o
 .debug_line    0x000000000000245e       0xe4 mm/main.o
 .debug_line    0x0000000000002542      0x1d3 mm/exec.o
 .debug_line    0x0000000000002715      0x202 mm/forkexit.o
 .debug_line    0x0000000000002917      0x4be mem/mem.o
 .debug_line    0x0000000000002dd5      0xde1 kernel_main_old.o
 .debug_line    0x0000000000003bb6      0x16f my_process.o
 .debug_line    0x0000000000003d25      0x15e double_link_list.o
 .debug_line    0x0000000000003e83      0x11f thread.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000     0x1a04
 *(.debug_str)
 .debug_str     0x0000000000000000      0x491 kernel_main.o
                                        0x556 (size before relaxing)
 .debug_str     0x0000000000000491      0x2a8 hd.o
                                        0x7dd (size before relaxing)
 .debug_str     0x0000000000000739      0x458 fs_main.o
                                        0x997 (size before relaxing)
 .debug_str     0x0000000000000b91       0x3f global.o
                                        0x539 (size before relaxing)
 .debug_str     0x0000000000000bd0       0x3f process.o
                                        0x52f (size before relaxing)
 .debug_str     0x0000000000000c0f      0x10e protect.o
                                        0x624 (size before relaxing)
 .debug_str     0x0000000000000d1d      0x103 console.o
                                        0x5f5 (size before relaxing)
 .debug_str     0x0000000000000e20       0x84 keyboard.o
                                        0x57b (size before relaxing)
 .debug_str     0x0000000000000ea4       0x14 open.o
                                        0x48c (size before relaxing)
 .debug_str     0x0000000000000eb8        0xb read.o
                                        0x483 (size before relaxing)
 .debug_str     0x0000000000000ec3        0xc write.o
                                        0x485 (size before relaxing)
 .debug_str     0x0000000000000ecf        0xc close.o
                                        0x47f (size before relaxing)
 .debug_str     0x0000000000000edb        0xb wait.o
                                        0x484 (size before relaxing)
 .debug_str     0x0000000000000ee6        0xb exit.o
                                        0x484 (size before relaxing)
 .debug_str     0x0000000000000ef1        0xb fork.o
                                        0x47d (size before relaxing)
 .debug_str     0x0000000000000efc       0x14 getpid.o
                                        0x481 (size before relaxing)
 .debug_str     0x0000000000000f10       0x2b exec.o
                                        0x4a6 (size before relaxing)
 .debug_str     0x0000000000000f3b       0x32 mm/main.o
                                        0x471 (size before relaxing)
 .debug_str     0x0000000000000f6d      0x18f mm/exec.o
                                        0x5f1 (size before relaxing)
 .debug_str     0x00000000000010fc       0xab mm/forkexit.o
                                        0x53e (size before relaxing)
 .debug_str     0x00000000000011a7      0x293 mem/mem.o
                                        0x842 (size before relaxing)
 .debug_str     0x000000000000143a      0x477 kernel_main_old.o
                                        0xa5a (size before relaxing)
 .debug_str     0x00000000000018b1       0x9f my_process.o
                                        0x626 (size before relaxing)
 .debug_str     0x0000000000001950       0x76 double_link_list.o
                                        0x56f (size before relaxing)
 .debug_str     0x00000000000019c6       0x3e thread.o
                                        0x5e0 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x78
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x48 hd.o
 .debug_ranges  0x0000000000000048       0x18 mm/exec.o
 .debug_ranges  0x0000000000000060       0x18 kernel_main_old.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
