
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
idt_ptr             0x6               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
gdtArray            0x1000            kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
tty_table           0x186c            kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
root                0x28              fs_main.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
ticks               0x4               kernel_main.o
UserPool            0x10              kernel_main.o
console_table       0x30              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table          0x3ef0            global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mem/mem.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x802d
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0x7b kernel_sub.o
                0x00000000c0001500                _start
 *fill*         0x00000000c000157b        0x5 
 .text          0x00000000c0001580      0x341 kernel.o
                0x00000000c0001580                InterruptTest
                0x00000000c000158c                disp_str
                0x00000000c00015c7                disp_str_colour
                0x00000000c0001603                divide_zero_fault
                0x00000000c0001609                single_step_fault
                0x00000000c000160f                non_maskable_interrupt
                0x00000000c0001615                breakpoint_trap
                0x00000000c000161b                overflow_trap
                0x00000000c0001621                bound_range_exceeded_fault
                0x00000000c0001627                invalid_opcode_fault
                0x00000000c000162d                coprocessor_not_available_fault
                0x00000000c0001633                double_fault_exception_abort
                0x00000000c0001637                coprocessor_segment_overrun
                0x00000000c000163d                invalid_task_state_segment_fault
                0x00000000c0001641                segment_not_present_fault
                0x00000000c0001645                stack_exception_fault
                0x00000000c0001649                general_protection_exception_fault
                0x00000000c000164d                page_fault
                0x00000000c0001651                coprocessor_error_fault
                0x00000000c0001657                align_check_fault
                0x00000000c000165b                simd_float_exception_fault
                0x00000000c000166a                hwint0
                0x00000000c00016b3                hwint1
                0x00000000c00016fc                hwint14
                0x00000000c0001745                sys_call
                0x00000000c000178f                restart
                0x00000000c00017d3                in_byte
                0x00000000c00017df                out_byte
                0x00000000c0001801                disable_int
                0x00000000c0001803                enable_int
                0x00000000c0001899                enable_8259A_casecade_irq
                0x00000000c00018a3                disable_8259A_casecade_irq
                0x00000000c00018ad                enable_8259A_slave_winchester_irq
                0x00000000c00018b7                disable_8259A_slave_winchester_irq
 .text          0x00000000c00018c1     0x280e kernel_main.o
                0x00000000c00018c1                untar
                0x00000000c0001acb                atoi
                0x00000000c0001b71                disp_int
                0x00000000c0001b9a                exception_handler
                0x00000000c0001d3b                init_internal_interrupt
                0x00000000c0001eb0                test
                0x00000000c0001ee6                disp_str_colour3
                0x00000000c0001eec                spurious_irq
                0x00000000c0001f65                init_keyboard
                0x00000000c0001fe2                init
                0x00000000c0002013                kernel_main
                0x00000000c0002348                TestFS
                0x00000000c000271c                wait_exit
                0x00000000c00027ea                INIT_fork
                0x00000000c0002ada                simple_shell
                0x00000000c0002cb1                test_split_str
                0x00000000c0002e3e                test_shell
                0x00000000c0002f1c                test_exec
                0x00000000c0002fe4                INIT
                0x00000000c0002ff1                TestA
                0x00000000c0002ff9                delay
                0x00000000c0003040                TestB
                0x00000000c000306f                TestC
                0x00000000c00030a2                sys_get_ticks
                0x00000000c00030ac                sys_write
                0x00000000c00030fd                milli_delay
                0x00000000c0003139                TaskSys
                0x00000000c00031b6                Printf
                0x00000000c0003214                vsprintf
                0x00000000c00033c0                printx
                0x00000000c0003403                sys_printx
                0x00000000c00034e2                spin
                0x00000000c00034e7                panic
                0x00000000c0003505                assertion_failure
                0x00000000c000353c                dead_lock
                0x00000000c0003546                sys_send_msg
                0x00000000c00038ac                sys_receive_msg
                0x00000000c0003d6b                disp_str_colour_debug
                0x00000000c0003d71                send_rec
                0x00000000c0003e57                block
                0x00000000c0003e69                unblock
                0x00000000c0003ea0                get_ticks_ipc
                0x00000000c0003eeb                itoa
                0x00000000c0003f41                i2a
                0x00000000c0003fa7                inform_int
                0x00000000c0004060                strcmp
 .text          0x00000000c00040cf      0xc69 hd.o
                0x00000000c00040cf                TaskHD
                0x00000000c00040e1                init_hd
                0x00000000c00040fb                hd_handle
                0x00000000c00041c0                hd_cmd_out
                0x00000000c00042c2                hd_identify
                0x00000000c0004379                print_hdinfo
                0x00000000c0004507                print_dpt_entry
                0x00000000c0004573                get_partition_table
                0x00000000c0004652                partition
                0x00000000c000486c                hd_open
                0x00000000c00048bb                get_hd_ioctl
                0x00000000c0004914                wait_for
                0x00000000c0004945                interrupt_wait
                0x00000000c0004964                hd_rdwt
                0x00000000c0004b96                hd_handler
                0x00000000c0004bc2                waitfor
                0x00000000c0004c13                print_hd_info
                0x00000000c0004d00                is_empty
 *fill*         0x00000000c0004d38        0x8 
 .text          0x00000000c0004d40       0x74 syscall.o
                0x00000000c0004d40                get_ticks
                0x00000000c0004d48                write2
                0x00000000c0004d58                write_debug
                0x00000000c0004d78                send_msg
                0x00000000c0004d9e                receive_msg
 .text          0x00000000c0004db4     0x1ec8 fs_main.o
                0x00000000c0004db4                task_fs
                0x00000000c0004eef                rd_wt
                0x00000000c0004f93                mkfs
                0x00000000c0005553                init_fs
                0x00000000c0005582                do_open
                0x00000000c0005763                search_file
                0x00000000c0005893                strip_path
                0x00000000c000595f                get_inode
                0x00000000c0005b21                create_file
                0x00000000c0005c2c                alloc_imap_bit
                0x00000000c0005d29                alloc_smap_bit
                0x00000000c0005eca                new_inode
                0x00000000c0005fe8                new_dir_entry
                0x00000000c00061f0                do_unlink
                0x00000000c00066c0                do_rdwt
                0x00000000c0006a30                sync_inode
                0x00000000c0006b84                put_inode
                0x00000000c0006bc2                do_close
                0x00000000c0006c14                get_super_block
 .text          0x00000000c0006c7c        0x0 global.o
 .text          0x00000000c0006c7c      0x1ff process.o
                0x00000000c0006c7c                check
                0x00000000c0006cf1                schedule_process
                0x00000000c0006db7                clock_handler
                0x00000000c0006e40                pid2proc
                0x00000000c0006e5c                proc2pid
 .text          0x00000000c0006e7b      0x381 protect.o
                0x00000000c0006e7b                InitDescriptor
                0x00000000c0006ee8                Seg2PhyAddr
                0x00000000c0006f29                Seg2PhyAddrLDT
                0x00000000c0006f6d                VirAddr2PhyAddr
                0x00000000c0006f83                v2l
                0x00000000c0006fc6                init_propt
                0x00000000c0007115                InitInterruptDesc
                0x00000000c0007171                ReloadGDT
 .text          0x00000000c00071fc      0xa28 console.o
                0x00000000c00071fc                select_console
                0x00000000c0007238                flush
                0x00000000c0007271                set_cursor
                0x00000000c00072cf                set_console_start_video_addr
                0x00000000c000732d                put_key
                0x00000000c0007399                scroll_up
                0x00000000c00073db                scroll_down
                0x00000000c0007446                out_char
                0x00000000c00075ed                tty_dev_read
                0x00000000c0007617                tty_dev_write
                0x00000000c000781e                tty_do_read
                0x00000000c00078af                tty_do_write
                0x00000000c00079f7                init_screen
                0x00000000c0007a8b                init_tty
                0x00000000c0007b25                TaskTTY
 .text          0x00000000c0007c24      0x407 keyboard.o
                0x00000000c0007c24                keyboard_handler
                0x00000000c0007ca6                read_from_keyboard_buf
                0x00000000c0007d06                keyboard_read
                0x00000000c0007e85                init_keyboard_handler
                0x00000000c0007e99                in_process
 .text          0x00000000c000802b       0x55 open.o
                0x00000000c000802b                open
 .text          0x00000000c0008080       0x37 read.o
                0x00000000c0008080                read
 .text          0x00000000c00080b7       0x37 write.o
                0x00000000c00080b7                write
 .text          0x00000000c00080ee       0x4c close.o
                0x00000000c00080ee                close
 .text          0x00000000c000813a       0x3e wait.o
                0x00000000c000813a                wait
 .text          0x00000000c0008178       0x29 exit.o
                0x00000000c0008178                exit
 .text          0x00000000c00081a1       0x5f fork.o
                0x00000000c00081a1                fork
 .text          0x00000000c0008200       0x25 getpid.o
                0x00000000c0008200                getpid
 .text          0x00000000c0008225      0x235 exec.o
                0x00000000c0008225                exec
                0x00000000c0008290                execv
                0x00000000c0008435                execl
 .text          0x00000000c000845a      0x130 mm/main.o
                0x00000000c000845a                TaskMM
                0x00000000c000856b                alloc_mem
 .text          0x00000000c000858a      0x344 mm/exec.o
                0x00000000c000858a                do_exec2
                0x00000000c000859e                do_exec
 .text          0x00000000c00088ce      0x424 mm/forkexit.o
                0x00000000c00088ce                do_fork
                0x00000000c0008ad8                do_exit
                0x00000000c0008bd4                do_wait
                0x00000000c0008c9e                cleanup
 .text          0x00000000c0008cf2      0x83b mem/mem.o
                0x00000000c0008cf2                test_bit_val
                0x00000000c0008d5b                set_bit_val
                0x00000000c0008dd6                set_bits
                0x00000000c0008e10                get_first_free_bit
                0x00000000c0008e54                get_bits
                0x00000000c0008f0e                get_a_page2
                0x00000000c0008f3d                get_a_page
                0x00000000c0008fcc                get_virtual_address
                0x00000000c000903d                ptr_pde
                0x00000000c0009050                ptr_pte
                0x00000000c0009077                add_map_entry
                0x00000000c000910b                get_physical_address
                0x00000000c000913d                alloc_memory
                0x00000000c0009199                init_memory2
                0x00000000c0009410                init_memory
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c0009540      0xa01
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0009540      0x6bd kernel_main.o
 .rodata        0x00000000c0009bfd      0x10e hd.o
 *fill*         0x00000000c0009d0b        0x1 
 .rodata        0x00000000c0009d0c      0x173 fs_main.o
                0x00000000c0009d0c                FSBUF_SIZE
 .rodata        0x00000000c0009e7f        0x6 process.o
 .rodata        0x00000000c0009e85       0x24 close.o
 .rodata        0x00000000c0009ea9       0x1b fork.o
 .rodata        0x00000000c0009ec4       0x31 exec.o
 .rodata        0x00000000c0009ef5       0x11 mm/main.o
 *fill*         0x00000000c0009f06        0x2 
 .rodata        0x00000000c0009f08       0x37 mm/forkexit.o
 .rodata        0x00000000c0009f3f        0x2 mem/mem.o

.txt            0x00000000c0009f41       0xaa
 .txt           0x00000000c0009f41       0x82 string.o
                0x00000000c0009f41                Memcpy
                0x00000000c0009f6f                Memset
                0x00000000c0009f8e                Strcpy
                0x00000000c0009fa8                Strlen
 .txt           0x00000000c0009fc3       0x28 hd_rdwt.o
                0x00000000c0009fc3                read_port
                0x00000000c0009fd7                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c0009fec     0x131c
 *(.eh_frame)
 .eh_frame      0x00000000c0009fec      0x5cc kernel_main.o
 .eh_frame      0x00000000c000a5b8      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x00000000c000a7fc      0x288 fs_main.o
                                        0x2a0 (size before relaxing)
 .eh_frame      0x00000000c000aa84       0xa0 process.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000ab24      0x104 protect.o
                                        0x11c (size before relaxing)
 .eh_frame      0x00000000c000ac28      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x00000000c000ae08       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000aea8       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000aec8       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000aee8       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000af08       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000af28       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000af48       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000af68       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000af88       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000afa8       0x64 exec.o
                                         0x7c (size before relaxing)
 .eh_frame      0x00000000c000b00c       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x00000000c000b048       0x4c mm/exec.o
                                         0x64 (size before relaxing)
 .eh_frame      0x00000000c000b094       0x90 mm/forkexit.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x00000000c000b124      0x1e4 mem/mem.o
                                        0x1fc (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c000d000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c000d000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c000d000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c000d000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c000d000        0x0
 *(.got)
 .got           0x00000000c000d000        0x0 kernel_sub.o
 *(.igot)
                0x00000000c000d000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c000d000        0x0
 *(.got.plt)
 .got.plt       0x00000000c000d000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x00000000c000d000        0x0 kernel_sub.o

.data           0x00000000c000d000      0x700
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000d000        0xf kernel_sub.o
 *fill*         0x00000000c000d00f        0x1 
 .data          0x00000000c000d010        0xf kernel.o
 .data          0x00000000c000d01f        0x0 kernel_main.o
 .data          0x00000000c000d01f        0x0 hd.o
 *fill*         0x00000000c000d01f        0x1 
 .data          0x00000000c000d020        0x0 syscall.o
 .data          0x00000000c000d020        0x8 fs_main.o
                0x00000000c000d020                fsbuf
                0x00000000c000d024                super_block_buf
 *fill*         0x00000000c000d028       0x18 
 .data          0x00000000c000d040       0xc0 global.o
                0x00000000c000d040                user_task_table
                0x00000000c000d060                sys_task_table
                0x00000000c000d0ec                sys_call_table
 .data          0x00000000c000d100        0x0 process.o
 .data          0x00000000c000d100        0x0 protect.o
 .data          0x00000000c000d100        0x0 console.o
 .data          0x00000000c000d100      0x600 keyboard.o
                0x00000000c000d100                keymap
 .data          0x00000000c000d700        0x0 open.o
 .data          0x00000000c000d700        0x0 read.o
 .data          0x00000000c000d700        0x0 write.o
 .data          0x00000000c000d700        0x0 close.o
 .data          0x00000000c000d700        0x0 wait.o
 .data          0x00000000c000d700        0x0 exit.o
 .data          0x00000000c000d700        0x0 fork.o
 .data          0x00000000c000d700        0x0 getpid.o
 .data          0x00000000c000d700        0x0 exec.o
 .data          0x00000000c000d700        0x0 mm/main.o
 .data          0x00000000c000d700        0x0 mm/exec.o
 .data          0x00000000c000d700        0x0 mm/forkexit.o
 .data          0x00000000c000d700        0x0 mem/mem.o

.data1
 *(.data1)
                0x00000000c000d700                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c000d700                . = .
                0x00000000c000d700                __bss_start = .

.bss            0x00000000c000d700    0x79990
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c000d700      0x800 kernel_sub.o
 .bss           0x00000000c000df00      0x800 kernel.o
 .bss           0x00000000c000e700        0x0 kernel_main.o
 .bss           0x00000000c000e700        0x0 hd.o
 .bss           0x00000000c000e700        0x4 fs_main.o
                0x00000000c000e700                c
 .bss           0x00000000c000e704        0x0 global.o
 .bss           0x00000000c000e704        0x0 process.o
 .bss           0x00000000c000e704        0x0 protect.o
 .bss           0x00000000c000e704        0x0 console.o
 .bss           0x00000000c000e704        0x0 keyboard.o
 .bss           0x00000000c000e704        0x0 open.o
 .bss           0x00000000c000e704        0x0 read.o
 .bss           0x00000000c000e704        0x0 write.o
 .bss           0x00000000c000e704        0x0 close.o
 .bss           0x00000000c000e704        0x0 wait.o
 .bss           0x00000000c000e704        0x0 exit.o
 .bss           0x00000000c000e704        0x0 fork.o
 .bss           0x00000000c000e704        0x0 getpid.o
 .bss           0x00000000c000e704        0x0 exec.o
 .bss           0x00000000c000e704        0x0 mm/main.o
 .bss           0x00000000c000e704        0x0 mm/exec.o
 .bss           0x00000000c000e704        0x0 mm/forkexit.o
 .bss           0x00000000c000e704        0x0 mem/mem.o
 *(COMMON)
 *fill*         0x00000000c000e704       0x1c 
 COMMON         0x00000000c000e720     0x37f1 kernel_main.o
                0x00000000c000e720                current_tty
                0x00000000c000e724                is_e0
                0x00000000c000e728                idt_ptr
                0x00000000c000e730                KernelVirtualMemory
                0x00000000c000e740                gdtArray
                0x00000000c000f740                dis_pos
                0x00000000c000f744                k_reenter
                0x00000000c000f760                gdt
                0x00000000c000fb60                proc_ready_table
                0x00000000c000fb64                pcaller
                0x00000000c000fb80                keyboard_buffer
                0x00000000c000fda0                tty_table
                0x00000000c0011620                tss
                0x00000000c001168c                KernelPool
                0x00000000c001169c                counter
                0x00000000c00116a0                key_pressed
                0x00000000c00116a4                is_shift
                0x00000000c00116a8                gdt_ptr
                0x00000000c00116c0                idt
                0x00000000c0011ec0                ticks
                0x00000000c0011ec4                UserPool
                0x00000000c0011ee0                console_table
                0x00000000c0011f10                is_disp
 *fill*         0x00000000c0011f11        0xf 
 COMMON         0x00000000c0011f20      0x440 hd.o
                0x00000000c0011f20                hd_info
                0x00000000c0012160                hd_cache
 COMMON         0x00000000c0012360      0xe28 fs_main.o
                0x00000000c0012360                file_desc_table
                0x00000000c0012760                inode_table
                0x00000000c0013160                root
 *fill*         0x00000000c0013188       0x18 
 COMMON         0x00000000c00131a0    0x73ef0 global.o
                0x00000000c00131a0                proc_stack
                0x00000000c00831a0                proc_table
                0x00000000c0087090                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0087090                . = ALIGN (0x4)
                0x00000000c0087090                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0087090                . = ALIGN (0x4)
                0x00000000c0087090                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c0087090                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o
 .comment       0x000000000000002c       0x2d mem/mem.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x298
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel_main.o
 .debug_aranges
                0x0000000000000020       0x20 hd.o
 .debug_aranges
                0x0000000000000040       0x20 fs_main.o
 .debug_aranges
                0x0000000000000060       0x18 global.o
 .debug_aranges
                0x0000000000000078       0x20 process.o
 .debug_aranges
                0x0000000000000098       0x20 protect.o
 .debug_aranges
                0x00000000000000b8       0x20 console.o
 .debug_aranges
                0x00000000000000d8       0x20 keyboard.o
 .debug_aranges
                0x00000000000000f8       0x20 open.o
 .debug_aranges
                0x0000000000000118       0x20 read.o
 .debug_aranges
                0x0000000000000138       0x20 write.o
 .debug_aranges
                0x0000000000000158       0x20 close.o
 .debug_aranges
                0x0000000000000178       0x20 wait.o
 .debug_aranges
                0x0000000000000198       0x20 exit.o
 .debug_aranges
                0x00000000000001b8       0x20 fork.o
 .debug_aranges
                0x00000000000001d8       0x20 getpid.o
 .debug_aranges
                0x00000000000001f8       0x20 exec.o
 .debug_aranges
                0x0000000000000218       0x20 mm/main.o
 .debug_aranges
                0x0000000000000238       0x20 mm/exec.o
 .debug_aranges
                0x0000000000000258       0x20 mm/forkexit.o
 .debug_aranges
                0x0000000000000278       0x20 mem/mem.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000    0x14612
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000     0x24a7 kernel_main.o
 .debug_info    0x00000000000024a7     0x14e0 hd.o
 .debug_info    0x0000000000003987     0x1ca5 fs_main.o
 .debug_info    0x000000000000562c      0xc27 global.o
 .debug_info    0x0000000000006253      0xccf process.o
 .debug_info    0x0000000000006f22      0xf43 protect.o
 .debug_info    0x0000000000007e65      0xfb1 console.o
 .debug_info    0x0000000000008e16      0xd85 keyboard.o
 .debug_info    0x0000000000009b9b      0xc2e open.o
 .debug_info    0x000000000000a7c9      0xc3e read.o
 .debug_info    0x000000000000b407      0xc47 write.o
 .debug_info    0x000000000000c04e      0xc1e close.o
 .debug_info    0x000000000000cc6c      0xc29 wait.o
 .debug_info    0x000000000000d895      0xc1b exit.o
 .debug_info    0x000000000000e4b0      0xc10 fork.o
 .debug_info    0x000000000000f0c0      0xc10 getpid.o
 .debug_info    0x000000000000fcd0      0xd67 exec.o
 .debug_info    0x0000000000010a37      0xc21 mm/main.o
 .debug_info    0x0000000000011658      0xf0b mm/exec.o
 .debug_info    0x0000000000012563      0xe7b mm/forkexit.o
 .debug_info    0x00000000000133de     0x1234 mem/mem.o

.debug_abbrev   0x0000000000000000     0x284a
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x3be kernel_main.o
 .debug_abbrev  0x00000000000003be      0x2bf hd.o
 .debug_abbrev  0x000000000000067d      0x2cb fs_main.o
 .debug_abbrev  0x0000000000000948      0x146 global.o
 .debug_abbrev  0x0000000000000a8e      0x1e7 process.o
 .debug_abbrev  0x0000000000000c75      0x201 protect.o
 .debug_abbrev  0x0000000000000e76      0x268 console.o
 .debug_abbrev  0x00000000000010de      0x1ea keyboard.o
 .debug_abbrev  0x00000000000012c8      0x179 open.o
 .debug_abbrev  0x0000000000001441      0x191 read.o
 .debug_abbrev  0x00000000000015d2      0x191 write.o
 .debug_abbrev  0x0000000000001763      0x179 close.o
 .debug_abbrev  0x00000000000018dc      0x17b wait.o
 .debug_abbrev  0x0000000000001a57      0x177 exit.o
 .debug_abbrev  0x0000000000001bce      0x166 fork.o
 .debug_abbrev  0x0000000000001d34      0x166 getpid.o
 .debug_abbrev  0x0000000000001e9a      0x1af exec.o
 .debug_abbrev  0x0000000000002049      0x1cf mm/main.o
 .debug_abbrev  0x0000000000002218      0x1ba mm/exec.o
 .debug_abbrev  0x00000000000023d2      0x1f5 mm/forkexit.o
 .debug_abbrev  0x00000000000025c7      0x283 mem/mem.o

.debug_line     0x0000000000000000     0x3b92
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0xdc5 kernel_main.o
 .debug_line    0x0000000000000dc5      0x55b hd.o
 .debug_line    0x0000000000001320      0xbdf fs_main.o
 .debug_line    0x0000000000001eff       0x95 global.o
 .debug_line    0x0000000000001f94      0x1d7 process.o
 .debug_line    0x000000000000216b      0x23d protect.o
 .debug_line    0x00000000000023a8      0x533 console.o
 .debug_line    0x00000000000028db      0x28a keyboard.o
 .debug_line    0x0000000000002b65       0xc5 open.o
 .debug_line    0x0000000000002c2a       0xbc read.o
 .debug_line    0x0000000000002ce6       0xbd write.o
 .debug_line    0x0000000000002da3       0xc2 close.o
 .debug_line    0x0000000000002e65       0xcc wait.o
 .debug_line    0x0000000000002f31       0xb5 exit.o
 .debug_line    0x0000000000002fe6       0xc3 fork.o
 .debug_line    0x00000000000030a9       0xb5 getpid.o
 .debug_line    0x000000000000315e      0x170 exec.o
 .debug_line    0x00000000000032ce       0xf9 mm/main.o
 .debug_line    0x00000000000033c7      0x1f4 mm/exec.o
 .debug_line    0x00000000000035bb      0x217 mm/forkexit.o
 .debug_line    0x00000000000037d2      0x3c0 mem/mem.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000     0x1704
 *(.debug_str)
 .debug_str     0x0000000000000000      0x890 kernel_main.o
                                        0x98c (size before relaxing)
 .debug_str     0x0000000000000890      0x290 hd.o
                                        0x795 (size before relaxing)
 .debug_str     0x0000000000000b20      0x437 fs_main.o
                                        0x94f (size before relaxing)
 .debug_str     0x0000000000000f57        0x9 global.o
                                        0x4a7 (size before relaxing)
 .debug_str     0x0000000000000f60       0x50 process.o
                                        0x4ee (size before relaxing)
 .debug_str     0x0000000000000fb0      0x10d protect.o
                                        0x5e2 (size before relaxing)
 .debug_str     0x00000000000010bd      0x103 console.o
                                        0x5ad (size before relaxing)
 .debug_str     0x00000000000011c0       0x84 keyboard.o
                                        0x533 (size before relaxing)
 .debug_str     0x0000000000001244        0xb open.o
                                        0x4bd (size before relaxing)
 .debug_str     0x000000000000124f        0xb read.o
                                        0x4b4 (size before relaxing)
 .debug_str     0x000000000000125a        0xc write.o
                                        0x4b6 (size before relaxing)
 .debug_str     0x0000000000001266        0xc close.o
                                        0x4b0 (size before relaxing)
 .debug_str     0x0000000000001272        0xb wait.o
                                        0x4b5 (size before relaxing)
 .debug_str     0x000000000000127d        0xb exit.o
                                        0x4b5 (size before relaxing)
 .debug_str     0x0000000000001288        0xb fork.o
                                        0x4ae (size before relaxing)
 .debug_str     0x0000000000001293       0x14 getpid.o
                                        0x4b2 (size before relaxing)
 .debug_str     0x00000000000012a7       0x1a exec.o
                                        0x4d7 (size before relaxing)
 .debug_str     0x00000000000012c1       0x32 mm/main.o
                                        0x4a2 (size before relaxing)
 .debug_str     0x00000000000012f3      0x17b mm/exec.o
                                        0x622 (size before relaxing)
 .debug_str     0x000000000000146e       0xb8 mm/forkexit.o
                                        0x560 (size before relaxing)
 .debug_str     0x0000000000001526      0x1de mem/mem.o
                                        0x6ed (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x90
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x30 kernel_main.o
 .debug_ranges  0x0000000000000030       0x48 hd.o
 .debug_ranges  0x0000000000000078       0x18 mm/exec.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
