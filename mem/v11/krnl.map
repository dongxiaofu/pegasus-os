
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
phy_super_block_buf
                    0x4               fs_main.o
phy_fsbuf           0x4               fs_main.o
idt_ptr             0x6               kernel_main.o
pid                 0x4               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
inode_table         0xa00             fs_main.o
current_dis_pos     0x4               kernel_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
super_block_buf     0x4               fs_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
test_ticks          0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
pcb_list            0x10              kernel_main.o
gdt_index           0x4               kernel_main.o
tty_table           0x828             kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
fsbuf               0x4               fs_main.o
root                0x28              fs_main.o
kernel_mem_block_decs_array
                    0xf0              mem/mem.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
fork_pid            0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
main_thread         0x4               kernel_main.o
ticks               0x8               kernel_main.o
is_init             0x1               kernel_main.o
UserPool            0x10              kernel_main.o
all_pcb_list        0x10              kernel_main.o
console_table       0x10              kernel_main.o
is_disp             0x1               kernel_main.o
MAIN_THREAD_PAGE_DIRECTORY
                    0x4               kernel_main.o
proc_table          0x15e0            global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mem/mem.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main_old.o
 .note.GNU-stack
                0x0000000000000000        0x0 my_process.o
 .note.GNU-stack
                0x0000000000000000        0x0 double_link_list.o
 .note.GNU-stack
                0x0000000000000000        0x0 thread.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0100000
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
LOAD kernel_main_old.o
LOAD my_process.o
LOAD switch_to.o
LOAD double_link_list.o
LOAD thread.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0100000     0xa430
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0100000       0x71 kernel_sub.o
                0x00000000c0100000                _start
 *fill*         0x00000000c0100071        0xf 
 .text          0x00000000c0100080      0x331 kernel.o
                0x00000000c0100080                InterruptTest
                0x00000000c010008c                disp_str
                0x00000000c01000c7                disp_str_colour
                0x00000000c0100103                divide_zero_fault
                0x00000000c0100109                single_step_fault
                0x00000000c010010f                non_maskable_interrupt
                0x00000000c0100115                breakpoint_trap
                0x00000000c010011b                overflow_trap
                0x00000000c0100121                bound_range_exceeded_fault
                0x00000000c0100127                invalid_opcode_fault
                0x00000000c010012d                coprocessor_not_available_fault
                0x00000000c0100133                double_fault_exception_abort
                0x00000000c0100137                coprocessor_segment_overrun
                0x00000000c010013d                invalid_task_state_segment_fault
                0x00000000c0100141                segment_not_present_fault
                0x00000000c0100145                stack_exception_fault
                0x00000000c0100149                general_protection_exception_fault
                0x00000000c0100154                page_fault
                0x00000000c0100158                coprocessor_error_fault
                0x00000000c010015e                align_check_fault
                0x00000000c0100162                simd_float_exception_fault
                0x00000000c0100171                hwint0
                0x00000000c010019f                hwint1
                0x00000000c01001e2                hwint14
                0x00000000c0100221                sys_call
                0x00000000c0100267                fork_restart
                0x00000000c0100276                restart
                0x00000000c0100299                in_byte
                0x00000000c01002a5                out_byte
                0x00000000c01002c7                disable_int
                0x00000000c01002c9                enable_int
                0x00000000c010035f                enable_8259A_casecade_irq
                0x00000000c0100369                disable_8259A_casecade_irq
                0x00000000c0100373                enable_8259A_slave_winchester_irq
                0x00000000c010037d                disable_8259A_slave_winchester_irq
                0x00000000c0100387                update_cr3
                0x00000000c0100394                update_tss
                0x00000000c01003a3                get_running_thread_pcb
                0x00000000c01003ab                sys_call_test
 .text          0x00000000c01003b1      0x315 kernel_main.o
                0x00000000c01003b1                kernel_main
                0x00000000c0100537                init
                0x00000000c01005cb                kernel_thread_a
                0x00000000c0100618                kernel_thread_b
                0x00000000c0100665                kernel_thread_c
                0x00000000c010067b                kernel_thread_d
                0x00000000c0100691                user_proc_a
                0x00000000c01006ae                user_proc_b
 .text          0x00000000c01006c6      0xe1d hd.o
                0x00000000c01006c6                TaskHD
                0x00000000c010070b                init_hd
                0x00000000c0100725                hd_handle
                0x00000000c010082a                hd_cmd_out
                0x00000000c010092c                hd_identify
                0x00000000c01009e3                print_hdinfo
                0x00000000c0100b71                print_dpt_entry
                0x00000000c0100bdd                get_partition_table
                0x00000000c0100cbc                partition
                0x00000000c0100ed6                hd_open
                0x00000000c0100f7d                get_hd_ioctl
                0x00000000c010102e                wait_for
                0x00000000c010105f                interrupt_wait
                0x00000000c01010af                hd_rdwt
                0x00000000c010134e                hd_handler
                0x00000000c010137a                waitfor
                0x00000000c01013be                print_hd_info
                0x00000000c01014ab                is_empty
 *fill*         0x00000000c01014e3        0xd 
 .text          0x00000000c01014f0       0x69 syscall.o
                0x00000000c01014f0                write_debug
                0x00000000c0101500                send_msg
                0x00000000c0101516                receive_msg
                0x00000000c010152c                sys_malloc
                0x00000000c0101541                sys_free
 .text          0x00000000c0101559     0x204f fs_main.o
                0x00000000c0101559                task_fs
                0x00000000c0101764                rd_wt
                0x00000000c010183d                mkfs
                0x00000000c0101e1f                init_fs
                0x00000000c0101e73                do_open
                0x00000000c0102062                search_file
                0x00000000c0102194                strip_path
                0x00000000c0102260                get_inode
                0x00000000c0102422                create_file
                0x00000000c010252d                alloc_imap_bit
                0x00000000c010262a                alloc_smap_bit
                0x00000000c01027cb                new_inode
                0x00000000c01028e9                new_dir_entry
                0x00000000c0102af5                do_unlink
                0x00000000c0102fd1                do_rdwt
                0x00000000c010335c                sync_inode
                0x00000000c01034b0                put_inode
                0x00000000c01034ee                do_close
                0x00000000c0103540                get_super_block
 .text          0x00000000c01035a8        0x0 global.o
 .text          0x00000000c01035a8      0x21b process.o
                0x00000000c01035a8                schedule_process
                0x00000000c01036b5                clock_handler
                0x00000000c0103726                pid2proc
                0x00000000c01037ac                proc2pid
 .text          0x00000000c01037c3      0x3a0 protect.o
                0x00000000c01037c3                InitDescriptor
                0x00000000c0103830                Seg2PhyAddr
                0x00000000c0103871                Seg2PhyAddrLDT
                0x00000000c01038b5                VirAddr2PhyAddr
                0x00000000c01038cb                v2l
                0x00000000c010390e                init_propt
                0x00000000c0103a7c                InitInterruptDesc
                0x00000000c0103ad8                ReloadGDT
 .text          0x00000000c0103b63      0xaca console.o
                0x00000000c0103b63                select_console
                0x00000000c0103b9f                flush
                0x00000000c0103bd8                set_cursor
                0x00000000c0103c36                set_console_start_video_addr
                0x00000000c0103c94                put_key
                0x00000000c0103d00                scroll_up
                0x00000000c0103d42                scroll_down
                0x00000000c0103dad                out_char
                0x00000000c0103f6a                tty_dev_read
                0x00000000c0103f94                tty_dev_write
                0x00000000c01041c1                tty_do_read
                0x00000000c0104289                tty_do_write
                0x00000000c01043ec                init_screen
                0x00000000c0104475                init_tty
                0x00000000c010452a                TaskTTY
 .text          0x00000000c010462d      0x40f keyboard.o
                0x00000000c010462d                keyboard_handler
                0x00000000c01046b1                read_from_keyboard_buf
                0x00000000c0104717                keyboard_read
                0x00000000c0104896                init_keyboard_handler
                0x00000000c01048aa                in_process
 .text          0x00000000c0104a3c       0x95 open.o
                0x00000000c0104a3c                open
 .text          0x00000000c0104ad1      0x181 read.o
                0x00000000c0104ad1                read
 .text          0x00000000c0104c52       0x85 write.o
                0x00000000c0104c52                write
 .text          0x00000000c0104cd7       0x52 close.o
                0x00000000c0104cd7                close
 .text          0x00000000c0104d29       0x44 wait.o
                0x00000000c0104d29                wait
 .text          0x00000000c0104d6d       0x2f exit.o
                0x00000000c0104d6d                exit
 .text          0x00000000c0104d9c       0x48 fork.o
                0x00000000c0104d9c                fork
 .text          0x00000000c0104de4       0x2b getpid.o
                0x00000000c0104de4                getpid
 .text          0x00000000c0104e0f      0x285 exec.o
                0x00000000c0104e0f                exec
                0x00000000c0104e80                execv
                0x00000000c010506f                execl
 .text          0x00000000c0105094      0x148 mm/main.o
                0x00000000c0105094                TaskMM
                0x00000000c01051bd                alloc_mem
 .text          0x00000000c01051dc      0x419 mm/exec.o
                0x00000000c01051dc                do_exec
 .text          0x00000000c01055f5      0x271 mm/forkexit.o
                0x00000000c01055f5                do_fork
                0x00000000c0105663                do_exit
                0x00000000c01056ed                do_wait
                0x00000000c010580c                cleanup
 .text          0x00000000c0105866     0x1275 mem/mem.o
                0x00000000c0105866                init_bitmap
                0x00000000c0105889                test_bit_val
                0x00000000c01058f2                set_bit_val
                0x00000000c010596d                set_bits
                0x00000000c01059a7                get_first_free_bit
                0x00000000c01059eb                get_bits
                0x00000000c0105ab3                get_a_page
                0x00000000c0105b67                get_virtual_address_start_with_addr
                0x00000000c0105c01                get_virtual_address
                0x00000000c0105c91                ptr_pde
                0x00000000c0105ca4                ptr_pte
                0x00000000c0105ccb                add_map_entry
                0x00000000c0105d5c                alloc_virtual_memory
                0x00000000c0105e2f                get_physical_address_proc
                0x00000000c0105eab                get_physical_address
                0x00000000c0105edd                alloc_physical_memory_of_proc
                0x00000000c0105fcc                alloc_physical_memory
                0x00000000c0106094                alloc_memory
                0x00000000c01060f6                get_a_virtual_page
                0x00000000c010612e                block2arena
                0x00000000c0106144                sys_malloc2
                0x00000000c01063fa                remove_map_entry
                0x00000000c010641b                free_a_page
                0x00000000c01064c2                sys_free2
                0x00000000c010664a                init_memory_block_desc
                0x00000000c010671b                init_memory2
                0x00000000c0106992                init_memory
 .text          0x00000000c0106adb     0x2d32 kernel_main_old.o
                0x00000000c0106adb                stop_here
                0x00000000c0106b1f                catch_error
                0x00000000c0106b3c                intr_enable
                0x00000000c0106b65                intr_disable
                0x00000000c0106b8e                intr_set_status
                0x00000000c0106bac                intr_get_status
                0x00000000c0106bc9                Memcpy
                0x00000000c0106bfc                untar
                0x00000000c0106f11                atoi
                0x00000000c0106fb7                disp_int
                0x00000000c0106fe0                do_page_fault
                0x00000000c010711d                exception_handler
                0x00000000c0107304                init_internal_interrupt
                0x00000000c0107479                spurious_irq
                0x00000000c0107507                init_keyboard
                0x00000000c010754a                TestTTY
                0x00000000c01075e9                TestReadReturnValue
                0x00000000c0107666                TestWriteReturnValue
                0x00000000c010773a                TestFS2
                0x00000000c0107748                TestFS
                0x00000000c0107bea                wait_exit
                0x00000000c0107ce8                INIT_fork
                0x00000000c0107fe0                simple_shell
                0x00000000c0108179                test_shell
                0x00000000c01081e1                test_exec
                0x00000000c01082f4                INIT
                0x00000000c0108301                TestA
                0x00000000c0108336                delay
                0x00000000c010837a                TestB
                0x00000000c0108392                TestC
                0x00000000c01083c5                sys_get_ticks
                0x00000000c01083d5                sys_write
                0x00000000c0108429                milli_delay
                0x00000000c0108465                TaskSys
                0x00000000c010846a                Printf
                0x00000000c01084c8                vsprintf
                0x00000000c0108674                printx
                0x00000000c01086b7                sys_printx
                0x00000000c0108783                spin
                0x00000000c01087a9                panic
                0x00000000c01087c7                assertion_failure
                0x00000000c0108839                assertion_failure2
                0x00000000c01088ae                dead_lock
                0x00000000c01088b8                sys_send_msg
                0x00000000c0108dd7                sys_receive_msg
                0x00000000c0109437                send_rec
                0x00000000c0109532                block
                0x00000000c010956e                unblock
                0x00000000c01095be                get_ticks_ipc
                0x00000000c0109615                itoa
                0x00000000c010966b                i2a
                0x00000000c01096d1                inform_int
                0x00000000c010979e                strcmp
 .text          0x00000000c010980d      0x730 my_process.o
                0x00000000c010980d                create_user_process_address_space
                0x00000000c010989d                user_process
                0x00000000c01099ca                clone_pcb
                0x00000000c0109b3c                build_body_stack
                0x00000000c0109c6f                build_process_kernel_stack
                0x00000000c0109d32                fork_process
                0x00000000c0109dc3                process_execute
 *fill*         0x00000000c0109f3d        0x3 
 .text          0x00000000c0109f40       0x15 switch_to.o
                0x00000000c0109f40                switch_to
 .text          0x00000000c0109f55      0x329 double_link_list.o
                0x00000000c0109f55                initDoubleLinkList
                0x00000000c0109f83                isListEmpty
                0x00000000c0109fa4                findElementInList
                0x00000000c010a080                appendToDoubleLinkList
                0x00000000c010a167                insertToDoubleLinkList
                0x00000000c010a1ea                popFromDoubleLinkList
 .text          0x00000000c010a27e      0x1b2 thread.o
                0x00000000c010a27e                kernel_thread
                0x00000000c010a296                thread_init
                0x00000000c010a343                thread_create
                0x00000000c010a378                thread_start
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c010a440     0x111d
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c010a440       0xe4 kernel_main.o
 .rodata        0x00000000c010a524      0x19c hd.o
 .rodata        0x00000000c010a6c0      0x1eb fs_main.o
                0x00000000c010a6c0                FSBUF_SIZE
 .rodata        0x00000000c010a8ab       0x26 process.o
 .rodata        0x00000000c010a8d1       0x22 console.o
 .rodata        0x00000000c010a8f3       0x24 close.o
 .rodata        0x00000000c010a917       0x2d exec.o
 .rodata        0x00000000c010a944       0x11 mm/main.o
 .rodata        0x00000000c010a955       0x10 mm/exec.o
 .rodata        0x00000000c010a965       0x21 mm/forkexit.o
 .rodata        0x00000000c010a986       0x41 mem/mem.o
 *fill*         0x00000000c010a9c7       0x19 
 .rodata        0x00000000c010a9e0      0xb51 kernel_main_old.o
 .rodata        0x00000000c010b531       0x2c double_link_list.o

.txt            0x00000000c010b55d       0xaa
 .txt           0x00000000c010b55d       0x82 string.o
                0x00000000c010b55d                Memcpy2
                0x00000000c010b58b                Memset
                0x00000000c010b5aa                Strcpy
                0x00000000c010b5c4                Strlen
 .txt           0x00000000c010b5df       0x28 hd_rdwt.o
                0x00000000c010b5df                read_port
                0x00000000c010b5f3                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c010b608     0x1828
 *(.eh_frame)
 .eh_frame      0x00000000c010b608       0xfc kernel_main.o
 .eh_frame      0x00000000c010b704      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x00000000c010b948      0x27c fs_main.o
                                        0x294 (size before relaxing)
 .eh_frame      0x00000000c010bbc4       0x80 process.o
                                         0x98 (size before relaxing)
 .eh_frame      0x00000000c010bc44      0x100 protect.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c010bd44      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x00000000c010bf24       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c010bfc4       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c010bfe4       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c010c004       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c010c024       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c010c044       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c010c064       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c010c084       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c010c0a4       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c010c0c4       0x60 exec.o
                                         0x78 (size before relaxing)
 .eh_frame      0x00000000c010c124       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x00000000c010c160       0x20 mm/exec.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c010c180       0x80 mm/forkexit.o
                                         0x98 (size before relaxing)
 .eh_frame      0x00000000c010c200      0x364 mem/mem.o
                                        0x37c (size before relaxing)
 .eh_frame      0x00000000c010c564      0x6ac kernel_main_old.o
                                        0x6c4 (size before relaxing)
 .eh_frame      0x00000000c010cc10       0xe0 my_process.o
                                         0xf8 (size before relaxing)
 .eh_frame      0x00000000c010ccf0       0xc0 double_link_list.o
                                         0xd8 (size before relaxing)
 .eh_frame      0x00000000c010cdb0       0x80 thread.o
                                         0x98 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c010e000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c010e000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c010e000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c010e000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c010e000        0x0
 *(.got)
 .got           0x00000000c010e000        0x0 kernel_sub.o
 *(.igot)
                0x00000000c010e000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c010e000        0x0
 *(.got.plt)
 .got.plt       0x00000000c010e000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x00000000c010e000        0x0 kernel_sub.o

.data           0x00000000c010e000      0x760
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c010e000        0xf kernel_sub.o
 *fill*         0x00000000c010e00f        0x1 
 .data          0x00000000c010e010        0xf kernel.o
 .data          0x00000000c010e01f        0x0 kernel_main.o
 .data          0x00000000c010e01f        0x0 hd.o
 *fill*         0x00000000c010e01f        0x1 
 .data          0x00000000c010e020        0x0 syscall.o
 .data          0x00000000c010e020        0x0 fs_main.o
 .data          0x00000000c010e020      0x128 global.o
                0x00000000c010e020                user_task_table
                0x00000000c010e0a0                sys_task_table
                0x00000000c010e12c                sys_call_table
 .data          0x00000000c010e148        0x0 process.o
 .data          0x00000000c010e148        0x0 protect.o
 .data          0x00000000c010e148        0x0 console.o
 *fill*         0x00000000c010e148       0x18 
 .data          0x00000000c010e160      0x600 keyboard.o
                0x00000000c010e160                keymap
 .data          0x00000000c010e760        0x0 open.o
 .data          0x00000000c010e760        0x0 read.o
 .data          0x00000000c010e760        0x0 write.o
 .data          0x00000000c010e760        0x0 close.o
 .data          0x00000000c010e760        0x0 wait.o
 .data          0x00000000c010e760        0x0 exit.o
 .data          0x00000000c010e760        0x0 fork.o
 .data          0x00000000c010e760        0x0 getpid.o
 .data          0x00000000c010e760        0x0 exec.o
 .data          0x00000000c010e760        0x0 mm/main.o
 .data          0x00000000c010e760        0x0 mm/exec.o
 .data          0x00000000c010e760        0x0 mm/forkexit.o
 .data          0x00000000c010e760        0x0 mem/mem.o
 .data          0x00000000c010e760        0x0 kernel_main_old.o
 .data          0x00000000c010e760        0x0 my_process.o
 .data          0x00000000c010e760        0x0 double_link_list.o
 .data          0x00000000c010e760        0x0 thread.o

.data1
 *(.data1)
                0x00000000c010e760                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c010e760                . = .
                0x00000000c010e760                __bss_start = .

.bss            0x00000000c010e760    0x75170
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c010e760      0x800 kernel_sub.o
 .bss           0x00000000c010ef60      0x800 kernel.o
 .bss           0x00000000c010f760        0x0 kernel_main.o
 .bss           0x00000000c010f760        0x0 hd.o
 .bss           0x00000000c010f760        0x4 fs_main.o
                0x00000000c010f760                c
 .bss           0x00000000c010f764        0x0 global.o
 .bss           0x00000000c010f764        0x0 process.o
 .bss           0x00000000c010f764        0x0 protect.o
 .bss           0x00000000c010f764        0x0 console.o
 .bss           0x00000000c010f764        0x0 keyboard.o
 .bss           0x00000000c010f764        0x0 open.o
 .bss           0x00000000c010f764        0x0 read.o
 .bss           0x00000000c010f764        0x0 write.o
 .bss           0x00000000c010f764        0x0 close.o
 .bss           0x00000000c010f764        0x0 wait.o
 .bss           0x00000000c010f764        0x0 exit.o
 .bss           0x00000000c010f764        0x0 fork.o
 .bss           0x00000000c010f764        0x0 getpid.o
 .bss           0x00000000c010f764        0x0 exec.o
 .bss           0x00000000c010f764        0x0 mm/main.o
 .bss           0x00000000c010f764        0x0 mm/exec.o
 .bss           0x00000000c010f764        0x0 mm/forkexit.o
 .bss           0x00000000c010f764        0x0 mem/mem.o
 .bss           0x00000000c010f764        0x0 kernel_main_old.o
 .bss           0x00000000c010f764        0x0 my_process.o
 .bss           0x00000000c010f764        0x0 double_link_list.o
 .bss           0x00000000c010f764        0x0 thread.o
 *(COMMON)
 *fill*         0x00000000c010f764       0x1c 
 COMMON         0x00000000c010f780     0x17ac kernel_main.o
                0x00000000c010f780                current_tty
                0x00000000c010f784                is_e0
                0x00000000c010f788                idt_ptr
                0x00000000c010f790                pid
                0x00000000c010f794                KernelVirtualMemory
                0x00000000c010f7a0                current_dis_pos
                0x00000000c010f7a4                dis_pos
                0x00000000c010f7a8                k_reenter
                0x00000000c010f7c0                gdt
                0x00000000c010fbc0                proc_ready_table
                0x00000000c010fbc4                test_ticks
                0x00000000c010fbc8                pcaller
                0x00000000c010fbe0                keyboard_buffer
                0x00000000c010fdec                pcb_list
                0x00000000c010fdfc                gdt_index
                0x00000000c010fe00                tty_table
                0x00000000c0110640                tss
                0x00000000c01106ac                KernelPool
                0x00000000c01106bc                counter
                0x00000000c01106c0                key_pressed
                0x00000000c01106c4                fork_pid
                0x00000000c01106c8                is_shift
                0x00000000c01106cc                gdt_ptr
                0x00000000c01106e0                idt
                0x00000000c0110ee0                main_thread
                0x00000000c0110ee8                ticks
                0x00000000c0110ef0                is_init
                0x00000000c0110ef4                UserPool
                0x00000000c0110f04                all_pcb_list
                0x00000000c0110f14                console_table
                0x00000000c0110f24                is_disp
                0x00000000c0110f28                MAIN_THREAD_PAGE_DIRECTORY
 *fill*         0x00000000c0110f2c       0x14 
 COMMON         0x00000000c0110f40      0x440 hd.o
                0x00000000c0110f40                hd_info
                0x00000000c0111180                hd_cache
 COMMON         0x00000000c0111380      0xe68 fs_main.o
                0x00000000c0111380                file_desc_table
                0x00000000c0111780                phy_super_block_buf
                0x00000000c0111784                phy_fsbuf
                0x00000000c01117a0                inode_table
                0x00000000c01121a0                super_block_buf
                0x00000000c01121a4                fsbuf
                0x00000000c01121c0                root
 *fill*         0x00000000c01121e8       0x18 
 COMMON         0x00000000c0112200    0x715e0 global.o
                0x00000000c0112200                proc_stack
                0x00000000c0182200                proc_table
 COMMON         0x00000000c01837e0       0xf0 mem/mem.o
                0x00000000c01837e0                kernel_mem_block_decs_array
                0x00000000c01838d0                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c01838d0                . = ALIGN (0x4)
                0x00000000c01838d0                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c01838d0                . = ALIGN (0x4)
                0x00000000c01838d0                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c01838d0                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o
 .comment       0x000000000000002c       0x2d mem/mem.o
 .comment       0x000000000000002c       0x2d kernel_main_old.o
 .comment       0x000000000000002c       0x2d my_process.o
 .comment       0x000000000000002c       0x2d double_link_list.o
 .comment       0x000000000000002c       0x2d thread.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x318
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel_main.o
 .debug_aranges
                0x0000000000000020       0x20 hd.o
 .debug_aranges
                0x0000000000000040       0x20 fs_main.o
 .debug_aranges
                0x0000000000000060       0x18 global.o
 .debug_aranges
                0x0000000000000078       0x20 process.o
 .debug_aranges
                0x0000000000000098       0x20 protect.o
 .debug_aranges
                0x00000000000000b8       0x20 console.o
 .debug_aranges
                0x00000000000000d8       0x20 keyboard.o
 .debug_aranges
                0x00000000000000f8       0x20 open.o
 .debug_aranges
                0x0000000000000118       0x20 read.o
 .debug_aranges
                0x0000000000000138       0x20 write.o
 .debug_aranges
                0x0000000000000158       0x20 close.o
 .debug_aranges
                0x0000000000000178       0x20 wait.o
 .debug_aranges
                0x0000000000000198       0x20 exit.o
 .debug_aranges
                0x00000000000001b8       0x20 fork.o
 .debug_aranges
                0x00000000000001d8       0x20 getpid.o
 .debug_aranges
                0x00000000000001f8       0x20 exec.o
 .debug_aranges
                0x0000000000000218       0x20 mm/main.o
 .debug_aranges
                0x0000000000000238       0x20 mm/exec.o
 .debug_aranges
                0x0000000000000258       0x20 mm/forkexit.o
 .debug_aranges
                0x0000000000000278       0x20 mem/mem.o
 .debug_aranges
                0x0000000000000298       0x20 kernel_main_old.o
 .debug_aranges
                0x00000000000002b8       0x20 my_process.o
 .debug_aranges
                0x00000000000002d8       0x20 double_link_list.o
 .debug_aranges
                0x00000000000002f8       0x20 thread.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000    0x1b869
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0xf45 kernel_main.o
 .debug_info    0x0000000000000f45     0x178a hd.o
 .debug_info    0x00000000000026cf     0x1edd fs_main.o
 .debug_info    0x00000000000045ac      0xe32 global.o
 .debug_info    0x00000000000053de      0xf1b process.o
 .debug_info    0x00000000000062f9     0x115d protect.o
 .debug_info    0x0000000000007456     0x1232 console.o
 .debug_info    0x0000000000008688      0xf86 keyboard.o
 .debug_info    0x000000000000960e      0xdaa open.o
 .debug_info    0x000000000000a3b8      0xe49 read.o
 .debug_info    0x000000000000b201      0xdd7 write.o
 .debug_info    0x000000000000bfd8      0xd5e close.o
 .debug_info    0x000000000000cd36      0xd69 wait.o
 .debug_info    0x000000000000da9f      0xd5b exit.o
 .debug_info    0x000000000000e7fa      0xd50 fork.o
 .debug_info    0x000000000000f54a      0xd50 getpid.o
 .debug_info    0x000000000001029a      0xee8 exec.o
 .debug_info    0x0000000000011182      0xd6e mm/main.o
 .debug_info    0x0000000000011ef0     0x116c mm/exec.o
 .debug_info    0x000000000001305c      0xf64 mm/forkexit.o
 .debug_info    0x0000000000013fc0     0x1cfa mem/mem.o
 .debug_info    0x0000000000015cba     0x276d kernel_main_old.o
 .debug_info    0x0000000000018427     0x1445 my_process.o
 .debug_info    0x000000000001986c      0xfec double_link_list.o
 .debug_info    0x000000000001a858     0x1011 thread.o

.debug_abbrev   0x0000000000000000     0x34e5
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x208 kernel_main.o
 .debug_abbrev  0x0000000000000208      0x2e3 hd.o
 .debug_abbrev  0x00000000000004eb      0x2ef fs_main.o
 .debug_abbrev  0x00000000000007da      0x157 global.o
 .debug_abbrev  0x0000000000000931      0x1e0 process.o
 .debug_abbrev  0x0000000000000b11      0x227 protect.o
 .debug_abbrev  0x0000000000000d38      0x2ac console.o
 .debug_abbrev  0x0000000000000fe4      0x1fb keyboard.o
 .debug_abbrev  0x00000000000011df      0x1c5 open.o
 .debug_abbrev  0x00000000000013a4      0x1ef read.o
 .debug_abbrev  0x0000000000001593      0x1db write.o
 .debug_abbrev  0x000000000000176e      0x19d close.o
 .debug_abbrev  0x000000000000190b      0x19f wait.o
 .debug_abbrev  0x0000000000001aaa      0x19b exit.o
 .debug_abbrev  0x0000000000001c45      0x18a fork.o
 .debug_abbrev  0x0000000000001dcf      0x18a getpid.o
 .debug_abbrev  0x0000000000001f59      0x1e8 exec.o
 .debug_abbrev  0x0000000000002141      0x208 mm/main.o
 .debug_abbrev  0x0000000000002349      0x1c4 mm/exec.o
 .debug_abbrev  0x000000000000250d      0x204 mm/forkexit.o
 .debug_abbrev  0x0000000000002711      0x2ea mem/mem.o
 .debug_abbrev  0x00000000000029fb      0x452 kernel_main_old.o
 .debug_abbrev  0x0000000000002e4d      0x260 my_process.o
 .debug_abbrev  0x00000000000030ad      0x216 double_link_list.o
 .debug_abbrev  0x00000000000032c3      0x222 thread.o

.debug_line     0x0000000000000000     0x48a4
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x1ab kernel_main.o
 .debug_line    0x00000000000001ab      0x613 hd.o
 .debug_line    0x00000000000007be      0xc1a fs_main.o
 .debug_line    0x00000000000013d8       0x95 global.o
 .debug_line    0x000000000000146d      0x180 process.o
 .debug_line    0x00000000000015ed      0x1fb protect.o
 .debug_line    0x00000000000017e8      0x54e console.o
 .debug_line    0x0000000000001d36      0x296 keyboard.o
 .debug_line    0x0000000000001fcc       0xbd open.o
 .debug_line    0x0000000000002089      0x155 read.o
 .debug_line    0x00000000000021de       0xbc write.o
 .debug_line    0x000000000000229a       0xad close.o
 .debug_line    0x0000000000002347       0xb7 wait.o
 .debug_line    0x00000000000023fe       0xa0 exit.o
 .debug_line    0x000000000000249e       0xa5 fork.o
 .debug_line    0x0000000000002543       0xa0 getpid.o
 .debug_line    0x00000000000025e3      0x18b exec.o
 .debug_line    0x000000000000276e       0xec mm/main.o
 .debug_line    0x000000000000285a      0x20c mm/exec.o
 .debug_line    0x0000000000002a66      0x17a mm/forkexit.o
 .debug_line    0x0000000000002be0      0x7e6 mem/mem.o
 .debug_line    0x00000000000033c6      0xe0b kernel_main_old.o
 .debug_line    0x00000000000041d1      0x33b my_process.o
 .debug_line    0x000000000000450c      0x253 double_link_list.o
 .debug_line    0x000000000000475f      0x145 thread.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000     0x1e6e
 *(.debug_str)
 .debug_str     0x0000000000000000      0x571 kernel_main.o
                                        0x660 (size before relaxing)
 .debug_str     0x0000000000000571      0x2c2 hd.o
                                        0x8e2 (size before relaxing)
 .debug_str     0x0000000000000833      0x47c fs_main.o
                                        0xacf (size before relaxing)
 .debug_str     0x0000000000000caf        0x9 global.o
                                        0x5e5 (size before relaxing)
 .debug_str     0x0000000000000cb8       0x39 process.o
                                        0x61f (size before relaxing)
 .debug_str     0x0000000000000cf1      0x134 protect.o
                                        0x740 (size before relaxing)
 .debug_str     0x0000000000000e25      0x13e console.o
                                        0x734 (size before relaxing)
 .debug_str     0x0000000000000f63       0x84 keyboard.o
                                        0x671 (size before relaxing)
 .debug_str     0x0000000000000fe7       0x29 open.o
                                        0x5ad (size before relaxing)
 .debug_str     0x0000000000001010       0x51 read.o
                                        0x5e6 (size before relaxing)
 .debug_str     0x0000000000001061        0xc write.o
                                        0x5aa (size before relaxing)
 .debug_str     0x000000000000106d        0xc close.o
                                        0x575 (size before relaxing)
 .debug_str     0x0000000000001079        0xb wait.o
                                        0x57a (size before relaxing)
 .debug_str     0x0000000000001084        0xb exit.o
                                        0x57a (size before relaxing)
 .debug_str     0x000000000000108f        0xb fork.o
                                        0x573 (size before relaxing)
 .debug_str     0x000000000000109a       0x14 getpid.o
                                        0x577 (size before relaxing)
 .debug_str     0x00000000000010ae       0x4e exec.o
                                        0x601 (size before relaxing)
 .debug_str     0x00000000000010fc       0x32 mm/main.o
                                        0x56d (size before relaxing)
 .debug_str     0x000000000000112e      0x29b mm/exec.o
                                        0x842 (size before relaxing)
 .debug_str     0x00000000000013c9       0x80 mm/forkexit.o
                                        0x5ec (size before relaxing)
 .debug_str     0x0000000000001449      0x316 mem/mem.o
                                        0xa6d (size before relaxing)
 .debug_str     0x000000000000175f      0x424 kernel_main_old.o
                                        0xb37 (size before relaxing)
 .debug_str     0x0000000000001b83      0x200 my_process.o
                                        0x8d3 (size before relaxing)
 .debug_str     0x0000000000001d83       0x8f double_link_list.o
                                        0x6a6 (size before relaxing)
 .debug_str     0x0000000000001e12       0x5c thread.o
                                        0x6ec (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x90
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x48 hd.o
 .debug_ranges  0x0000000000000048       0x18 mm/exec.o
 .debug_ranges  0x0000000000000060       0x30 kernel_main_old.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
