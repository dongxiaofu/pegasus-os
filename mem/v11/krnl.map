
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
phy_super_block_buf
                    0x4               fs_main.o
phy_fsbuf           0x4               fs_main.o
idt_ptr             0x6               kernel_main.o
pid                 0x4               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
super_block_buf     0x4               fs_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
test_ticks          0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
pcb_list            0x10              kernel_main.o
gdt_index           0x4               kernel_main.o
tty_table           0x828             kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
fsbuf               0x4               fs_main.o
root                0x28              fs_main.o
kernel_mem_block_decs_array
                    0xf0              mem/mem.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
main_thread         0x4               kernel_main.o
ticks               0x8               kernel_main.o
is_init             0x1               kernel_main.o
UserPool            0x10              kernel_main.o
all_pcb_list        0x10              kernel_main.o
console_table       0x10              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table          0x15a0            global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mem/mem.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main_old.o
 .note.GNU-stack
                0x0000000000000000        0x0 my_process.o
 .note.GNU-stack
                0x0000000000000000        0x0 double_link_list.o
 .note.GNU-stack
                0x0000000000000000        0x0 thread.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
LOAD kernel_main_old.o
LOAD my_process.o
LOAD switch_to.o
LOAD double_link_list.o
LOAD thread.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0xa130
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0x76 kernel_sub.o
                0x00000000c0001500                _start
 *fill*         0x00000000c0001576        0xa 
 .text          0x00000000c0001580      0x325 kernel.o
                0x00000000c0001580                InterruptTest
                0x00000000c000158c                disp_str
                0x00000000c00015c7                disp_str_colour
                0x00000000c0001603                divide_zero_fault
                0x00000000c0001609                single_step_fault
                0x00000000c000160f                non_maskable_interrupt
                0x00000000c0001615                breakpoint_trap
                0x00000000c000161b                overflow_trap
                0x00000000c0001621                bound_range_exceeded_fault
                0x00000000c0001627                invalid_opcode_fault
                0x00000000c000162d                coprocessor_not_available_fault
                0x00000000c0001633                double_fault_exception_abort
                0x00000000c0001637                coprocessor_segment_overrun
                0x00000000c000163d                invalid_task_state_segment_fault
                0x00000000c0001641                segment_not_present_fault
                0x00000000c0001645                stack_exception_fault
                0x00000000c0001649                general_protection_exception_fault
                0x00000000c0001654                page_fault
                0x00000000c0001658                coprocessor_error_fault
                0x00000000c000165e                align_check_fault
                0x00000000c0001662                simd_float_exception_fault
                0x00000000c0001671                hwint0
                0x00000000c000169e                hwint1
                0x00000000c00016e0                hwint14
                0x00000000c000171e                sys_call
                0x00000000c0001763                fork_restart
                0x00000000c000176c                restart
                0x00000000c000178d                in_byte
                0x00000000c0001799                out_byte
                0x00000000c00017bb                disable_int
                0x00000000c00017bd                enable_int
                0x00000000c0001853                enable_8259A_casecade_irq
                0x00000000c000185d                disable_8259A_casecade_irq
                0x00000000c0001867                enable_8259A_slave_winchester_irq
                0x00000000c0001871                disable_8259A_slave_winchester_irq
                0x00000000c000187b                update_cr3
                0x00000000c0001888                update_tss
                0x00000000c0001897                get_running_thread_pcb
                0x00000000c000189f                sys_call_test
 .text          0x00000000c00018a5      0x286 kernel_main.o
                0x00000000c00018a5                kernel_main
                0x00000000c0001980                init
                0x00000000c0001a30                kernel_thread_a
                0x00000000c0001a7d                kernel_thread_b
                0x00000000c0001aca                kernel_thread_c
                0x00000000c0001ae0                kernel_thread_d
                0x00000000c0001af6                user_proc_a
                0x00000000c0001b13                user_proc_b
 .text          0x00000000c0001b2b      0xdfe hd.o
                0x00000000c0001b2b                TaskHD
                0x00000000c0001b70                init_hd
                0x00000000c0001b8a                hd_handle
                0x00000000c0001c8f                hd_cmd_out
                0x00000000c0001d91                hd_identify
                0x00000000c0001e48                print_hdinfo
                0x00000000c0001fd6                print_dpt_entry
                0x00000000c0002042                get_partition_table
                0x00000000c0002121                partition
                0x00000000c000233b                hd_open
                0x00000000c00023d2                get_hd_ioctl
                0x00000000c0002473                wait_for
                0x00000000c00024a4                interrupt_wait
                0x00000000c00024f5                hd_rdwt
                0x00000000c0002794                hd_handler
                0x00000000c00027c0                waitfor
                0x00000000c0002804                print_hd_info
                0x00000000c00028f1                is_empty
 *fill*         0x00000000c0002929        0x7 
 .text          0x00000000c0002930       0x89 syscall.o
                0x00000000c0002930                get_ticks
                0x00000000c0002938                write2
                0x00000000c0002948                write_debug
                0x00000000c0002968                send_msg
                0x00000000c000298e                receive_msg
                0x00000000c00029a4                sys_malloc
 .text          0x00000000c00029b9     0x2031 fs_main.o
                0x00000000c00029b9                task_fs
                0x00000000c0002bc4                rd_wt
                0x00000000c0002c9e                mkfs
                0x00000000c0003280                init_fs
                0x00000000c00032d5                do_open
                0x00000000c00034a4                search_file
                0x00000000c00035d6                strip_path
                0x00000000c00036a2                get_inode
                0x00000000c0003864                create_file
                0x00000000c000396f                alloc_imap_bit
                0x00000000c0003a6c                alloc_smap_bit
                0x00000000c0003c0d                new_inode
                0x00000000c0003d2b                new_dir_entry
                0x00000000c0003f37                do_unlink
                0x00000000c0004413                do_rdwt
                0x00000000c000479e                sync_inode
                0x00000000c00048f2                put_inode
                0x00000000c0004930                do_close
                0x00000000c0004982                get_super_block
 .text          0x00000000c00049ea        0x0 global.o
 .text          0x00000000c00049ea      0x225 process.o
                0x00000000c00049ea                check
                0x00000000c0004a11                schedule_process
                0x00000000c0004b16                clock_handler
                0x00000000c0004b86                pid2proc
                0x00000000c0004bf8                proc2pid
 .text          0x00000000c0004c0f      0x3a0 protect.o
                0x00000000c0004c0f                InitDescriptor
                0x00000000c0004c7c                Seg2PhyAddr
                0x00000000c0004cbd                Seg2PhyAddrLDT
                0x00000000c0004d01                VirAddr2PhyAddr
                0x00000000c0004d17                v2l
                0x00000000c0004d5a                init_propt
                0x00000000c0004ec8                InitInterruptDesc
                0x00000000c0004f24                ReloadGDT
 .text          0x00000000c0004faf      0xaba console.o
                0x00000000c0004faf                select_console
                0x00000000c0004feb                flush
                0x00000000c0005024                set_cursor
                0x00000000c0005082                set_console_start_video_addr
                0x00000000c00050e0                put_key
                0x00000000c000514c                scroll_up
                0x00000000c000518e                scroll_down
                0x00000000c00051f9                out_char
                0x00000000c00053b6                tty_dev_read
                0x00000000c00053e0                tty_dev_write
                0x00000000c00055fc                tty_do_read
                0x00000000c00056c4                tty_do_write
                0x00000000c0005828                init_screen
                0x00000000c00058b1                init_tty
                0x00000000c0005966                TaskTTY
 .text          0x00000000c0005a69      0x40f keyboard.o
                0x00000000c0005a69                keyboard_handler
                0x00000000c0005aed                read_from_keyboard_buf
                0x00000000c0005b53                keyboard_read
                0x00000000c0005cd2                init_keyboard_handler
                0x00000000c0005ce6                in_process
 .text          0x00000000c0005e78       0x85 open.o
                0x00000000c0005e78                open
 .text          0x00000000c0005efd       0x74 read.o
                0x00000000c0005efd                read
 .text          0x00000000c0005f71       0x74 write.o
                0x00000000c0005f71                write
 .text          0x00000000c0005fe5       0x52 close.o
                0x00000000c0005fe5                close
 .text          0x00000000c0006037       0x44 wait.o
                0x00000000c0006037                wait
 .text          0x00000000c000607b       0x2f exit.o
                0x00000000c000607b                exit
 .text          0x00000000c00060aa       0x68 fork.o
                0x00000000c00060aa                fork
 .text          0x00000000c0006112       0x2b getpid.o
                0x00000000c0006112                getpid
 .text          0x00000000c000613d      0x2fb exec.o
                0x00000000c000613d                exec
                0x00000000c00061ae                execv
                0x00000000c0006413                execl
 .text          0x00000000c0006438      0x148 mm/main.o
                0x00000000c0006438                TaskMM
                0x00000000c0006561                alloc_mem
 .text          0x00000000c0006580      0x416 mm/exec.o
                0x00000000c0006580                do_exec2
                0x00000000c0006594                do_exec
 .text          0x00000000c0006996      0x291 mm/forkexit.o
                0x00000000c0006996                do_fork
                0x00000000c0006a04                do_exit
                0x00000000c0006b00                do_wait
                0x00000000c0006bcd                cleanup
 .text          0x00000000c0006c27     0x10e8 mem/mem.o
                0x00000000c0006c27                init_bitmap
                0x00000000c0006c4a                test_bit_val
                0x00000000c0006cb3                set_bit_val
                0x00000000c0006d2e                set_bits
                0x00000000c0006d68                get_first_free_bit
                0x00000000c0006dac                get_bits
                0x00000000c0006e74                get_a_page2
                0x00000000c0006ea3                get_a_page
                0x00000000c0006f32                get_virtual_address
                0x00000000c0006fc2                ptr_pde
                0x00000000c0006fd5                ptr_pte
                0x00000000c0006ffc                add_map_entry
                0x00000000c000708a                alloc_virtual_memory
                0x00000000c0007151                get_physical_address
                0x00000000c0007183                alloc_physical_memory_of_proc
                0x00000000c000722a                alloc_physical_memory
                0x00000000c00072e0                alloc_memory
                0x00000000c0007342                get_a_virtual_page
                0x00000000c000736c                block2arena
                0x00000000c0007382                sys_malloc2
                0x00000000c0007633                remove_map_entry
                0x00000000c0007654                free_a_page
                0x00000000c00076fb                sys_free
                0x00000000c000787e                init_memory_block_desc
                0x00000000c000794f                init_memory2
                0x00000000c0007bc6                init_memory
 .text          0x00000000c0007d0f     0x2d75 kernel_main_old.o
                0x00000000c0007d0f                intr_enable
                0x00000000c0007d38                intr_disable
                0x00000000c0007d61                intr_set_status
                0x00000000c0007d7f                intr_get_status
                0x00000000c0007d9c                Memcpy
                0x00000000c0007dcf                untar
                0x00000000c00080df                atoi
                0x00000000c0008185                disp_int
                0x00000000c00081ae                do_page_fault
                0x00000000c00082eb                exception_handler
                0x00000000c00084d2                exception_handler2
                0x00000000c0008673                init_internal_interrupt
                0x00000000c00087e8                test
                0x00000000c0008811                disp_str_colour3
                0x00000000c0008817                spurious_irq
                0x00000000c00088a5                init_keyboard
                0x00000000c0008912                init2
                0x00000000c0008940                u_thread_a
                0x00000000c0008958                kernel_main2
                0x00000000c0008bc8                TestTTY
                0x00000000c0008c67                TestFS
                0x00000000c000906f                wait_exit
                0x00000000c000913d                INIT_fork
                0x00000000c0009420                simple_shell
                0x00000000c000961e                test_split_str
                0x00000000c00097ab                test_shell
                0x00000000c0009813                test_exec
                0x00000000c00098ae                INIT
                0x00000000c00098bb                TestA
                0x00000000c00098f0                delay
                0x00000000c0009934                TestB
                0x00000000c000994c                TestC
                0x00000000c000997f                sys_get_ticks
                0x00000000c000998f                sys_write
                0x00000000c00099e3                milli_delay
                0x00000000c0009a1f                TaskSys
                0x00000000c0009a24                Printf
                0x00000000c0009a82                vsprintf
                0x00000000c0009c2e                printx
                0x00000000c0009c71                sys_printx
                0x00000000c0009d3d                spin
                0x00000000c0009d63                panic
                0x00000000c0009d81                assertion_failure
                0x00000000c0009db8                dead_lock
                0x00000000c0009dc2                sys_send_msg
                0x00000000c000a1a9                sys_receive_msg
                0x00000000c000a6a7                disp_str_colour_debug
                0x00000000c000a6ad                send_rec
                0x00000000c000a7a9                block
                0x00000000c000a7e5                unblock
                0x00000000c000a835                get_ticks_ipc
                0x00000000c000a88c                itoa
                0x00000000c000a8e2                i2a
                0x00000000c000a948                inform_int
                0x00000000c000aa15                strcmp
 .text          0x00000000c000aa84      0x6b5 my_process.o
                0x00000000c000aa84                create_user_process_address_space
                0x00000000c000ab14                user_process
                0x00000000c000ac23                clone_pcb
                0x00000000c000ad27                build_body_stack
                0x00000000c000ae5a                build_process_kernel_stack
                0x00000000c000af1d                fork_process
                0x00000000c000afc8                process_execute
 *fill*         0x00000000c000b139        0x7 
 .text          0x00000000c000b140       0x15 switch_to.o
                0x00000000c000b140                switch_to
 .text          0x00000000c000b155      0x329 double_link_list.o
                0x00000000c000b155                initDoubleLinkList
                0x00000000c000b183                isListEmpty
                0x00000000c000b1a4                findElementInList
                0x00000000c000b280                appendToDoubleLinkList
                0x00000000c000b367                insertToDoubleLinkList
                0x00000000c000b3ea                popFromDoubleLinkList
 .text          0x00000000c000b47e      0x1b2 thread.o
                0x00000000c000b47e                kernel_thread
                0x00000000c000b496                thread_init
                0x00000000c000b543                thread_create
                0x00000000c000b578                thread_start
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c000b640      0xe5d
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c000b640       0xa3 kernel_main.o
 *fill*         0x00000000c000b6e3        0x1 
 .rodata        0x00000000c000b6e4      0x19c hd.o
 .rodata        0x00000000c000b880      0x1eb fs_main.o
                0x00000000c000b880                FSBUF_SIZE
 .rodata        0x00000000c000ba6b       0x26 process.o
 .rodata        0x00000000c000ba91       0x22 console.o
 .rodata        0x00000000c000bab3       0x24 close.o
 .rodata        0x00000000c000bad7       0x1b fork.o
 .rodata        0x00000000c000baf2       0x6e exec.o
 .rodata        0x00000000c000bb60       0x11 mm/main.o
 .rodata        0x00000000c000bb71       0x10 mm/exec.o
 .rodata        0x00000000c000bb81       0x2a mem/mem.o
 *fill*         0x00000000c000bbab       0x15 
 .rodata        0x00000000c000bbc0      0x8b1 kernel_main_old.o
 .rodata        0x00000000c000c471       0x2c double_link_list.o

.txt            0x00000000c000c49d       0xaa
 .txt           0x00000000c000c49d       0x82 string.o
                0x00000000c000c49d                Memcpy2
                0x00000000c000c4cb                Memset
                0x00000000c000c4ea                Strcpy
                0x00000000c000c504                Strlen
 .txt           0x00000000c000c51f       0x28 hd_rdwt.o
                0x00000000c000c51f                read_port
                0x00000000c000c533                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c000c548     0x187c
 *(.eh_frame)
 .eh_frame      0x00000000c000c548       0xfc kernel_main.o
 .eh_frame      0x00000000c000c644      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x00000000c000c888      0x27c fs_main.o
                                        0x294 (size before relaxing)
 .eh_frame      0x00000000c000cb04       0xa0 process.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000cba4      0x100 protect.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c000cca4      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x00000000c000ce84       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000cf24       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000cf44       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000cf64       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000cf84       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000cfa4       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000cfc4       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000cfe4       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000d004       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000d024       0x64 exec.o
                                         0x7c (size before relaxing)
 .eh_frame      0x00000000c000d088       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x00000000c000d0c4       0x40 mm/exec.o
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c000d104       0x80 mm/forkexit.o
                                         0x98 (size before relaxing)
 .eh_frame      0x00000000c000d184      0x344 mem/mem.o
                                        0x35c (size before relaxing)
 .eh_frame      0x00000000c000d4c8      0x6dc kernel_main_old.o
                                        0x6f4 (size before relaxing)
 .eh_frame      0x00000000c000dba4       0xe0 my_process.o
                                         0xf8 (size before relaxing)
 .eh_frame      0x00000000c000dc84       0xc0 double_link_list.o
                                         0xd8 (size before relaxing)
 .eh_frame      0x00000000c000dd44       0x80 thread.o
                                         0x98 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c000f000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c000f000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c000f000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c000f000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c000f000        0x0
 *(.got)
 .got           0x00000000c000f000        0x0 kernel_sub.o
 *(.igot)
                0x00000000c000f000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c000f000        0x0
 *(.got.plt)
 .got.plt       0x00000000c000f000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x00000000c000f000        0x0 kernel_sub.o

.data           0x00000000c000f000      0x760
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000f000        0xf kernel_sub.o
 *fill*         0x00000000c000f00f        0x1 
 .data          0x00000000c000f010        0xf kernel.o
 .data          0x00000000c000f01f        0x0 kernel_main.o
 .data          0x00000000c000f01f        0x0 hd.o
 *fill*         0x00000000c000f01f        0x1 
 .data          0x00000000c000f020        0x0 syscall.o
 .data          0x00000000c000f020        0x0 fs_main.o
 .data          0x00000000c000f020      0x124 global.o
                0x00000000c000f020                user_task_table
                0x00000000c000f0a0                sys_task_table
                0x00000000c000f12c                sys_call_table
 .data          0x00000000c000f144        0x0 process.o
 .data          0x00000000c000f144        0x0 protect.o
 .data          0x00000000c000f144        0x0 console.o
 *fill*         0x00000000c000f144       0x1c 
 .data          0x00000000c000f160      0x600 keyboard.o
                0x00000000c000f160                keymap
 .data          0x00000000c000f760        0x0 open.o
 .data          0x00000000c000f760        0x0 read.o
 .data          0x00000000c000f760        0x0 write.o
 .data          0x00000000c000f760        0x0 close.o
 .data          0x00000000c000f760        0x0 wait.o
 .data          0x00000000c000f760        0x0 exit.o
 .data          0x00000000c000f760        0x0 fork.o
 .data          0x00000000c000f760        0x0 getpid.o
 .data          0x00000000c000f760        0x0 exec.o
 .data          0x00000000c000f760        0x0 mm/main.o
 .data          0x00000000c000f760        0x0 mm/exec.o
 .data          0x00000000c000f760        0x0 mm/forkexit.o
 .data          0x00000000c000f760        0x0 mem/mem.o
 .data          0x00000000c000f760        0x0 kernel_main_old.o
 .data          0x00000000c000f760        0x0 my_process.o
 .data          0x00000000c000f760        0x0 double_link_list.o
 .data          0x00000000c000f760        0x0 thread.o

.data1
 *(.data1)
                0x00000000c000f760                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c000f760                . = .
                0x00000000c000f760                __bss_start = .

.bss            0x00000000c000f760    0x75130
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c000f760      0x800 kernel_sub.o
 .bss           0x00000000c000ff60      0x800 kernel.o
 .bss           0x00000000c0010760        0x0 kernel_main.o
 .bss           0x00000000c0010760        0x0 hd.o
 .bss           0x00000000c0010760        0x4 fs_main.o
                0x00000000c0010760                c
 .bss           0x00000000c0010764        0x0 global.o
 .bss           0x00000000c0010764        0x0 process.o
 .bss           0x00000000c0010764        0x0 protect.o
 .bss           0x00000000c0010764        0x0 console.o
 .bss           0x00000000c0010764        0x0 keyboard.o
 .bss           0x00000000c0010764        0x0 open.o
 .bss           0x00000000c0010764        0x0 read.o
 .bss           0x00000000c0010764        0x0 write.o
 .bss           0x00000000c0010764        0x0 close.o
 .bss           0x00000000c0010764        0x0 wait.o
 .bss           0x00000000c0010764        0x0 exit.o
 .bss           0x00000000c0010764        0x0 fork.o
 .bss           0x00000000c0010764        0x0 getpid.o
 .bss           0x00000000c0010764        0x0 exec.o
 .bss           0x00000000c0010764        0x0 mm/main.o
 .bss           0x00000000c0010764        0x0 mm/exec.o
 .bss           0x00000000c0010764        0x0 mm/forkexit.o
 .bss           0x00000000c0010764        0x0 mem/mem.o
 .bss           0x00000000c0010764        0x0 kernel_main_old.o
 .bss           0x00000000c0010764        0x0 my_process.o
 .bss           0x00000000c0010764        0x0 double_link_list.o
 .bss           0x00000000c0010764        0x0 thread.o
 *(COMMON)
 *fill*         0x00000000c0010764       0x1c 
 COMMON         0x00000000c0010780     0x17a5 kernel_main.o
                0x00000000c0010780                current_tty
                0x00000000c0010784                is_e0
                0x00000000c0010788                idt_ptr
                0x00000000c0010790                pid
                0x00000000c0010794                KernelVirtualMemory
                0x00000000c00107a0                dis_pos
                0x00000000c00107a4                k_reenter
                0x00000000c00107c0                gdt
                0x00000000c0010bc0                proc_ready_table
                0x00000000c0010bc4                test_ticks
                0x00000000c0010bc8                pcaller
                0x00000000c0010be0                keyboard_buffer
                0x00000000c0010dec                pcb_list
                0x00000000c0010dfc                gdt_index
                0x00000000c0010e00                tty_table
                0x00000000c0011640                tss
                0x00000000c00116ac                KernelPool
                0x00000000c00116bc                counter
                0x00000000c00116c0                key_pressed
                0x00000000c00116c4                is_shift
                0x00000000c00116c8                gdt_ptr
                0x00000000c00116e0                idt
                0x00000000c0011ee0                main_thread
                0x00000000c0011ee8                ticks
                0x00000000c0011ef0                is_init
                0x00000000c0011ef4                UserPool
                0x00000000c0011f04                all_pcb_list
                0x00000000c0011f14                console_table
                0x00000000c0011f24                is_disp
 *fill*         0x00000000c0011f25       0x1b 
 COMMON         0x00000000c0011f40      0x440 hd.o
                0x00000000c0011f40                hd_info
                0x00000000c0012180                hd_cache
 COMMON         0x00000000c0012380      0xe68 fs_main.o
                0x00000000c0012380                file_desc_table
                0x00000000c0012780                phy_super_block_buf
                0x00000000c0012784                phy_fsbuf
                0x00000000c00127a0                inode_table
                0x00000000c00131a0                super_block_buf
                0x00000000c00131a4                fsbuf
                0x00000000c00131c0                root
 *fill*         0x00000000c00131e8       0x18 
 COMMON         0x00000000c0013200    0x715a0 global.o
                0x00000000c0013200                proc_stack
                0x00000000c0083200                proc_table
 COMMON         0x00000000c00847a0       0xf0 mem/mem.o
                0x00000000c00847a0                kernel_mem_block_decs_array
                0x00000000c0084890                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0084890                . = ALIGN (0x4)
                0x00000000c0084890                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0084890                . = ALIGN (0x4)
                0x00000000c0084890                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c0084890                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o
 .comment       0x000000000000002c       0x2d mem/mem.o
 .comment       0x000000000000002c       0x2d kernel_main_old.o
 .comment       0x000000000000002c       0x2d my_process.o
 .comment       0x000000000000002c       0x2d double_link_list.o
 .comment       0x000000000000002c       0x2d thread.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x318
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel_main.o
 .debug_aranges
                0x0000000000000020       0x20 hd.o
 .debug_aranges
                0x0000000000000040       0x20 fs_main.o
 .debug_aranges
                0x0000000000000060       0x18 global.o
 .debug_aranges
                0x0000000000000078       0x20 process.o
 .debug_aranges
                0x0000000000000098       0x20 protect.o
 .debug_aranges
                0x00000000000000b8       0x20 console.o
 .debug_aranges
                0x00000000000000d8       0x20 keyboard.o
 .debug_aranges
                0x00000000000000f8       0x20 open.o
 .debug_aranges
                0x0000000000000118       0x20 read.o
 .debug_aranges
                0x0000000000000138       0x20 write.o
 .debug_aranges
                0x0000000000000158       0x20 close.o
 .debug_aranges
                0x0000000000000178       0x20 wait.o
 .debug_aranges
                0x0000000000000198       0x20 exit.o
 .debug_aranges
                0x00000000000001b8       0x20 fork.o
 .debug_aranges
                0x00000000000001d8       0x20 getpid.o
 .debug_aranges
                0x00000000000001f8       0x20 exec.o
 .debug_aranges
                0x0000000000000218       0x20 mm/main.o
 .debug_aranges
                0x0000000000000238       0x20 mm/exec.o
 .debug_aranges
                0x0000000000000258       0x20 mm/forkexit.o
 .debug_aranges
                0x0000000000000278       0x20 mem/mem.o
 .debug_aranges
                0x0000000000000298       0x20 kernel_main_old.o
 .debug_aranges
                0x00000000000002b8       0x20 my_process.o
 .debug_aranges
                0x00000000000002d8       0x20 double_link_list.o
 .debug_aranges
                0x00000000000002f8       0x20 thread.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000    0x1b165
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0xef5 kernel_main.o
 .debug_info    0x0000000000000ef5     0x1719 hd.o
 .debug_info    0x000000000000260e     0x1e7d fs_main.o
 .debug_info    0x000000000000448b      0xdee global.o
 .debug_info    0x0000000000005279      0xf05 process.o
 .debug_info    0x000000000000617e     0x1119 protect.o
 .debug_info    0x0000000000007297     0x11c8 console.o
 .debug_info    0x000000000000845f      0xf42 keyboard.o
 .debug_info    0x00000000000093a1      0xd54 open.o
 .debug_info    0x000000000000a0f5      0xd7c read.o
 .debug_info    0x000000000000ae71      0xd85 write.o
 .debug_info    0x000000000000bbf6      0xd1a close.o
 .debug_info    0x000000000000c910      0xd25 wait.o
 .debug_info    0x000000000000d635      0xd17 exit.o
 .debug_info    0x000000000000e34c      0xd0c fork.o
 .debug_info    0x000000000000f058      0xd0c getpid.o
 .debug_info    0x000000000000fd64      0xeb3 exec.o
 .debug_info    0x0000000000010c17      0xd2a mm/main.o
 .debug_info    0x0000000000011941     0x1148 mm/exec.o
 .debug_info    0x0000000000012a89      0xee6 mm/forkexit.o
 .debug_info    0x000000000001396f     0x1b9b mem/mem.o
 .debug_info    0x000000000001550a     0x298e kernel_main_old.o
 .debug_info    0x0000000000017e98     0x1365 my_process.o
 .debug_info    0x00000000000191fd      0xfa8 double_link_list.o
 .debug_info    0x000000000001a1a5      0xfc0 thread.o

.debug_abbrev   0x0000000000000000     0x3439
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x1df kernel_main.o
 .debug_abbrev  0x00000000000001df      0x2d0 hd.o
 .debug_abbrev  0x00000000000004af      0x2dc fs_main.o
 .debug_abbrev  0x000000000000078b      0x157 global.o
 .debug_abbrev  0x00000000000008e2      0x1e9 process.o
 .debug_abbrev  0x0000000000000acb      0x227 protect.o
 .debug_abbrev  0x0000000000000cf2      0x297 console.o
 .debug_abbrev  0x0000000000000f89      0x1fb keyboard.o
 .debug_abbrev  0x0000000000001184      0x1c5 open.o
 .debug_abbrev  0x0000000000001349      0x1c8 read.o
 .debug_abbrev  0x0000000000001511      0x1c8 write.o
 .debug_abbrev  0x00000000000016d9      0x19d close.o
 .debug_abbrev  0x0000000000001876      0x19f wait.o
 .debug_abbrev  0x0000000000001a15      0x19b exit.o
 .debug_abbrev  0x0000000000001bb0      0x18a fork.o
 .debug_abbrev  0x0000000000001d3a      0x18a getpid.o
 .debug_abbrev  0x0000000000001ec4      0x1e8 exec.o
 .debug_abbrev  0x00000000000020ac      0x208 mm/main.o
 .debug_abbrev  0x00000000000022b4      0x1e0 mm/exec.o
 .debug_abbrev  0x0000000000002494      0x204 mm/forkexit.o
 .debug_abbrev  0x0000000000002698      0x2ea mem/mem.o
 .debug_abbrev  0x0000000000002982      0x44c kernel_main_old.o
 .debug_abbrev  0x0000000000002dce      0x233 my_process.o
 .debug_abbrev  0x0000000000003001      0x216 double_link_list.o
 .debug_abbrev  0x0000000000003217      0x222 thread.o

.debug_line     0x0000000000000000     0x4825
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x187 kernel_main.o
 .debug_line    0x0000000000000187      0x60a hd.o
 .debug_line    0x0000000000000791      0xc13 fs_main.o
 .debug_line    0x00000000000013a4       0x95 global.o
 .debug_line    0x0000000000001439      0x193 process.o
 .debug_line    0x00000000000015cc      0x1fb protect.o
 .debug_line    0x00000000000017c7      0x54c console.o
 .debug_line    0x0000000000001d13      0x296 keyboard.o
 .debug_line    0x0000000000001fa9       0xbc open.o
 .debug_line    0x0000000000002065       0xb7 read.o
 .debug_line    0x000000000000211c       0xb8 write.o
 .debug_line    0x00000000000021d4       0xad close.o
 .debug_line    0x0000000000002281       0xb7 wait.o
 .debug_line    0x0000000000002338       0xa0 exit.o
 .debug_line    0x00000000000023d8       0xae fork.o
 .debug_line    0x0000000000002486       0xa0 getpid.o
 .debug_line    0x0000000000002526      0x190 exec.o
 .debug_line    0x00000000000026b6       0xec mm/main.o
 .debug_line    0x00000000000027a2      0x21f mm/exec.o
 .debug_line    0x00000000000029c1      0x18a mm/forkexit.o
 .debug_line    0x0000000000002b4b      0x75e mem/mem.o
 .debug_line    0x00000000000032a9      0xed6 kernel_main_old.o
 .debug_line    0x000000000000417f      0x30e my_process.o
 .debug_line    0x000000000000448d      0x253 double_link_list.o
 .debug_line    0x00000000000046e0      0x145 thread.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000     0x1d55
 *(.debug_str)
 .debug_str     0x0000000000000000      0x530 kernel_main.o
                                        0x617 (size before relaxing)
 .debug_str     0x0000000000000530      0x2b9 hd.o
                                        0x89a (size before relaxing)
 .debug_str     0x00000000000007e9      0x47c fs_main.o
                                        0xa87 (size before relaxing)
 .debug_str     0x0000000000000c65        0x9 global.o
                                        0x5a6 (size before relaxing)
 .debug_str     0x0000000000000c6e       0x3f process.o
                                        0x5e6 (size before relaxing)
 .debug_str     0x0000000000000cad      0x134 protect.o
                                        0x701 (size before relaxing)
 .debug_str     0x0000000000000de1      0x13e console.o
                                        0x6ec (size before relaxing)
 .debug_str     0x0000000000000f1f       0x84 keyboard.o
                                        0x632 (size before relaxing)
 .debug_str     0x0000000000000fa3       0x29 open.o
                                        0x565 (size before relaxing)
 .debug_str     0x0000000000000fcc       0x13 read.o
                                        0x560 (size before relaxing)
 .debug_str     0x0000000000000fdf        0xc write.o
                                        0x562 (size before relaxing)
 .debug_str     0x0000000000000feb        0xc close.o
                                        0x536 (size before relaxing)
 .debug_str     0x0000000000000ff7        0xb wait.o
                                        0x53b (size before relaxing)
 .debug_str     0x0000000000001002        0xb exit.o
                                        0x53b (size before relaxing)
 .debug_str     0x000000000000100d        0xb fork.o
                                        0x534 (size before relaxing)
 .debug_str     0x0000000000001018       0x14 getpid.o
                                        0x538 (size before relaxing)
 .debug_str     0x000000000000102c       0x2f exec.o
                                        0x59a (size before relaxing)
 .debug_str     0x000000000000105b       0x32 mm/main.o
                                        0x52e (size before relaxing)
 .debug_str     0x000000000000108d      0x219 mm/exec.o
                                        0x781 (size before relaxing)
 .debug_str     0x00000000000012a6       0x74 mm/forkexit.o
                                        0x598 (size before relaxing)
 .debug_str     0x000000000000131a      0x32d mem/mem.o
                                        0x9e6 (size before relaxing)
 .debug_str     0x0000000000001647      0x4ab kernel_main_old.o
                                        0xba3 (size before relaxing)
 .debug_str     0x0000000000001af2      0x18a my_process.o
                                        0x858 (size before relaxing)
 .debug_str     0x0000000000001c7c       0x8f double_link_list.o
                                        0x667 (size before relaxing)
 .debug_str     0x0000000000001d0b       0x4a thread.o
                                        0x6ad (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x78
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x48 hd.o
 .debug_ranges  0x0000000000000048       0x18 mm/exec.o
 .debug_ranges  0x0000000000000060       0x18 kernel_main_old.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
