
Merging program properties

Removed property 0xc0010001 to merge kernel_main.o (0x1) and kernel_sub.o (not found)
Removed property 0xc0010002 to merge kernel_main.o (0x0) and kernel_sub.o (not found)
Removed property 0xc0010001 to merge kernel_main.o (not found) and hd.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and hd.o (0x1)
Removed property 0xc0010001 to merge kernel_main.o (not found) and fs_main.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and fs_main.o (0x1)
Removed property 0xc0010001 to merge kernel_main.o (not found) and global.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and global.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and process.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and process.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and protect.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and protect.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and console.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and console.o (0x1)
Removed property 0xc0010001 to merge kernel_main.o (not found) and keyboard.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and keyboard.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and open.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and open.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and read.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and read.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and write.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and write.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and close.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and close.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and wait.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and wait.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and exit.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and exit.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and fork.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and fork.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and getpid.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and getpid.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and exec.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and exec.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and mm/main.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and mm/main.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and mm/exec.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and mm/exec.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and mm/forkexit.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and mm/forkexit.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and kernel_main_old.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and kernel_main_old.o (0x1)
Removed property 0xc0010001 to merge kernel_main.o (not found) and my_process.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and my_process.o (0x1)
Removed property 0xc0010001 to merge kernel_main.o (not found) and double_link_list.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and double_link_list.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and thread.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and thread.o (0x0)

Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
phy_super_block_buf
                    0x4               fs_main.o
phy_fsbuf           0x4               fs_main.o
idt_ptr             0x6               kernel_main.o
pid                 0x4               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
inode_table         0xa00             fs_main.o
current_dis_pos     0x4               kernel_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
super_block_buf     0x4               fs_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
test_ticks          0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
pcb_list            0x10              kernel_main.o
gdt_index           0x4               kernel_main.o
tty_table           0x828             kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
net_buf             0x4               kernel_main.o
fsbuf               0x4               fs_main.o
root                0x28              fs_main.o
kernel_mem_block_decs_array
                    0xf0              mem/mem.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
fork_pid            0x4               kernel_main.o
is_shift            0x1               kernel_main.o
net_data            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
main_thread         0x4               kernel_main.o
ticks               0x8               kernel_main.o
is_init             0x1               kernel_main.o
UserPool            0x10              kernel_main.o
all_pcb_list        0x10              kernel_main.o
console_table       0x10              kernel_main.o
is_disp             0x1               kernel_main.o
MAIN_THREAD_PAGE_DIRECTORY
                    0x4               kernel_main.o
helloStr            0xc               kernel_main.o
proc_table          0x15e0            global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x00000000        0x0 kernel_main.o
 .note.gnu.property
                0x00000000       0x28 kernel_main.o
 .note.GNU-stack
                0x00000000        0x0 hd.o
 .note.gnu.property
                0x00000000       0x28 hd.o
 .note.GNU-stack
                0x00000000        0x0 fs_main.o
 .note.gnu.property
                0x00000000       0x28 fs_main.o
 .note.GNU-stack
                0x00000000        0x0 global.o
 .note.gnu.property
                0x00000000       0x28 global.o
 .note.GNU-stack
                0x00000000        0x0 process.o
 .note.gnu.property
                0x00000000       0x28 process.o
 .note.GNU-stack
                0x00000000        0x0 protect.o
 .note.gnu.property
                0x00000000       0x28 protect.o
 .note.GNU-stack
                0x00000000        0x0 console.o
 .note.gnu.property
                0x00000000       0x28 console.o
 .note.GNU-stack
                0x00000000        0x0 keyboard.o
 .note.gnu.property
                0x00000000       0x28 keyboard.o
 .note.GNU-stack
                0x00000000        0x0 open.o
 .note.gnu.property
                0x00000000       0x28 open.o
 .note.GNU-stack
                0x00000000        0x0 read.o
 .note.gnu.property
                0x00000000       0x28 read.o
 .note.GNU-stack
                0x00000000        0x0 write.o
 .note.gnu.property
                0x00000000       0x28 write.o
 .note.GNU-stack
                0x00000000        0x0 close.o
 .note.gnu.property
                0x00000000       0x28 close.o
 .note.GNU-stack
                0x00000000        0x0 wait.o
 .note.gnu.property
                0x00000000       0x28 wait.o
 .note.GNU-stack
                0x00000000        0x0 exit.o
 .note.gnu.property
                0x00000000       0x28 exit.o
 .note.GNU-stack
                0x00000000        0x0 fork.o
 .note.gnu.property
                0x00000000       0x28 fork.o
 .note.GNU-stack
                0x00000000        0x0 getpid.o
 .note.gnu.property
                0x00000000       0x28 getpid.o
 .note.GNU-stack
                0x00000000        0x0 exec.o
 .note.gnu.property
                0x00000000       0x28 exec.o
 .note.GNU-stack
                0x00000000        0x0 mm/main.o
 .note.gnu.property
                0x00000000       0x28 mm/main.o
 .note.GNU-stack
                0x00000000        0x0 mm/exec.o
 .note.gnu.property
                0x00000000       0x28 mm/exec.o
 .note.GNU-stack
                0x00000000        0x0 mm/forkexit.o
 .note.gnu.property
                0x00000000       0x28 mm/forkexit.o
 .note.GNU-stack
                0x00000000        0x0 mem/mem.o
 .note.GNU-stack
                0x00000000        0x0 kernel_main_old.o
 .note.gnu.property
                0x00000000       0x28 kernel_main_old.o
 .note.GNU-stack
                0x00000000        0x0 my_process.o
 .note.gnu.property
                0x00000000       0x28 my_process.o
 .note.GNU-stack
                0x00000000        0x0 double_link_list.o
 .note.gnu.property
                0x00000000       0x28 double_link_list.o
 .note.GNU-stack
                0x00000000        0x0 thread.o
 .note.gnu.property
                0x00000000       0x28 thread.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .text set to 0xc0100000
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
LOAD kernel_main_old.o
LOAD my_process.o
LOAD switch_to.o
LOAD double_link_list.o
LOAD thread.o
LOAD ne2000.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x080480d4                        . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x080480d4        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x080480d4        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x080480d4        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x080480d4        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x080480d4        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.relr.dyn
 *(.relr.dyn)
                0x08049000                        . = ALIGN (CONSTANT (MAXPAGESIZE))

.init
 *(SORT_NONE(.init))

.plt            0x08049000        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x08049000        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0xc0100000     0xa764
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(SORT_BY_NAME(.text.sorted.*))
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0xc0100000       0x71 kernel_sub.o
                0xc0100000                _start
 *fill*         0xc0100071        0xf 
 .text          0xc0100080      0x389 kernel.o
                0xc0100080                InterruptTest
                0xc010008c                disp_str
                0xc01000c7                disp_str_colour
                0xc0100103                divide_zero_fault
                0xc0100109                single_step_fault
                0xc010010f                non_maskable_interrupt
                0xc0100115                breakpoint_trap
                0xc010011b                overflow_trap
                0xc0100121                bound_range_exceeded_fault
                0xc0100127                invalid_opcode_fault
                0xc010012d                coprocessor_not_available_fault
                0xc0100133                double_fault_exception_abort
                0xc0100137                coprocessor_segment_overrun
                0xc010013d                invalid_task_state_segment_fault
                0xc0100141                segment_not_present_fault
                0xc0100145                stack_exception_fault
                0xc0100149                general_protection_exception_fault
                0xc0100154                page_fault
                0xc0100158                coprocessor_error_fault
                0xc010015e                align_check_fault
                0xc0100162                simd_float_exception_fault
                0xc0100171                hwint0
                0xc010019f                hwint1
                0xc01001e2                hwint14
                0xc0100228                hwint10
                0xc010026c                sys_call
                0xc01002b2                fork_restart
                0xc01002c1                restart
                0xc01002e4                in_byte
                0xc01002f0                out_byte
                0xc0100312                disable_int
                0xc0100314                enable_int
                0xc01003aa                enable_8259A_casecade_irq
                0xc01003b4                disable_8259A_casecade_irq
                0xc01003be                enable_8259A_slave_winchester_irq
                0xc01003c8                disable_8259A_slave_winchester_irq
                0xc01003d2                update_cr3
                0xc01003df                update_tss
                0xc01003ee                get_running_thread_pcb
                0xc01003f6                sys_call_test
                0xc01003f9                enable_8259A_slave_net_irq
 .text          0xc0100409      0x3b2 kernel_main.o
                0xc0100409                kernel_main
                0xc010058f                init
                0xc0100623                kernel_thread_a
                0xc0100670                kernel_thread_b
                0xc01006bd                kernel_thread_c
                0xc01006d3                kernel_thread_d
                0xc01006e9                user_proc_a
                0xc01007a3                user_proc_b
 .text          0xc01007bb      0xe39 hd.o
                0xc01007bb                TaskHD
                0xc0100800                init_hd
                0xc010081a                hd_handle
                0xc010091f                hd_cmd_out
                0xc0100a21                hd_identify
                0xc0100ad8                print_hdinfo
                0xc0100c66                print_dpt_entry
                0xc0100cd2                get_partition_table
                0xc0100db1                partition
                0xc0100fcb                hd_open
                0xc0101072                get_hd_ioctl
                0xc0101123                wait_for
                0xc0101154                interrupt_wait
                0xc01011a4                hd_rdwt
                0xc0101443                hd_handler
                0xc010146f                net_handler
                0xc010148b                waitfor
                0xc01014cf                print_hd_info
                0xc01015bc                is_empty
 *fill*         0xc01015f4        0xc 
 .text          0xc0101600       0x69 syscall.o
                0xc0101600                write_debug
                0xc0101610                send_msg
                0xc0101626                receive_msg
                0xc010163c                sys_malloc
                0xc0101651                sys_free
 .text          0xc0101669     0x204f fs_main.o
                0xc0101669                task_fs
                0xc0101874                rd_wt
                0xc010194d                mkfs
                0xc0101f2f                init_fs
                0xc0101f83                do_open
                0xc0102172                search_file
                0xc01022a4                strip_path
                0xc0102370                get_inode
                0xc0102532                create_file
                0xc010263d                alloc_imap_bit
                0xc010273a                alloc_smap_bit
                0xc01028db                new_inode
                0xc01029f9                new_dir_entry
                0xc0102c05                do_unlink
                0xc01030e1                do_rdwt
                0xc010346c                sync_inode
                0xc01035c0                put_inode
                0xc01035fe                do_close
                0xc0103650                get_super_block
 .text          0xc01036b8        0x0 global.o
 .text          0xc01036b8      0x21b process.o
                0xc01036b8                schedule_process
                0xc01037c5                clock_handler
                0xc0103836                pid2proc
                0xc01038bc                proc2pid
 .text          0xc01038d3      0x3b3 protect.o
                0xc01038d3                InitDescriptor
                0xc0103940                Seg2PhyAddr
                0xc0103981                Seg2PhyAddrLDT
                0xc01039c5                VirAddr2PhyAddr
                0xc01039db                v2l
                0xc0103a1e                init_propt
                0xc0103b9f                InitInterruptDesc
                0xc0103bfb                ReloadGDT
 .text          0xc0103c86      0xaca console.o
                0xc0103c86                select_console
                0xc0103cc2                flush
                0xc0103cfb                set_cursor
                0xc0103d59                set_console_start_video_addr
                0xc0103db7                put_key
                0xc0103e23                scroll_up
                0xc0103e65                scroll_down
                0xc0103ed0                out_char
                0xc010408d                tty_dev_read
                0xc01040b7                tty_dev_write
                0xc01042e4                tty_do_read
                0xc01043ac                tty_do_write
                0xc010450f                init_screen
                0xc0104598                init_tty
                0xc010464d                TaskTTY
 .text          0xc0104750      0x40f keyboard.o
                0xc0104750                keyboard_handler
                0xc01047d4                read_from_keyboard_buf
                0xc010483a                keyboard_read
                0xc01049b9                init_keyboard_handler
                0xc01049cd                in_process
 .text          0xc0104b5f       0x95 open.o
                0xc0104b5f                open
 .text          0xc0104bf4      0x181 read.o
                0xc0104bf4                read
 .text          0xc0104d75       0x85 write.o
                0xc0104d75                write
 .text          0xc0104dfa       0x52 close.o
                0xc0104dfa                close
 .text          0xc0104e4c       0x44 wait.o
                0xc0104e4c                wait
 .text          0xc0104e90       0x2f exit.o
                0xc0104e90                exit
 .text          0xc0104ebf       0x48 fork.o
                0xc0104ebf                fork
 .text          0xc0104f07       0x2b getpid.o
                0xc0104f07                getpid
 .text          0xc0104f32      0x285 exec.o
                0xc0104f32                exec
                0xc0104fa3                execv
                0xc0105192                execl
 .text          0xc01051b7      0x148 mm/main.o
                0xc01051b7                TaskMM
                0xc01052e0                alloc_mem
 .text          0xc01052ff      0x419 mm/exec.o
                0xc01052ff                do_exec
 .text          0xc0105718      0x271 mm/forkexit.o
                0xc0105718                do_fork
                0xc0105786                do_exit
                0xc0105810                do_wait
                0xc010592f                cleanup
 .text          0xc0105989     0x1275 mem/mem.o
                0xc0105989                init_bitmap
                0xc01059ac                test_bit_val
                0xc0105a15                set_bit_val
                0xc0105a90                set_bits
                0xc0105aca                get_first_free_bit
                0xc0105b0e                get_bits
                0xc0105bd6                get_a_page
                0xc0105c8a                get_virtual_address_start_with_addr
                0xc0105d24                get_virtual_address
                0xc0105db4                ptr_pde
                0xc0105dc7                ptr_pte
                0xc0105dee                add_map_entry
                0xc0105e7f                alloc_virtual_memory
                0xc0105f52                get_physical_address_proc
                0xc0105fce                get_physical_address
                0xc0106000                alloc_physical_memory_of_proc
                0xc01060ef                alloc_physical_memory
                0xc01061b7                alloc_memory
                0xc0106219                get_a_virtual_page
                0xc0106251                block2arena
                0xc0106267                sys_malloc2
                0xc010651d                remove_map_entry
                0xc010653e                free_a_page
                0xc01065e5                sys_free2
                0xc010676d                init_memory_block_desc
                0xc010683e                init_memory2
                0xc0106ab5                init_memory
 .text          0xc0106bfe     0x2d4d kernel_main_old.o
                0xc0106bfe                stop_here
                0xc0106c42                catch_error
                0xc0106c5f                intr_enable
                0xc0106c88                intr_disable
                0xc0106cb1                intr_set_status
                0xc0106ccf                intr_get_status
                0xc0106cec                Memcpy
                0xc0106d1f                untar
                0xc0107034                atoi
                0xc01070da                disp_int
                0xc0107103                do_page_fault
                0xc0107240                exception_handler
                0xc0107427                init_internal_interrupt
                0xc010759c                spurious_irq
                0xc010762a                init_keyboard
                0xc010766d                TestTTY
                0xc010770c                TestReadReturnValue
                0xc0107789                TestWriteReturnValue
                0xc010785d                TestFS2
                0xc010786b                TestFS
                0xc0107d0d                wait_exit
                0xc0107e0b                INIT_fork
                0xc0108103                simple_shell
                0xc010828a                test_shell
                0xc01082f2                test_exec
                0xc0108432                INIT
                0xc010843f                TestA
                0xc0108474                delay
                0xc01084b8                TestB
                0xc01084d0                TestC
                0xc0108503                sys_get_ticks
                0xc0108513                sys_write
                0xc0108567                milli_delay
                0xc01085a3                TaskSys
                0xc01085a8                Printf
                0xc0108606                vsprintf
                0xc01087b2                printx
                0xc01087f5                sys_printx
                0xc01088c1                spin
                0xc01088e7                panic
                0xc0108905                assertion_failure
                0xc0108977                assertion_failure2
                0xc01089ec                dead_lock
                0xc01089f6                sys_send_msg
                0xc0108f15                sys_receive_msg
                0xc0109575                send_rec
                0xc0109670                block
                0xc01096ac                unblock
                0xc01096fc                get_ticks_ipc
                0xc0109753                itoa
                0xc01097a9                i2a
                0xc010980f                inform_int
                0xc01098dc                strcmp
 .text          0xc010994b      0x730 my_process.o
                0xc010994b                create_user_process_address_space
                0xc01099db                user_process
                0xc0109b08                clone_pcb
                0xc0109c7a                build_body_stack
                0xc0109dad                build_process_kernel_stack
                0xc0109e70                fork_process
                0xc0109f01                process_execute
 *fill*         0xc010a07b        0x5 
 .text          0xc010a080       0x15 switch_to.o
                0xc010a080                switch_to
 .text          0xc010a095      0x329 double_link_list.o
                0xc010a095                initDoubleLinkList
                0xc010a0c3                isListEmpty
                0xc010a0e4                findElementInList
                0xc010a1c0                appendToDoubleLinkList
                0xc010a2a7                insertToDoubleLinkList
                0xc010a32a                popFromDoubleLinkList
 .text          0xc010a3be      0x1b2 thread.o
                0xc010a3be                kernel_thread
                0xc010a3d6                thread_init
                0xc010a483                thread_create
                0xc010a4b8                thread_start
 .text          0xc010a570      0x1f4 ne2000.o
                0xc010a593                DriverInitialize
                0xc010a628                DriverSend
                0xc010a69b                PCtoNIC
                0xc010a701                NICtoPC
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)
                0xc010b000                        . = ALIGN (CONSTANT (MAXPAGESIZE))
                0xc010b000                        . = SEGMENT_START ("rodata-segment", (ALIGN (CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 0x1))))

.rodata         0xc010b000     0x11a1
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0xc010b000      0x134 kernel_main.o
 .rodata        0xc010b134      0x1be hd.o
 *fill*         0xc010b2f2        0x2 
 .rodata        0xc010b2f4      0x1eb fs_main.o
                0xc010b2f4                FSBUF_SIZE
 .rodata        0xc010b4df       0x26 process.o
 .rodata        0xc010b505       0x22 console.o
 .rodata        0xc010b527       0x24 close.o
 .rodata        0xc010b54b       0x2d exec.o
 .rodata        0xc010b578       0x11 mm/main.o
 .rodata        0xc010b589       0x10 mm/exec.o
 .rodata        0xc010b599       0x21 mm/forkexit.o
 .rodata        0xc010b5ba       0x41 mem/mem.o
 *fill*         0xc010b5fb        0x5 
 .rodata        0xc010b600      0xb75 kernel_main_old.o
 .rodata        0xc010c175       0x2c double_link_list.o

.txt            0xc010c1a1       0xaa
 .txt           0xc010c1a1       0x82 string.o
                0xc010c1a1                Memcpy2
                0xc010c1cf                Memset
                0xc010c1ee                Strcpy
                0xc010c208                Strlen
 .txt           0xc010c223       0x28 hd_rdwt.o
                0xc010c223                read_port
                0xc010c237                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0xc010c24c     0x1848
 *(.eh_frame)
 .eh_frame      0xc010c24c       0xfc kernel_main.o
 .eh_frame      0xc010c348      0x264 hd.o
                                0x27c (size before relaxing)
 .eh_frame      0xc010c5ac      0x27c fs_main.o
                                0x294 (size before relaxing)
 .eh_frame      0xc010c828       0x80 process.o
                                 0x98 (size before relaxing)
 .eh_frame      0xc010c8a8      0x100 protect.o
                                0x118 (size before relaxing)
 .eh_frame      0xc010c9a8      0x1e0 console.o
                                0x1f8 (size before relaxing)
 .eh_frame      0xc010cb88       0xa0 keyboard.o
                                 0xb8 (size before relaxing)
 .eh_frame      0xc010cc28       0x20 open.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc010cc48       0x20 read.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc010cc68       0x20 write.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc010cc88       0x20 close.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc010cca8       0x20 wait.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc010ccc8       0x20 exit.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc010cce8       0x20 fork.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc010cd08       0x20 getpid.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc010cd28       0x60 exec.o
                                 0x78 (size before relaxing)
 .eh_frame      0xc010cd88       0x3c mm/main.o
                                 0x54 (size before relaxing)
 .eh_frame      0xc010cdc4       0x20 mm/exec.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc010cde4       0x80 mm/forkexit.o
                                 0x98 (size before relaxing)
 .eh_frame      0xc010ce64      0x364 mem/mem.o
                                0x37c (size before relaxing)
 .eh_frame      0xc010d1c8      0x6ac kernel_main_old.o
                                0x6c4 (size before relaxing)
 .eh_frame      0xc010d874       0xe0 my_process.o
                                 0xf8 (size before relaxing)
 .eh_frame      0xc010d954       0xc0 double_link_list.o
                                 0xd8 (size before relaxing)
 .eh_frame      0xc010da14       0x80 thread.o
                                 0x98 (size before relaxing)
 *(.eh_frame.*)

.sframe
 *(.sframe)
 *(.sframe.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0xc010e000                        . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.sframe
 *(.sframe)
 *(.sframe.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0xc010e000        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0xc010e000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0xc010e000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0xc010e000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0xc010e000        0x0
 *(.got)
 .got           0xc010e000        0x0 kernel_sub.o
 *(.igot)
                0xc010e000                        . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0xc010e000        0x0
 *(.got.plt)
 .got.plt       0xc010e000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0xc010e000        0x0 kernel_sub.o

.data           0xc010e000      0x760
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0xc010e000        0xf kernel_sub.o
 *fill*         0xc010e00f        0x1 
 .data          0xc010e010        0xf kernel.o
 .data          0xc010e01f        0x0 kernel_main.o
 .data          0xc010e01f        0x0 hd.o
 *fill*         0xc010e01f        0x1 
 .data          0xc010e020        0x0 syscall.o
 .data          0xc010e020        0x0 fs_main.o
 .data          0xc010e020      0x128 global.o
                0xc010e020                user_task_table
                0xc010e0a0                sys_task_table
                0xc010e12c                sys_call_table
 .data          0xc010e148        0x0 process.o
 .data          0xc010e148        0x0 protect.o
 .data          0xc010e148        0x0 console.o
 *fill*         0xc010e148       0x18 
 .data          0xc010e160      0x600 keyboard.o
                0xc010e160                keymap
 .data          0xc010e760        0x0 open.o
 .data          0xc010e760        0x0 read.o
 .data          0xc010e760        0x0 write.o
 .data          0xc010e760        0x0 close.o
 .data          0xc010e760        0x0 wait.o
 .data          0xc010e760        0x0 exit.o
 .data          0xc010e760        0x0 fork.o
 .data          0xc010e760        0x0 getpid.o
 .data          0xc010e760        0x0 exec.o
 .data          0xc010e760        0x0 mm/main.o
 .data          0xc010e760        0x0 mm/exec.o
 .data          0xc010e760        0x0 mm/forkexit.o
 .data          0xc010e760        0x0 mem/mem.o
 .data          0xc010e760        0x0 kernel_main_old.o
 .data          0xc010e760        0x0 my_process.o
 .data          0xc010e760        0x0 double_link_list.o
 .data          0xc010e760        0x0 thread.o

.data1
 *(.data1)
                0xc010e760                        _edata = .
                [!provide]                        PROVIDE (edata = .)
                0xc010e760                        . = .
                0xc010e760                        __bss_start = .

.bss            0xc010e760    0x75170
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0xc010e760      0x800 kernel_sub.o
 .bss           0xc010ef60      0x800 kernel.o
 .bss           0xc010f760        0x0 kernel_main.o
 .bss           0xc010f760        0x0 hd.o
 .bss           0xc010f760        0x4 fs_main.o
                0xc010f760                c
 .bss           0xc010f764        0x0 global.o
 .bss           0xc010f764        0x0 process.o
 .bss           0xc010f764        0x0 protect.o
 .bss           0xc010f764        0x0 console.o
 .bss           0xc010f764        0x0 keyboard.o
 .bss           0xc010f764        0x0 open.o
 .bss           0xc010f764        0x0 read.o
 .bss           0xc010f764        0x0 write.o
 .bss           0xc010f764        0x0 close.o
 .bss           0xc010f764        0x0 wait.o
 .bss           0xc010f764        0x0 exit.o
 .bss           0xc010f764        0x0 fork.o
 .bss           0xc010f764        0x0 getpid.o
 .bss           0xc010f764        0x0 exec.o
 .bss           0xc010f764        0x0 mm/main.o
 .bss           0xc010f764        0x0 mm/exec.o
 .bss           0xc010f764        0x0 mm/forkexit.o
 .bss           0xc010f764        0x0 mem/mem.o
 .bss           0xc010f764        0x0 kernel_main_old.o
 .bss           0xc010f764        0x0 my_process.o
 .bss           0xc010f764        0x0 double_link_list.o
 .bss           0xc010f764        0x0 thread.o
 *(COMMON)
 *fill*         0xc010f764       0x1c 
 COMMON         0xc010f780     0x17b8 kernel_main.o
                0xc010f780                current_tty
                0xc010f784                is_e0
                0xc010f788                idt_ptr
                0xc010f790                pid
                0xc010f794                KernelVirtualMemory
                0xc010f7a0                current_dis_pos
                0xc010f7a4                dis_pos
                0xc010f7a8                k_reenter
                0xc010f7c0                gdt
                0xc010fbc0                proc_ready_table
                0xc010fbc4                test_ticks
                0xc010fbc8                pcaller
                0xc010fbe0                keyboard_buffer
                0xc010fdec                pcb_list
                0xc010fdfc                gdt_index
                0xc010fe00                tty_table
                0xc0110640                tss
                0xc01106ac                KernelPool
                0xc01106bc                net_buf
                0xc01106c0                counter
                0xc01106c4                key_pressed
                0xc01106c8                fork_pid
                0xc01106cc                is_shift
                0xc01106cd                net_data
                0xc01106d0                gdt_ptr
                0xc01106e0                idt
                0xc0110ee0                main_thread
                0xc0110ee8                ticks
                0xc0110ef0                is_init
                0xc0110ef4                UserPool
                0xc0110f04                all_pcb_list
                0xc0110f14                console_table
                0xc0110f24                is_disp
                0xc0110f28                MAIN_THREAD_PAGE_DIRECTORY
                0xc0110f2c                helloStr
 *fill*         0xc0110f38        0x8 
 COMMON         0xc0110f40      0x440 hd.o
                0xc0110f40                hd_info
                0xc0111180                hd_cache
 COMMON         0xc0111380      0xe68 fs_main.o
                0xc0111380                file_desc_table
                0xc0111780                phy_super_block_buf
                0xc0111784                phy_fsbuf
                0xc01117a0                inode_table
                0xc01121a0                super_block_buf
                0xc01121a4                fsbuf
                0xc01121c0                root
 *fill*         0xc01121e8       0x18 
 COMMON         0xc0112200    0x715e0 global.o
                0xc0112200                proc_stack
                0xc0182200                proc_table
 COMMON         0xc01837e0       0xf0 mem/mem.o
                0xc01837e0                kernel_mem_block_decs_array
                0xc01838d0                        . = ALIGN ((. != 0x0)?0x4:0x1)
                0xc01838d0                        . = ALIGN (0x4)
                0xc01838d0                        . = SEGMENT_START ("ldata-segment", .)
                0xc01838d0                        . = ALIGN (0x4)
                0xc01838d0                        _end = .
                [!provide]                        PROVIDE (end = .)
                0xc01838d0                        . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2c
 *(.comment)
 .comment       0x00000000       0x2c kernel_main.o
                                 0x2d (size before relaxing)
 .comment       0x0000002c       0x2d hd.o
 .comment       0x0000002c       0x2d fs_main.o
 .comment       0x0000002c       0x2d global.o
 .comment       0x0000002c       0x2d process.o
 .comment       0x0000002c       0x2d protect.o
 .comment       0x0000002c       0x2d console.o
 .comment       0x0000002c       0x2d keyboard.o
 .comment       0x0000002c       0x2d open.o
 .comment       0x0000002c       0x2d read.o
 .comment       0x0000002c       0x2d write.o
 .comment       0x0000002c       0x2d close.o
 .comment       0x0000002c       0x2d wait.o
 .comment       0x0000002c       0x2d exit.o
 .comment       0x0000002c       0x2d fork.o
 .comment       0x0000002c       0x2d getpid.o
 .comment       0x0000002c       0x2d exec.o
 .comment       0x0000002c       0x2d mm/main.o
 .comment       0x0000002c       0x2d mm/exec.o
 .comment       0x0000002c       0x2d mm/forkexit.o
 .comment       0x0000002c       0x2d mem/mem.o
 .comment       0x0000002c       0x2d kernel_main_old.o
 .comment       0x0000002c       0x2d my_process.o
 .comment       0x0000002c       0x2d double_link_list.o
 .comment       0x0000002c       0x2d thread.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x318
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 kernel_main.o
 .debug_aranges
                0x00000020       0x20 hd.o
 .debug_aranges
                0x00000040       0x20 fs_main.o
 .debug_aranges
                0x00000060       0x18 global.o
 .debug_aranges
                0x00000078       0x20 process.o
 .debug_aranges
                0x00000098       0x20 protect.o
 .debug_aranges
                0x000000b8       0x20 console.o
 .debug_aranges
                0x000000d8       0x20 keyboard.o
 .debug_aranges
                0x000000f8       0x20 open.o
 .debug_aranges
                0x00000118       0x20 read.o
 .debug_aranges
                0x00000138       0x20 write.o
 .debug_aranges
                0x00000158       0x20 close.o
 .debug_aranges
                0x00000178       0x20 wait.o
 .debug_aranges
                0x00000198       0x20 exit.o
 .debug_aranges
                0x000001b8       0x20 fork.o
 .debug_aranges
                0x000001d8       0x20 getpid.o
 .debug_aranges
                0x000001f8       0x20 exec.o
 .debug_aranges
                0x00000218       0x20 mm/main.o
 .debug_aranges
                0x00000238       0x20 mm/exec.o
 .debug_aranges
                0x00000258       0x20 mm/forkexit.o
 .debug_aranges
                0x00000278       0x20 mem/mem.o
 .debug_aranges
                0x00000298       0x20 kernel_main_old.o
 .debug_aranges
                0x000002b8       0x20 my_process.o
 .debug_aranges
                0x000002d8       0x20 double_link_list.o
 .debug_aranges
                0x000002f8       0x20 thread.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000    0x1bf57
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0xfc4 kernel_main.o
 .debug_info    0x00000fc4     0x17e3 hd.o
 .debug_info    0x000027a7     0x1f29 fs_main.o
 .debug_info    0x000046d0      0xe78 global.o
 .debug_info    0x00005548      0xf61 process.o
 .debug_info    0x000064a9     0x11a3 protect.o
 .debug_info    0x0000764c     0x1278 console.o
 .debug_info    0x000088c4      0xfcc keyboard.o
 .debug_info    0x00009890      0xdf0 open.o
 .debug_info    0x0000a680      0xe8f read.o
 .debug_info    0x0000b50f      0xe1d write.o
 .debug_info    0x0000c32c      0xda4 close.o
 .debug_info    0x0000d0d0      0xdaf wait.o
 .debug_info    0x0000de7f      0xda1 exit.o
 .debug_info    0x0000ec20      0xd96 fork.o
 .debug_info    0x0000f9b6      0xd96 getpid.o
 .debug_info    0x0001074c      0xf2e exec.o
 .debug_info    0x0001167a      0xdba mm/main.o
 .debug_info    0x00012434     0x11b8 mm/exec.o
 .debug_info    0x000135ec      0xfaa mm/forkexit.o
 .debug_info    0x00014596     0x1cfa mem/mem.o
 .debug_info    0x00016290     0x27b3 kernel_main_old.o
 .debug_info    0x00018a43     0x148b my_process.o
 .debug_info    0x00019ece     0x1032 double_link_list.o
 .debug_info    0x0001af00     0x1057 thread.o

.debug_abbrev   0x00000000     0x34fa
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x21d kernel_main.o
 .debug_abbrev  0x0000021d      0x2e3 hd.o
 .debug_abbrev  0x00000500      0x2ef fs_main.o
 .debug_abbrev  0x000007ef      0x157 global.o
 .debug_abbrev  0x00000946      0x1e0 process.o
 .debug_abbrev  0x00000b26      0x227 protect.o
 .debug_abbrev  0x00000d4d      0x2ac console.o
 .debug_abbrev  0x00000ff9      0x1fb keyboard.o
 .debug_abbrev  0x000011f4      0x1c5 open.o
 .debug_abbrev  0x000013b9      0x1ef read.o
 .debug_abbrev  0x000015a8      0x1db write.o
 .debug_abbrev  0x00001783      0x19d close.o
 .debug_abbrev  0x00001920      0x19f wait.o
 .debug_abbrev  0x00001abf      0x19b exit.o
 .debug_abbrev  0x00001c5a      0x18a fork.o
 .debug_abbrev  0x00001de4      0x18a getpid.o
 .debug_abbrev  0x00001f6e      0x1e8 exec.o
 .debug_abbrev  0x00002156      0x208 mm/main.o
 .debug_abbrev  0x0000235e      0x1c4 mm/exec.o
 .debug_abbrev  0x00002522      0x204 mm/forkexit.o
 .debug_abbrev  0x00002726      0x2ea mem/mem.o
 .debug_abbrev  0x00002a10      0x452 kernel_main_old.o
 .debug_abbrev  0x00002e62      0x260 my_process.o
 .debug_abbrev  0x000030c2      0x216 double_link_list.o
 .debug_abbrev  0x000032d8      0x222 thread.o

.debug_line     0x00000000     0x48db
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000      0x1e0 kernel_main.o
 .debug_line    0x000001e0      0x61d hd.o
 .debug_line    0x000007fd      0xc1a fs_main.o
 .debug_line    0x00001417       0x95 global.o
 .debug_line    0x000014ac      0x180 process.o
 .debug_line    0x0000162c      0x1ff protect.o
 .debug_line    0x0000182b      0x54e console.o
 .debug_line    0x00001d79      0x296 keyboard.o
 .debug_line    0x0000200f       0xbd open.o
 .debug_line    0x000020cc      0x155 read.o
 .debug_line    0x00002221       0xbc write.o
 .debug_line    0x000022dd       0xad close.o
 .debug_line    0x0000238a       0xb7 wait.o
 .debug_line    0x00002441       0xa0 exit.o
 .debug_line    0x000024e1       0xa5 fork.o
 .debug_line    0x00002586       0xa0 getpid.o
 .debug_line    0x00002626      0x18b exec.o
 .debug_line    0x000027b1       0xec mm/main.o
 .debug_line    0x0000289d      0x20c mm/exec.o
 .debug_line    0x00002aa9      0x17a mm/forkexit.o
 .debug_line    0x00002c23      0x7e6 mem/mem.o
 .debug_line    0x00003409      0xdff kernel_main_old.o
 .debug_line    0x00004208      0x33b my_process.o
 .debug_line    0x00004543      0x253 double_link_list.o
 .debug_line    0x00004796      0x145 thread.o

.debug_frame
 *(.debug_frame)

.debug_str      0x00000000     0x1e8f
 *(.debug_str)
 .debug_str     0x00000000     0x1e8f kernel_main.o
                                0x67a (size before relaxing)
 .debug_str     0x00001e8f      0x908 hd.o
 .debug_str     0x00001e8f      0xae9 fs_main.o
 .debug_str     0x00001e8f      0x5ff global.o
 .debug_str     0x00001e8f      0x639 process.o
 .debug_str     0x00001e8f      0x75a protect.o
 .debug_str     0x00001e8f      0x74e console.o
 .debug_str     0x00001e8f      0x68b keyboard.o
 .debug_str     0x00001e8f      0x5c7 open.o
 .debug_str     0x00001e8f      0x600 read.o
 .debug_str     0x00001e8f      0x5c4 write.o
 .debug_str     0x00001e8f      0x58f close.o
 .debug_str     0x00001e8f      0x594 wait.o
 .debug_str     0x00001e8f      0x594 exit.o
 .debug_str     0x00001e8f      0x58d fork.o
 .debug_str     0x00001e8f      0x591 getpid.o
 .debug_str     0x00001e8f      0x61b exec.o
 .debug_str     0x00001e8f      0x587 mm/main.o
 .debug_str     0x00001e8f      0x85c mm/exec.o
 .debug_str     0x00001e8f      0x606 mm/forkexit.o
 .debug_str     0x00001e8f      0xa6d mem/mem.o
 .debug_str     0x00001e8f      0xb51 kernel_main_old.o
 .debug_str     0x00001e8f      0x8ed my_process.o
 .debug_str     0x00001e8f      0x6c0 double_link_list.o
 .debug_str     0x00001e8f      0x706 thread.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x90
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x48 hd.o
 .debug_ranges  0x00000048       0x18 mm/exec.o
 .debug_ranges  0x00000060       0x30 kernel_main_old.o

.debug_addr
 *(.debug_addr)

.debug_line_str
 *(.debug_line_str)

.debug_loclists
 *(.debug_loclists)

.debug_macro
 *(.debug_macro)

.debug_names
 *(.debug_names)

.debug_rnglists
 *(.debug_rnglists)

.debug_str_offsets
 *(.debug_str_offsets)

.debug_sup
 *(.debug_sup)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
