
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
idt_ptr             0x6               kernel_main.o
KernelVirtualMemory
                    0x8               kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
tty_table           0x186c            kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
root                0x28              fs_main.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
ticks               0x4               kernel_main.o
UserPool            0x10              kernel_main.o
console_table       0x30              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table          0x3dc0            global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mem/mem.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0x1000
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x0000000000001000     0x7ac3
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000001000       0x78 kernel_sub.o
                0x0000000000001000                _start
 *fill*         0x0000000000001078        0x8 
 .text          0x0000000000001080      0x341 kernel.o
                0x0000000000001080                InterruptTest
                0x000000000000108c                disp_str
                0x00000000000010c7                disp_str_colour
                0x0000000000001103                divide_zero_fault
                0x0000000000001109                single_step_fault
                0x000000000000110f                non_maskable_interrupt
                0x0000000000001115                breakpoint_trap
                0x000000000000111b                overflow_trap
                0x0000000000001121                bound_range_exceeded_fault
                0x0000000000001127                invalid_opcode_fault
                0x000000000000112d                coprocessor_not_available_fault
                0x0000000000001133                double_fault_exception_abort
                0x0000000000001137                coprocessor_segment_overrun
                0x000000000000113d                invalid_task_state_segment_fault
                0x0000000000001141                segment_not_present_fault
                0x0000000000001145                stack_exception_fault
                0x0000000000001149                general_protection_exception_fault
                0x000000000000114d                page_fault
                0x0000000000001151                coprocessor_error_fault
                0x0000000000001157                align_check_fault
                0x000000000000115b                simd_float_exception_fault
                0x000000000000116a                hwint0
                0x00000000000011b3                hwint1
                0x00000000000011fc                hwint14
                0x0000000000001245                sys_call
                0x000000000000128f                restart
                0x00000000000012d3                in_byte
                0x00000000000012df                out_byte
                0x0000000000001301                disable_int
                0x0000000000001303                enable_int
                0x0000000000001399                enable_8259A_casecade_irq
                0x00000000000013a3                disable_8259A_casecade_irq
                0x00000000000013ad                enable_8259A_slave_winchester_irq
                0x00000000000013b7                disable_8259A_slave_winchester_irq
 .text          0x00000000000013c1     0x24f8 kernel_main.o
                0x00000000000013c1                untar
                0x00000000000015cb                atoi
                0x0000000000001671                disp_int
                0x000000000000169a                exception_handler
                0x000000000000183b                init_internal_interrupt
                0x00000000000019b0                test
                0x00000000000019e6                disp_str_colour3
                0x00000000000019ec                spurious_irq
                0x0000000000001a65                init_keyboard
                0x0000000000001ae2                init
                0x0000000000001afb                kernel_main
                0x0000000000001b35                TestFS
                0x0000000000001f09                wait_exit
                0x0000000000001fd7                INIT_fork
                0x00000000000022c7                simple_shell
                0x000000000000249e                test_split_str
                0x000000000000262b                test_shell
                0x0000000000002709                test_exec
                0x00000000000027d1                INIT
                0x00000000000027de                TestA
                0x00000000000027f3                delay
                0x000000000000283a                TestB
                0x0000000000002869                TestC
                0x000000000000289c                sys_get_ticks
                0x00000000000028a6                sys_write
                0x00000000000028f7                milli_delay
                0x0000000000002933                TaskSys
                0x00000000000029a0                Printf
                0x00000000000029fe                vsprintf
                0x0000000000002baa                printx
                0x0000000000002bed                sys_printx
                0x0000000000002ccc                spin
                0x0000000000002cd1                panic
                0x0000000000002cef                assertion_failure
                0x0000000000002d26                dead_lock
                0x0000000000002d30                sys_send_msg
                0x0000000000003096                sys_receive_msg
                0x0000000000003555                disp_str_colour_debug
                0x000000000000355b                send_rec
                0x0000000000003641                block
                0x0000000000003653                unblock
                0x000000000000368a                get_ticks_ipc
                0x00000000000036d5                itoa
                0x000000000000372b                i2a
                0x0000000000003791                inform_int
                0x000000000000384a                strcmp
 .text          0x00000000000038b9      0xc69 hd.o
                0x00000000000038b9                TaskHD
                0x00000000000038cb                init_hd
                0x00000000000038e5                hd_handle
                0x00000000000039aa                hd_cmd_out
                0x0000000000003aac                hd_identify
                0x0000000000003b63                print_hdinfo
                0x0000000000003cf1                print_dpt_entry
                0x0000000000003d5d                get_partition_table
                0x0000000000003e3c                partition
                0x0000000000004056                hd_open
                0x00000000000040a5                get_hd_ioctl
                0x00000000000040fe                wait_for
                0x000000000000412f                interrupt_wait
                0x000000000000414e                hd_rdwt
                0x0000000000004380                hd_handler
                0x00000000000043ac                waitfor
                0x00000000000043fd                print_hd_info
                0x00000000000044ea                is_empty
 *fill*         0x0000000000004522        0xe 
 .text          0x0000000000004530       0x74 syscall.o
                0x0000000000004530                get_ticks
                0x0000000000004538                write2
                0x0000000000004548                write_debug
                0x0000000000004568                send_msg
                0x000000000000458e                receive_msg
 .text          0x00000000000045a4     0x1ec8 fs_main.o
                0x00000000000045a4                task_fs
                0x00000000000046df                rd_wt
                0x0000000000004783                mkfs
                0x0000000000004d43                init_fs
                0x0000000000004d72                do_open
                0x0000000000004f53                search_file
                0x0000000000005083                strip_path
                0x000000000000514f                get_inode
                0x0000000000005311                create_file
                0x000000000000541c                alloc_imap_bit
                0x0000000000005519                alloc_smap_bit
                0x00000000000056ba                new_inode
                0x00000000000057d8                new_dir_entry
                0x00000000000059e0                do_unlink
                0x0000000000005eb0                do_rdwt
                0x0000000000006220                sync_inode
                0x0000000000006374                put_inode
                0x00000000000063b2                do_close
                0x0000000000006404                get_super_block
 .text          0x000000000000646c        0x0 global.o
 .text          0x000000000000646c      0x1e7 process.o
                0x000000000000646c                check
                0x00000000000064e1                schedule_process
                0x000000000000658f                clock_handler
                0x0000000000006618                pid2proc
                0x0000000000006634                proc2pid
 .text          0x0000000000006653      0x39c protect.o
                0x0000000000006653                InitDescriptor
                0x00000000000066c0                Seg2PhyAddr
                0x0000000000006701                Seg2PhyAddrLDT
                0x0000000000006745                VirAddr2PhyAddr
                0x000000000000675b                v2l
                0x000000000000679e                init_propt
                0x0000000000006908                InitInterruptDesc
                0x0000000000006964                ReloadGDT
 .text          0x00000000000069ef      0xa28 console.o
                0x00000000000069ef                select_console
                0x0000000000006a2b                flush
                0x0000000000006a64                set_cursor
                0x0000000000006ac2                set_console_start_video_addr
                0x0000000000006b20                put_key
                0x0000000000006b8c                scroll_up
                0x0000000000006bce                scroll_down
                0x0000000000006c39                out_char
                0x0000000000006de0                tty_dev_read
                0x0000000000006e0a                tty_dev_write
                0x0000000000007011                tty_do_read
                0x00000000000070a2                tty_do_write
                0x00000000000071ea                init_screen
                0x000000000000727e                init_tty
                0x0000000000007318                TaskTTY
 .text          0x0000000000007417      0x407 keyboard.o
                0x0000000000007417                keyboard_handler
                0x0000000000007499                read_from_keyboard_buf
                0x00000000000074f9                keyboard_read
                0x0000000000007678                init_keyboard_handler
                0x000000000000768c                in_process
 .text          0x000000000000781e       0x55 open.o
                0x000000000000781e                open
 .text          0x0000000000007873       0x37 read.o
                0x0000000000007873                read
 .text          0x00000000000078aa       0x37 write.o
                0x00000000000078aa                write
 .text          0x00000000000078e1       0x4c close.o
                0x00000000000078e1                close
 .text          0x000000000000792d       0x3e wait.o
                0x000000000000792d                wait
 .text          0x000000000000796b       0x29 exit.o
                0x000000000000796b                exit
 .text          0x0000000000007994       0x5f fork.o
                0x0000000000007994                fork
 .text          0x00000000000079f3       0x25 getpid.o
                0x00000000000079f3                getpid
 .text          0x0000000000007a18      0x235 exec.o
                0x0000000000007a18                exec
                0x0000000000007a83                execv
                0x0000000000007c28                execl
 .text          0x0000000000007c4d      0x130 mm/main.o
                0x0000000000007c4d                TaskMM
                0x0000000000007d5e                alloc_mem
 .text          0x0000000000007d7d      0x344 mm/exec.o
                0x0000000000007d7d                do_exec2
                0x0000000000007d91                do_exec
 .text          0x00000000000080c1      0x424 mm/forkexit.o
                0x00000000000080c1                do_fork
                0x00000000000082cb                do_exit
                0x00000000000083c7                do_wait
                0x0000000000008491                cleanup
 .text          0x00000000000084e5      0x5de mem/mem.o
                0x00000000000084e5                test_bit_val
                0x000000000000854e                set_bit_val
                0x00000000000085b9                set_bits
                0x00000000000085f3                get_first_free_bit
                0x0000000000008637                get_bits
                0x00000000000086e9                get_a_page
                0x0000000000008778                get_virtual_address
                0x00000000000087d5                ptr_pde
                0x00000000000087e8                ptr_pte
                0x0000000000008810                add_map_entry
                0x0000000000008889                alloc_memory
                0x00000000000088da                init_memory
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x0000000000008ae0      0x9f3
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000008ae0      0x6b1 kernel_main.o
 .rodata        0x0000000000009191      0x10e hd.o
 *fill*         0x000000000000929f        0x1 
 .rodata        0x00000000000092a0      0x173 fs_main.o
                0x00000000000092a0                FSBUF_SIZE
 .rodata        0x0000000000009413        0x6 process.o
 .rodata        0x0000000000009419       0x24 close.o
 .rodata        0x000000000000943d       0x1b fork.o
 .rodata        0x0000000000009458       0x31 exec.o
 .rodata        0x0000000000009489       0x11 mm/main.o
 *fill*         0x000000000000949a        0x2 
 .rodata        0x000000000000949c       0x37 mm/forkexit.o

.txt            0x00000000000094d3       0xaa
 .txt           0x00000000000094d3       0x82 string.o
                0x00000000000094d3                Memcpy
                0x0000000000009501                Memset
                0x0000000000009520                Strcpy
                0x000000000000953a                Strlen
 .txt           0x0000000000009555       0x28 hd_rdwt.o
                0x0000000000009555                read_port
                0x0000000000009569                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000009580     0x12bc
 *(.eh_frame)
 .eh_frame      0x0000000000009580      0x5cc kernel_main.o
 .eh_frame      0x0000000000009b4c      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x0000000000009d90      0x288 fs_main.o
                                        0x2a0 (size before relaxing)
 .eh_frame      0x000000000000a018       0xa0 process.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x000000000000a0b8      0x104 protect.o
                                        0x11c (size before relaxing)
 .eh_frame      0x000000000000a1bc      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x000000000000a39c       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x000000000000a43c       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a45c       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a47c       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a49c       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a4bc       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a4dc       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a4fc       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a51c       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a53c       0x64 exec.o
                                         0x7c (size before relaxing)
 .eh_frame      0x000000000000a5a0       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x000000000000a5dc       0x4c mm/exec.o
                                         0x64 (size before relaxing)
 .eh_frame      0x000000000000a628       0x90 mm/forkexit.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x000000000000a6b8      0x184 mem/mem.o
                                        0x19c (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x000000000000c000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x000000000000c000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x000000000000c000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x000000000000c000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x000000000000c000        0x0
 *(.got)
 .got           0x000000000000c000        0x0 kernel_sub.o
 *(.igot)
                0x000000000000c000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x000000000000c000        0x0
 *(.got.plt)
 .got.plt       0x000000000000c000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x000000000000c000        0x0 kernel_sub.o

.data           0x000000000000c000      0x700
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x000000000000c000        0xf kernel_sub.o
 *fill*         0x000000000000c00f        0x1 
 .data          0x000000000000c010        0xf kernel.o
 .data          0x000000000000c01f        0x0 kernel_main.o
 .data          0x000000000000c01f        0x0 hd.o
 *fill*         0x000000000000c01f        0x1 
 .data          0x000000000000c020        0x0 syscall.o
 .data          0x000000000000c020        0x8 fs_main.o
                0x000000000000c020                fsbuf
                0x000000000000c024                super_block_buf
 *fill*         0x000000000000c028       0x18 
 .data          0x000000000000c040       0xc0 global.o
                0x000000000000c040                user_task_table
                0x000000000000c060                sys_task_table
                0x000000000000c0ec                sys_call_table
 .data          0x000000000000c100        0x0 process.o
 .data          0x000000000000c100        0x0 protect.o
 .data          0x000000000000c100        0x0 console.o
 .data          0x000000000000c100      0x600 keyboard.o
                0x000000000000c100                keymap
 .data          0x000000000000c700        0x0 open.o
 .data          0x000000000000c700        0x0 read.o
 .data          0x000000000000c700        0x0 write.o
 .data          0x000000000000c700        0x0 close.o
 .data          0x000000000000c700        0x0 wait.o
 .data          0x000000000000c700        0x0 exit.o
 .data          0x000000000000c700        0x0 fork.o
 .data          0x000000000000c700        0x0 getpid.o
 .data          0x000000000000c700        0x0 exec.o
 .data          0x000000000000c700        0x0 mm/main.o
 .data          0x000000000000c700        0x0 mm/exec.o
 .data          0x000000000000c700        0x0 mm/forkexit.o
 .data          0x000000000000c700        0x0 mem/mem.o

.data1
 *(.data1)
                0x000000000000c700                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x000000000000c700                . = .
                0x000000000000c700                __bss_start = .

.bss            0x000000000000c700    0x78840
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x000000000000c700      0x800 kernel_sub.o
 .bss           0x000000000000cf00      0x800 kernel.o
 .bss           0x000000000000d700        0x0 kernel_main.o
 .bss           0x000000000000d700        0x0 hd.o
 .bss           0x000000000000d700        0x4 fs_main.o
                0x000000000000d700                c
 .bss           0x000000000000d704        0x0 global.o
 .bss           0x000000000000d704        0x0 process.o
 .bss           0x000000000000d704        0x0 protect.o
 .bss           0x000000000000d704        0x0 console.o
 .bss           0x000000000000d704        0x0 keyboard.o
 .bss           0x000000000000d704        0x0 open.o
 .bss           0x000000000000d704        0x0 read.o
 .bss           0x000000000000d704        0x0 write.o
 .bss           0x000000000000d704        0x0 close.o
 .bss           0x000000000000d704        0x0 wait.o
 .bss           0x000000000000d704        0x0 exit.o
 .bss           0x000000000000d704        0x0 fork.o
 .bss           0x000000000000d704        0x0 getpid.o
 .bss           0x000000000000d704        0x0 exec.o
 .bss           0x000000000000d704        0x0 mm/main.o
 .bss           0x000000000000d704        0x0 mm/exec.o
 .bss           0x000000000000d704        0x0 mm/forkexit.o
 .bss           0x000000000000d704        0x0 mem/mem.o
 *(COMMON)
 *fill*         0x000000000000d704       0x1c 
 COMMON         0x000000000000d720     0x27d1 kernel_main.o
                0x000000000000d720                current_tty
                0x000000000000d724                is_e0
                0x000000000000d728                idt_ptr
                0x000000000000d730                KernelVirtualMemory
                0x000000000000d738                dis_pos
                0x000000000000d73c                k_reenter
                0x000000000000d740                gdt
                0x000000000000db40                proc_ready_table
                0x000000000000db44                pcaller
                0x000000000000db60                keyboard_buffer
                0x000000000000dd80                tty_table
                0x000000000000f600                tss
                0x000000000000f66c                KernelPool
                0x000000000000f67c                counter
                0x000000000000f680                key_pressed
                0x000000000000f684                is_shift
                0x000000000000f688                gdt_ptr
                0x000000000000f6a0                idt
                0x000000000000fea0                ticks
                0x000000000000fea4                UserPool
                0x000000000000fec0                console_table
                0x000000000000fef0                is_disp
 *fill*         0x000000000000fef1        0xf 
 COMMON         0x000000000000ff00      0x440 hd.o
                0x000000000000ff00                hd_info
                0x0000000000010140                hd_cache
 COMMON         0x0000000000010340      0xe28 fs_main.o
                0x0000000000010340                file_desc_table
                0x0000000000010740                inode_table
                0x0000000000011140                root
 *fill*         0x0000000000011168       0x18 
 COMMON         0x0000000000011180    0x73dc0 global.o
                0x0000000000011180                proc_stack
                0x0000000000081180                proc_table
                0x0000000000084f40                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000084f40                . = ALIGN (0x4)
                0x0000000000084f40                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000084f40                . = ALIGN (0x4)
                0x0000000000084f40                _end = .
                [!provide]                        PROVIDE (end = .)
                0x0000000000084f40                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o
 .comment       0x000000000000002c       0x2d mem/mem.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x298
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel_main.o
 .debug_aranges
                0x0000000000000020       0x20 hd.o
 .debug_aranges
                0x0000000000000040       0x20 fs_main.o
 .debug_aranges
                0x0000000000000060       0x18 global.o
 .debug_aranges
                0x0000000000000078       0x20 process.o
 .debug_aranges
                0x0000000000000098       0x20 protect.o
 .debug_aranges
                0x00000000000000b8       0x20 console.o
 .debug_aranges
                0x00000000000000d8       0x20 keyboard.o
 .debug_aranges
                0x00000000000000f8       0x20 open.o
 .debug_aranges
                0x0000000000000118       0x20 read.o
 .debug_aranges
                0x0000000000000138       0x20 write.o
 .debug_aranges
                0x0000000000000158       0x20 close.o
 .debug_aranges
                0x0000000000000178       0x20 wait.o
 .debug_aranges
                0x0000000000000198       0x20 exit.o
 .debug_aranges
                0x00000000000001b8       0x20 fork.o
 .debug_aranges
                0x00000000000001d8       0x20 getpid.o
 .debug_aranges
                0x00000000000001f8       0x20 exec.o
 .debug_aranges
                0x0000000000000218       0x20 mm/main.o
 .debug_aranges
                0x0000000000000238       0x20 mm/exec.o
 .debug_aranges
                0x0000000000000258       0x20 mm/forkexit.o
 .debug_aranges
                0x0000000000000278       0x20 mem/mem.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000    0x12dca
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000     0x2310 kernel_main.o
 .debug_info    0x0000000000002310     0x13ca hd.o
 .debug_info    0x00000000000036da     0x1b8f fs_main.o
 .debug_info    0x0000000000005269      0xb0b global.o
 .debug_info    0x0000000000005d74      0xbbb process.o
 .debug_info    0x000000000000692f      0xe18 protect.o
 .debug_info    0x0000000000007747      0xe95 console.o
 .debug_info    0x00000000000085dc      0xc69 keyboard.o
 .debug_info    0x0000000000009245      0xb1c open.o
 .debug_info    0x0000000000009d61      0xb22 read.o
 .debug_info    0x000000000000a883      0xb2b write.o
 .debug_info    0x000000000000b3ae      0xb02 close.o
 .debug_info    0x000000000000beb0      0xb0d wait.o
 .debug_info    0x000000000000c9bd      0xaff exit.o
 .debug_info    0x000000000000d4bc      0xaf4 fork.o
 .debug_info    0x000000000000dfb0      0xaf4 getpid.o
 .debug_info    0x000000000000eaa4      0xc51 exec.o
 .debug_info    0x000000000000f6f5      0xb0b mm/main.o
 .debug_info    0x0000000000010200      0xdf5 mm/exec.o
 .debug_info    0x0000000000010ff5      0xd5f mm/forkexit.o
 .debug_info    0x0000000000011d54     0x1076 mem/mem.o

.debug_abbrev   0x0000000000000000     0x26c0
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x388 kernel_main.o
 .debug_abbrev  0x0000000000000388      0x2bf hd.o
 .debug_abbrev  0x0000000000000647      0x2cb fs_main.o
 .debug_abbrev  0x0000000000000912      0x135 global.o
 .debug_abbrev  0x0000000000000a47      0x1df process.o
 .debug_abbrev  0x0000000000000c26      0x1f0 protect.o
 .debug_abbrev  0x0000000000000e16      0x257 console.o
 .debug_abbrev  0x000000000000106d      0x1d9 keyboard.o
 .debug_abbrev  0x0000000000001246      0x16a open.o
 .debug_abbrev  0x00000000000013b0      0x180 read.o
 .debug_abbrev  0x0000000000001530      0x180 write.o
 .debug_abbrev  0x00000000000016b0      0x168 close.o
 .debug_abbrev  0x0000000000001818      0x16a wait.o
 .debug_abbrev  0x0000000000001982      0x166 exit.o
 .debug_abbrev  0x0000000000001ae8      0x155 fork.o
 .debug_abbrev  0x0000000000001c3d      0x155 getpid.o
 .debug_abbrev  0x0000000000001d92      0x19e exec.o
 .debug_abbrev  0x0000000000001f30      0x1be mm/main.o
 .debug_abbrev  0x00000000000020ee      0x1a9 mm/exec.o
 .debug_abbrev  0x0000000000002297      0x1e4 mm/forkexit.o
 .debug_abbrev  0x000000000000247b      0x245 mem/mem.o

.debug_line     0x0000000000000000     0x380f
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0xcb1 kernel_main.o
 .debug_line    0x0000000000000cb1      0x546 hd.o
 .debug_line    0x00000000000011f7      0xbca fs_main.o
 .debug_line    0x0000000000001dc1       0x80 global.o
 .debug_line    0x0000000000001e41      0x1b6 process.o
 .debug_line    0x0000000000001ff7      0x22e protect.o
 .debug_line    0x0000000000002225      0x51e console.o
 .debug_line    0x0000000000002743      0x275 keyboard.o
 .debug_line    0x00000000000029b8       0xb0 open.o
 .debug_line    0x0000000000002a68       0xa7 read.o
 .debug_line    0x0000000000002b0f       0xa8 write.o
 .debug_line    0x0000000000002bb7       0xad close.o
 .debug_line    0x0000000000002c64       0xb7 wait.o
 .debug_line    0x0000000000002d1b       0xa0 exit.o
 .debug_line    0x0000000000002dbb       0xae fork.o
 .debug_line    0x0000000000002e69       0xa0 getpid.o
 .debug_line    0x0000000000002f09      0x15b exec.o
 .debug_line    0x0000000000003064       0xe4 mm/main.o
 .debug_line    0x0000000000003148      0x1df mm/exec.o
 .debug_line    0x0000000000003327      0x202 mm/forkexit.o
 .debug_line    0x0000000000003529      0x2e6 mem/mem.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000     0x15d4
 *(.debug_str)
 .debug_str     0x0000000000000000      0x80d kernel_main.o
                                        0x8f0 (size before relaxing)
 .debug_str     0x000000000000080d      0x290 hd.o
                                        0x6df (size before relaxing)
 .debug_str     0x0000000000000a9d      0x437 fs_main.o
                                        0x899 (size before relaxing)
 .debug_str     0x0000000000000ed4        0x9 global.o
                                        0x3f1 (size before relaxing)
 .debug_str     0x0000000000000edd       0x50 process.o
                                        0x438 (size before relaxing)
 .debug_str     0x0000000000000f2d      0x102 protect.o
                                        0x521 (size before relaxing)
 .debug_str     0x000000000000102f      0x103 console.o
                                        0x4f7 (size before relaxing)
 .debug_str     0x0000000000001132       0x84 keyboard.o
                                        0x47d (size before relaxing)
 .debug_str     0x00000000000011b6        0xb open.o
                                        0x407 (size before relaxing)
 .debug_str     0x00000000000011c1        0xb read.o
                                        0x3fe (size before relaxing)
 .debug_str     0x00000000000011cc        0xc write.o
                                        0x400 (size before relaxing)
 .debug_str     0x00000000000011d8        0xc close.o
                                        0x3fa (size before relaxing)
 .debug_str     0x00000000000011e4        0xb wait.o
                                        0x3ff (size before relaxing)
 .debug_str     0x00000000000011ef        0xb exit.o
                                        0x3ff (size before relaxing)
 .debug_str     0x00000000000011fa        0xb fork.o
                                        0x3f8 (size before relaxing)
 .debug_str     0x0000000000001205       0x14 getpid.o
                                        0x3fc (size before relaxing)
 .debug_str     0x0000000000001219       0x1a exec.o
                                        0x421 (size before relaxing)
 .debug_str     0x0000000000001233       0x32 mm/main.o
                                        0x3ec (size before relaxing)
 .debug_str     0x0000000000001265      0x17b mm/exec.o
                                        0x56c (size before relaxing)
 .debug_str     0x00000000000013e0       0xb8 mm/forkexit.o
                                        0x4aa (size before relaxing)
 .debug_str     0x0000000000001498      0x13c mem/mem.o
                                        0x602 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x90
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x30 kernel_main.o
 .debug_ranges  0x0000000000000030       0x48 hd.o
 .debug_ranges  0x0000000000000078       0x18 mm/exec.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
