
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
idt_ptr             0x6               kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
tty_table           0x186c            kernel_main.o
tss                 0x6c              kernel_main.o
root                0x28              fs_main.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
ticks               0x4               kernel_main.o
console_table       0x30              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table          0x3dc0            global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0x1000
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x0000000000001000     0x77a5
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000001000       0x75 kernel_sub.o
                0x0000000000001000                _start
 *fill*         0x0000000000001075        0xb 
 .text          0x0000000000001080      0x341 kernel.o
                0x0000000000001080                InterruptTest
                0x000000000000108c                disp_str
                0x00000000000010c7                disp_str_colour
                0x0000000000001103                divide_zero_fault
                0x0000000000001109                single_step_fault
                0x000000000000110f                non_maskable_interrupt
                0x0000000000001115                breakpoint_trap
                0x000000000000111b                overflow_trap
                0x0000000000001121                bound_range_exceeded_fault
                0x0000000000001127                invalid_opcode_fault
                0x000000000000112d                coprocessor_not_available_fault
                0x0000000000001133                double_fault_exception_abort
                0x0000000000001137                coprocessor_segment_overrun
                0x000000000000113d                invalid_task_state_segment_fault
                0x0000000000001141                segment_not_present_fault
                0x0000000000001145                stack_exception_fault
                0x0000000000001149                general_protection_exception_fault
                0x000000000000114d                page_fault
                0x0000000000001151                coprocessor_error_fault
                0x0000000000001157                align_check_fault
                0x000000000000115b                simd_float_exception_fault
                0x000000000000116a                hwint0
                0x00000000000011b3                hwint1
                0x00000000000011fc                hwint14
                0x0000000000001245                sys_call
                0x000000000000128f                restart
                0x00000000000012d3                in_byte
                0x00000000000012df                out_byte
                0x0000000000001301                disable_int
                0x0000000000001303                enable_int
                0x0000000000001399                enable_8259A_casecade_irq
                0x00000000000013a3                disable_8259A_casecade_irq
                0x00000000000013ad                enable_8259A_slave_winchester_irq
                0x00000000000013b7                disable_8259A_slave_winchester_irq
 .text          0x00000000000013c1     0x27c2 kernel_main.o
                0x00000000000013c1                untar
                0x00000000000015cb                atoi
                0x0000000000001671                disp_int
                0x000000000000169a                exception_handler
                0x000000000000183b                init_internal_interrupt
                0x00000000000019b0                test
                0x00000000000019e6                disp_str_colour3
                0x00000000000019ec                spurious_irq
                0x0000000000001a65                kernel_main
                0x0000000000001dff                TestFS
                0x00000000000021d3                wait_exit
                0x00000000000022a1                INIT_fork
                0x0000000000002591                simple_shell
                0x0000000000002768                test_split_str
                0x00000000000028f5                test_shell
                0x00000000000029d3                test_exec
                0x0000000000002a9b                INIT
                0x0000000000002aa8                TestA
                0x0000000000002abd                delay
                0x0000000000002b04                TestB
                0x0000000000002b33                TestC
                0x0000000000002b66                sys_get_ticks
                0x0000000000002b70                sys_write
                0x0000000000002bc1                milli_delay
                0x0000000000002bfd                TaskSys
                0x0000000000002c6a                Printf
                0x0000000000002cc8                vsprintf
                0x0000000000002e74                printx
                0x0000000000002eb7                sys_printx
                0x0000000000002f96                spin
                0x0000000000002f9b                panic
                0x0000000000002fb9                assertion_failure
                0x0000000000002ff0                dead_lock
                0x0000000000002ffa                sys_send_msg
                0x0000000000003360                sys_receive_msg
                0x000000000000381f                disp_str_colour_debug
                0x0000000000003825                send_rec
                0x000000000000390b                block
                0x000000000000391d                unblock
                0x0000000000003954                get_ticks_ipc
                0x000000000000399f                itoa
                0x00000000000039f5                i2a
                0x0000000000003a5b                inform_int
                0x0000000000003b14                strcmp
 .text          0x0000000000003b83      0xc69 hd.o
                0x0000000000003b83                TaskHD
                0x0000000000003b95                init_hd
                0x0000000000003baf                hd_handle
                0x0000000000003c74                hd_cmd_out
                0x0000000000003d76                hd_identify
                0x0000000000003e2d                print_hdinfo
                0x0000000000003fbb                print_dpt_entry
                0x0000000000004027                get_partition_table
                0x0000000000004106                partition
                0x0000000000004320                hd_open
                0x000000000000436f                get_hd_ioctl
                0x00000000000043c8                wait_for
                0x00000000000043f9                interrupt_wait
                0x0000000000004418                hd_rdwt
                0x000000000000464a                hd_handler
                0x0000000000004676                waitfor
                0x00000000000046c7                print_hd_info
                0x00000000000047b4                is_empty
 *fill*         0x00000000000047ec        0x4 
 .text          0x00000000000047f0       0x74 syscall.o
                0x00000000000047f0                get_ticks
                0x00000000000047f8                write2
                0x0000000000004808                write_debug
                0x0000000000004828                send_msg
                0x000000000000484e                receive_msg
 .text          0x0000000000004864     0x1ec8 fs_main.o
                0x0000000000004864                task_fs
                0x000000000000499f                rd_wt
                0x0000000000004a43                mkfs
                0x0000000000005003                init_fs
                0x0000000000005032                do_open
                0x0000000000005213                search_file
                0x0000000000005343                strip_path
                0x000000000000540f                get_inode
                0x00000000000055d1                create_file
                0x00000000000056dc                alloc_imap_bit
                0x00000000000057d9                alloc_smap_bit
                0x000000000000597a                new_inode
                0x0000000000005a98                new_dir_entry
                0x0000000000005ca0                do_unlink
                0x0000000000006170                do_rdwt
                0x00000000000064e0                sync_inode
                0x0000000000006634                put_inode
                0x0000000000006672                do_close
                0x00000000000066c4                get_super_block
 .text          0x000000000000672c        0x0 global.o
 .text          0x000000000000672c      0x1e7 process.o
                0x000000000000672c                check
                0x00000000000067a1                schedule_process
                0x000000000000684f                clock_handler
                0x00000000000068d8                pid2proc
                0x00000000000068f4                proc2pid
 .text          0x0000000000006913      0x39c protect.o
                0x0000000000006913                InitDescriptor
                0x0000000000006980                Seg2PhyAddr
                0x00000000000069c1                Seg2PhyAddrLDT
                0x0000000000006a05                VirAddr2PhyAddr
                0x0000000000006a1b                v2l
                0x0000000000006a5e                init_propt
                0x0000000000006bc8                InitInterruptDesc
                0x0000000000006c24                ReloadGDT
 .text          0x0000000000006caf      0xa28 console.o
                0x0000000000006caf                select_console
                0x0000000000006ceb                flush
                0x0000000000006d24                set_cursor
                0x0000000000006d82                set_console_start_video_addr
                0x0000000000006de0                put_key
                0x0000000000006e4c                scroll_up
                0x0000000000006e8e                scroll_down
                0x0000000000006ef9                out_char
                0x00000000000070a0                tty_dev_read
                0x00000000000070ca                tty_dev_write
                0x00000000000072d1                tty_do_read
                0x0000000000007362                tty_do_write
                0x00000000000074aa                init_screen
                0x000000000000753e                init_tty
                0x00000000000075d8                TaskTTY
 .text          0x00000000000076d7      0x407 keyboard.o
                0x00000000000076d7                keyboard_handler
                0x0000000000007759                read_from_keyboard_buf
                0x00000000000077b9                keyboard_read
                0x0000000000007938                init_keyboard_handler
                0x000000000000794c                in_process
 .text          0x0000000000007ade       0x55 open.o
                0x0000000000007ade                open
 .text          0x0000000000007b33       0x37 read.o
                0x0000000000007b33                read
 .text          0x0000000000007b6a       0x37 write.o
                0x0000000000007b6a                write
 .text          0x0000000000007ba1       0x4c close.o
                0x0000000000007ba1                close
 .text          0x0000000000007bed       0x3e wait.o
                0x0000000000007bed                wait
 .text          0x0000000000007c2b       0x29 exit.o
                0x0000000000007c2b                exit
 .text          0x0000000000007c54       0x5f fork.o
                0x0000000000007c54                fork
 .text          0x0000000000007cb3       0x25 getpid.o
                0x0000000000007cb3                getpid
 .text          0x0000000000007cd8      0x235 exec.o
                0x0000000000007cd8                exec
                0x0000000000007d43                execv
                0x0000000000007ee8                execl
 .text          0x0000000000007f0d      0x130 mm/main.o
                0x0000000000007f0d                TaskMM
                0x000000000000801e                alloc_mem
 .text          0x000000000000803d      0x344 mm/exec.o
                0x000000000000803d                do_exec2
                0x0000000000008051                do_exec
 .text          0x0000000000008381      0x424 mm/forkexit.o
                0x0000000000008381                do_fork
                0x000000000000858b                do_exit
                0x0000000000008687                do_wait
                0x0000000000008751                cleanup
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000000087c0      0x9eb
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000000087c0      0x6a9 kernel_main.o
 .rodata        0x0000000000008e69      0x10e hd.o
 *fill*         0x0000000000008f77        0x1 
 .rodata        0x0000000000008f78      0x173 fs_main.o
                0x0000000000008f78                FSBUF_SIZE
 .rodata        0x00000000000090eb        0x6 process.o
 .rodata        0x00000000000090f1       0x24 close.o
 .rodata        0x0000000000009115       0x1b fork.o
 .rodata        0x0000000000009130       0x31 exec.o
 .rodata        0x0000000000009161       0x11 mm/main.o
 *fill*         0x0000000000009172        0x2 
 .rodata        0x0000000000009174       0x37 mm/forkexit.o

.txt            0x00000000000091ab       0xaa
 .txt           0x00000000000091ab       0x82 string.o
                0x00000000000091ab                Memcpy
                0x00000000000091d9                Memset
                0x00000000000091f8                Strcpy
                0x0000000000009212                Strlen
 .txt           0x000000000000922d       0x28 hd_rdwt.o
                0x000000000000922d                read_port
                0x0000000000009241                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000009258     0x10f8
 *(.eh_frame)
 .eh_frame      0x0000000000009258      0x58c kernel_main.o
 .eh_frame      0x00000000000097e4      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x0000000000009a28      0x288 fs_main.o
                                        0x2a0 (size before relaxing)
 .eh_frame      0x0000000000009cb0       0xa0 process.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x0000000000009d50      0x104 protect.o
                                        0x11c (size before relaxing)
 .eh_frame      0x0000000000009e54      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x000000000000a034       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x000000000000a0d4       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a0f4       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a114       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a134       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a154       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a174       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a194       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a1b4       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x000000000000a1d4       0x64 exec.o
                                         0x7c (size before relaxing)
 .eh_frame      0x000000000000a238       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x000000000000a274       0x4c mm/exec.o
                                         0x64 (size before relaxing)
 .eh_frame      0x000000000000a2c0       0x90 mm/forkexit.o
                                         0xa8 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x000000000000c000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x000000000000c000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x000000000000c000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x000000000000c000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x000000000000c000        0x0
 *(.got)
 .got           0x000000000000c000        0x0 kernel_sub.o
 *(.igot)
                0x000000000000c000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x000000000000c000        0x0
 *(.got.plt)
 .got.plt       0x000000000000c000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x000000000000c000        0x0 kernel_sub.o

.data           0x000000000000c000      0x700
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x000000000000c000        0xf kernel_sub.o
 *fill*         0x000000000000c00f        0x1 
 .data          0x000000000000c010        0xf kernel.o
 .data          0x000000000000c01f        0x0 kernel_main.o
 .data          0x000000000000c01f        0x0 hd.o
 *fill*         0x000000000000c01f        0x1 
 .data          0x000000000000c020        0x0 syscall.o
 .data          0x000000000000c020        0x8 fs_main.o
                0x000000000000c020                fsbuf
                0x000000000000c024                super_block_buf
 *fill*         0x000000000000c028       0x18 
 .data          0x000000000000c040       0xc0 global.o
                0x000000000000c040                user_task_table
                0x000000000000c060                sys_task_table
                0x000000000000c0ec                sys_call_table
 .data          0x000000000000c100        0x0 process.o
 .data          0x000000000000c100        0x0 protect.o
 .data          0x000000000000c100        0x0 console.o
 .data          0x000000000000c100      0x600 keyboard.o
                0x000000000000c100                keymap
 .data          0x000000000000c700        0x0 open.o
 .data          0x000000000000c700        0x0 read.o
 .data          0x000000000000c700        0x0 write.o
 .data          0x000000000000c700        0x0 close.o
 .data          0x000000000000c700        0x0 wait.o
 .data          0x000000000000c700        0x0 exit.o
 .data          0x000000000000c700        0x0 fork.o
 .data          0x000000000000c700        0x0 getpid.o
 .data          0x000000000000c700        0x0 exec.o
 .data          0x000000000000c700        0x0 mm/main.o
 .data          0x000000000000c700        0x0 mm/exec.o
 .data          0x000000000000c700        0x0 mm/forkexit.o

.data1
 *(.data1)
                0x000000000000c700                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x000000000000c700                . = .
                0x000000000000c700                __bss_start = .

.bss            0x000000000000c700    0x78820
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x000000000000c700      0x800 kernel_sub.o
 .bss           0x000000000000cf00      0x800 kernel.o
 .bss           0x000000000000d700        0x0 kernel_main.o
 .bss           0x000000000000d700        0x0 hd.o
 .bss           0x000000000000d700        0x4 fs_main.o
                0x000000000000d700                c
 .bss           0x000000000000d704        0x0 global.o
 .bss           0x000000000000d704        0x0 process.o
 .bss           0x000000000000d704        0x0 protect.o
 .bss           0x000000000000d704        0x0 console.o
 .bss           0x000000000000d704        0x0 keyboard.o
 .bss           0x000000000000d704        0x0 open.o
 .bss           0x000000000000d704        0x0 read.o
 .bss           0x000000000000d704        0x0 write.o
 .bss           0x000000000000d704        0x0 close.o
 .bss           0x000000000000d704        0x0 wait.o
 .bss           0x000000000000d704        0x0 exit.o
 .bss           0x000000000000d704        0x0 fork.o
 .bss           0x000000000000d704        0x0 getpid.o
 .bss           0x000000000000d704        0x0 exec.o
 .bss           0x000000000000d704        0x0 mm/main.o
 .bss           0x000000000000d704        0x0 mm/exec.o
 .bss           0x000000000000d704        0x0 mm/forkexit.o
 *(COMMON)
 *fill*         0x000000000000d704       0x1c 
 COMMON         0x000000000000d720     0x27b1 kernel_main.o
                0x000000000000d720                current_tty
                0x000000000000d724                is_e0
                0x000000000000d728                idt_ptr
                0x000000000000d730                dis_pos
                0x000000000000d734                k_reenter
                0x000000000000d740                gdt
                0x000000000000db40                proc_ready_table
                0x000000000000db44                pcaller
                0x000000000000db60                keyboard_buffer
                0x000000000000dd80                tty_table
                0x000000000000f600                tss
                0x000000000000f66c                counter
                0x000000000000f670                key_pressed
                0x000000000000f674                is_shift
                0x000000000000f678                gdt_ptr
                0x000000000000f680                idt
                0x000000000000fe80                ticks
                0x000000000000fea0                console_table
                0x000000000000fed0                is_disp
 *fill*         0x000000000000fed1        0xf 
 COMMON         0x000000000000fee0      0x440 hd.o
                0x000000000000fee0                hd_info
                0x0000000000010120                hd_cache
 COMMON         0x0000000000010320      0xe28 fs_main.o
                0x0000000000010320                file_desc_table
                0x0000000000010720                inode_table
                0x0000000000011120                root
 *fill*         0x0000000000011148       0x18 
 COMMON         0x0000000000011160    0x73dc0 global.o
                0x0000000000011160                proc_stack
                0x0000000000081160                proc_table
                0x0000000000084f20                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000084f20                . = ALIGN (0x4)
                0x0000000000084f20                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000084f20                . = ALIGN (0x4)
                0x0000000000084f20                _end = .
                [!provide]                        PROVIDE (end = .)
                0x0000000000084f20                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x278
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel_main.o
 .debug_aranges
                0x0000000000000020       0x20 hd.o
 .debug_aranges
                0x0000000000000040       0x20 fs_main.o
 .debug_aranges
                0x0000000000000060       0x18 global.o
 .debug_aranges
                0x0000000000000078       0x20 process.o
 .debug_aranges
                0x0000000000000098       0x20 protect.o
 .debug_aranges
                0x00000000000000b8       0x20 console.o
 .debug_aranges
                0x00000000000000d8       0x20 keyboard.o
 .debug_aranges
                0x00000000000000f8       0x20 open.o
 .debug_aranges
                0x0000000000000118       0x20 read.o
 .debug_aranges
                0x0000000000000138       0x20 write.o
 .debug_aranges
                0x0000000000000158       0x20 close.o
 .debug_aranges
                0x0000000000000178       0x20 wait.o
 .debug_aranges
                0x0000000000000198       0x20 exit.o
 .debug_aranges
                0x00000000000001b8       0x20 fork.o
 .debug_aranges
                0x00000000000001d8       0x20 getpid.o
 .debug_aranges
                0x00000000000001f8       0x20 exec.o
 .debug_aranges
                0x0000000000000218       0x20 mm/main.o
 .debug_aranges
                0x0000000000000238       0x20 mm/exec.o
 .debug_aranges
                0x0000000000000258       0x20 mm/forkexit.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000    0x11c22
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000     0x21de kernel_main.o
 .debug_info    0x00000000000021de     0x13ca hd.o
 .debug_info    0x00000000000035a8     0x1b8f fs_main.o
 .debug_info    0x0000000000005137      0xb0b global.o
 .debug_info    0x0000000000005c42      0xbbb process.o
 .debug_info    0x00000000000067fd      0xe18 protect.o
 .debug_info    0x0000000000007615      0xe95 console.o
 .debug_info    0x00000000000084aa      0xc69 keyboard.o
 .debug_info    0x0000000000009113      0xb1c open.o
 .debug_info    0x0000000000009c2f      0xb22 read.o
 .debug_info    0x000000000000a751      0xb2b write.o
 .debug_info    0x000000000000b27c      0xb02 close.o
 .debug_info    0x000000000000bd7e      0xb0d wait.o
 .debug_info    0x000000000000c88b      0xaff exit.o
 .debug_info    0x000000000000d38a      0xaf4 fork.o
 .debug_info    0x000000000000de7e      0xaf4 getpid.o
 .debug_info    0x000000000000e972      0xc51 exec.o
 .debug_info    0x000000000000f5c3      0xb0b mm/main.o
 .debug_info    0x00000000000100ce      0xdf5 mm/exec.o
 .debug_info    0x0000000000010ec3      0xd5f mm/forkexit.o

.debug_abbrev   0x0000000000000000     0x243b
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x348 kernel_main.o
 .debug_abbrev  0x0000000000000348      0x2bf hd.o
 .debug_abbrev  0x0000000000000607      0x2cb fs_main.o
 .debug_abbrev  0x00000000000008d2      0x135 global.o
 .debug_abbrev  0x0000000000000a07      0x1df process.o
 .debug_abbrev  0x0000000000000be6      0x1f0 protect.o
 .debug_abbrev  0x0000000000000dd6      0x257 console.o
 .debug_abbrev  0x000000000000102d      0x1d9 keyboard.o
 .debug_abbrev  0x0000000000001206      0x16a open.o
 .debug_abbrev  0x0000000000001370      0x180 read.o
 .debug_abbrev  0x00000000000014f0      0x180 write.o
 .debug_abbrev  0x0000000000001670      0x168 close.o
 .debug_abbrev  0x00000000000017d8      0x16a wait.o
 .debug_abbrev  0x0000000000001942      0x166 exit.o
 .debug_abbrev  0x0000000000001aa8      0x155 fork.o
 .debug_abbrev  0x0000000000001bfd      0x155 getpid.o
 .debug_abbrev  0x0000000000001d52      0x19e exec.o
 .debug_abbrev  0x0000000000001ef0      0x1be mm/main.o
 .debug_abbrev  0x00000000000020ae      0x1a9 mm/exec.o
 .debug_abbrev  0x0000000000002257      0x1e4 mm/forkexit.o

.debug_line     0x0000000000000000     0x3620
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0xda8 kernel_main.o
 .debug_line    0x0000000000000da8      0x546 hd.o
 .debug_line    0x00000000000012ee      0xbca fs_main.o
 .debug_line    0x0000000000001eb8       0x80 global.o
 .debug_line    0x0000000000001f38      0x1b6 process.o
 .debug_line    0x00000000000020ee      0x22e protect.o
 .debug_line    0x000000000000231c      0x51e console.o
 .debug_line    0x000000000000283a      0x275 keyboard.o
 .debug_line    0x0000000000002aaf       0xb0 open.o
 .debug_line    0x0000000000002b5f       0xa7 read.o
 .debug_line    0x0000000000002c06       0xa8 write.o
 .debug_line    0x0000000000002cae       0xad close.o
 .debug_line    0x0000000000002d5b       0xb7 wait.o
 .debug_line    0x0000000000002e12       0xa0 exit.o
 .debug_line    0x0000000000002eb2       0xae fork.o
 .debug_line    0x0000000000002f60       0xa0 getpid.o
 .debug_line    0x0000000000003000      0x15b exec.o
 .debug_line    0x000000000000315b       0xe4 mm/main.o
 .debug_line    0x000000000000323f      0x1df mm/exec.o
 .debug_line    0x000000000000341e      0x202 mm/forkexit.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000     0x144e
 *(.debug_str)
 .debug_str     0x0000000000000000      0x7c9 kernel_main.o
                                        0x87c (size before relaxing)
 .debug_str     0x00000000000007c9      0x290 hd.o
                                        0x6df (size before relaxing)
 .debug_str     0x0000000000000a59      0x437 fs_main.o
                                        0x899 (size before relaxing)
 .debug_str     0x0000000000000e90        0x9 global.o
                                        0x3f1 (size before relaxing)
 .debug_str     0x0000000000000e99       0x50 process.o
                                        0x438 (size before relaxing)
 .debug_str     0x0000000000000ee9      0x102 protect.o
                                        0x521 (size before relaxing)
 .debug_str     0x0000000000000feb      0x103 console.o
                                        0x4f7 (size before relaxing)
 .debug_str     0x00000000000010ee       0x84 keyboard.o
                                        0x47d (size before relaxing)
 .debug_str     0x0000000000001172        0xb open.o
                                        0x407 (size before relaxing)
 .debug_str     0x000000000000117d        0xb read.o
                                        0x3fe (size before relaxing)
 .debug_str     0x0000000000001188        0xc write.o
                                        0x400 (size before relaxing)
 .debug_str     0x0000000000001194        0xc close.o
                                        0x3fa (size before relaxing)
 .debug_str     0x00000000000011a0        0xb wait.o
                                        0x3ff (size before relaxing)
 .debug_str     0x00000000000011ab        0xb exit.o
                                        0x3ff (size before relaxing)
 .debug_str     0x00000000000011b6        0xb fork.o
                                        0x3f8 (size before relaxing)
 .debug_str     0x00000000000011c1       0x14 getpid.o
                                        0x3fc (size before relaxing)
 .debug_str     0x00000000000011d5       0x26 exec.o
                                        0x421 (size before relaxing)
 .debug_str     0x00000000000011fb       0x3a mm/main.o
                                        0x3ec (size before relaxing)
 .debug_str     0x0000000000001235      0x17b mm/exec.o
                                        0x56c (size before relaxing)
 .debug_str     0x00000000000013b0       0x9e mm/forkexit.o
                                        0x4aa (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x90
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x30 kernel_main.o
 .debug_ranges  0x0000000000000030       0x48 hd.o
 .debug_ranges  0x0000000000000078       0x18 mm/exec.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
