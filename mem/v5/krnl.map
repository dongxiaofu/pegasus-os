
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
idt_ptr             0x6               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
tty_table           0x186c            kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
root                0x28              fs_main.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
ticks               0x4               kernel_main.o
UserPool            0x10              kernel_main.o
console_table       0x30              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table          0x3ef0            global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mem/mem.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x804d
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0x78 kernel_sub.o
                0x00000000c0001500                _start
 *fill*         0x00000000c0001578        0x8 
 .text          0x00000000c0001580      0x341 kernel.o
                0x00000000c0001580                InterruptTest
                0x00000000c000158c                disp_str
                0x00000000c00015c7                disp_str_colour
                0x00000000c0001603                divide_zero_fault
                0x00000000c0001609                single_step_fault
                0x00000000c000160f                non_maskable_interrupt
                0x00000000c0001615                breakpoint_trap
                0x00000000c000161b                overflow_trap
                0x00000000c0001621                bound_range_exceeded_fault
                0x00000000c0001627                invalid_opcode_fault
                0x00000000c000162d                coprocessor_not_available_fault
                0x00000000c0001633                double_fault_exception_abort
                0x00000000c0001637                coprocessor_segment_overrun
                0x00000000c000163d                invalid_task_state_segment_fault
                0x00000000c0001641                segment_not_present_fault
                0x00000000c0001645                stack_exception_fault
                0x00000000c0001649                general_protection_exception_fault
                0x00000000c000164d                page_fault
                0x00000000c0001651                coprocessor_error_fault
                0x00000000c0001657                align_check_fault
                0x00000000c000165b                simd_float_exception_fault
                0x00000000c000166a                hwint0
                0x00000000c00016b3                hwint1
                0x00000000c00016fc                hwint14
                0x00000000c0001745                sys_call
                0x00000000c000178f                restart
                0x00000000c00017d3                in_byte
                0x00000000c00017df                out_byte
                0x00000000c0001801                disable_int
                0x00000000c0001803                enable_int
                0x00000000c0001899                enable_8259A_casecade_irq
                0x00000000c00018a3                disable_8259A_casecade_irq
                0x00000000c00018ad                enable_8259A_slave_winchester_irq
                0x00000000c00018b7                disable_8259A_slave_winchester_irq
 .text          0x00000000c00018c1     0x2811 kernel_main.o
                0x00000000c00018c1                untar
                0x00000000c0001acb                atoi
                0x00000000c0001b71                disp_int
                0x00000000c0001b9a                exception_handler
                0x00000000c0001d3b                init_internal_interrupt
                0x00000000c0001eb0                test
                0x00000000c0001ee6                disp_str_colour3
                0x00000000c0001eec                spurious_irq
                0x00000000c0001f65                init_keyboard
                0x00000000c0001fe2                init
                0x00000000c0002013                kernel_main
                0x00000000c000234b                TestFS
                0x00000000c000271f                wait_exit
                0x00000000c00027ed                INIT_fork
                0x00000000c0002add                simple_shell
                0x00000000c0002cb4                test_split_str
                0x00000000c0002e41                test_shell
                0x00000000c0002f1f                test_exec
                0x00000000c0002fe7                INIT
                0x00000000c0002ff4                TestA
                0x00000000c0002ffc                delay
                0x00000000c0003043                TestB
                0x00000000c0003072                TestC
                0x00000000c00030a5                sys_get_ticks
                0x00000000c00030af                sys_write
                0x00000000c0003100                milli_delay
                0x00000000c000313c                TaskSys
                0x00000000c00031b9                Printf
                0x00000000c0003217                vsprintf
                0x00000000c00033c3                printx
                0x00000000c0003406                sys_printx
                0x00000000c00034e5                spin
                0x00000000c00034ea                panic
                0x00000000c0003508                assertion_failure
                0x00000000c000353f                dead_lock
                0x00000000c0003549                sys_send_msg
                0x00000000c00038af                sys_receive_msg
                0x00000000c0003d6e                disp_str_colour_debug
                0x00000000c0003d74                send_rec
                0x00000000c0003e5a                block
                0x00000000c0003e6c                unblock
                0x00000000c0003ea3                get_ticks_ipc
                0x00000000c0003eee                itoa
                0x00000000c0003f44                i2a
                0x00000000c0003faa                inform_int
                0x00000000c0004063                strcmp
 .text          0x00000000c00040d2      0xc69 hd.o
                0x00000000c00040d2                TaskHD
                0x00000000c00040e4                init_hd
                0x00000000c00040fe                hd_handle
                0x00000000c00041c3                hd_cmd_out
                0x00000000c00042c5                hd_identify
                0x00000000c000437c                print_hdinfo
                0x00000000c000450a                print_dpt_entry
                0x00000000c0004576                get_partition_table
                0x00000000c0004655                partition
                0x00000000c000486f                hd_open
                0x00000000c00048be                get_hd_ioctl
                0x00000000c0004917                wait_for
                0x00000000c0004948                interrupt_wait
                0x00000000c0004967                hd_rdwt
                0x00000000c0004b99                hd_handler
                0x00000000c0004bc5                waitfor
                0x00000000c0004c16                print_hd_info
                0x00000000c0004d03                is_empty
 *fill*         0x00000000c0004d3b        0x5 
 .text          0x00000000c0004d40       0x74 syscall.o
                0x00000000c0004d40                get_ticks
                0x00000000c0004d48                write2
                0x00000000c0004d58                write_debug
                0x00000000c0004d78                send_msg
                0x00000000c0004d9e                receive_msg
 .text          0x00000000c0004db4     0x1ec8 fs_main.o
                0x00000000c0004db4                task_fs
                0x00000000c0004eef                rd_wt
                0x00000000c0004f93                mkfs
                0x00000000c0005553                init_fs
                0x00000000c0005582                do_open
                0x00000000c0005763                search_file
                0x00000000c0005893                strip_path
                0x00000000c000595f                get_inode
                0x00000000c0005b21                create_file
                0x00000000c0005c2c                alloc_imap_bit
                0x00000000c0005d29                alloc_smap_bit
                0x00000000c0005eca                new_inode
                0x00000000c0005fe8                new_dir_entry
                0x00000000c00061f0                do_unlink
                0x00000000c00066c0                do_rdwt
                0x00000000c0006a30                sync_inode
                0x00000000c0006b84                put_inode
                0x00000000c0006bc2                do_close
                0x00000000c0006c14                get_super_block
 .text          0x00000000c0006c7c        0x0 global.o
 .text          0x00000000c0006c7c      0x1ff process.o
                0x00000000c0006c7c                check
                0x00000000c0006cf1                schedule_process
                0x00000000c0006db7                clock_handler
                0x00000000c0006e40                pid2proc
                0x00000000c0006e5c                proc2pid
 .text          0x00000000c0006e7b      0x3a1 protect.o
                0x00000000c0006e7b                InitDescriptor
                0x00000000c0006ee8                Seg2PhyAddr
                0x00000000c0006f29                Seg2PhyAddrLDT
                0x00000000c0006f6d                VirAddr2PhyAddr
                0x00000000c0006f83                v2l
                0x00000000c0006fc6                init_propt
                0x00000000c0007135                InitInterruptDesc
                0x00000000c0007191                ReloadGDT
 .text          0x00000000c000721c      0xa28 console.o
                0x00000000c000721c                select_console
                0x00000000c0007258                flush
                0x00000000c0007291                set_cursor
                0x00000000c00072ef                set_console_start_video_addr
                0x00000000c000734d                put_key
                0x00000000c00073b9                scroll_up
                0x00000000c00073fb                scroll_down
                0x00000000c0007466                out_char
                0x00000000c000760d                tty_dev_read
                0x00000000c0007637                tty_dev_write
                0x00000000c000783e                tty_do_read
                0x00000000c00078cf                tty_do_write
                0x00000000c0007a17                init_screen
                0x00000000c0007aab                init_tty
                0x00000000c0007b45                TaskTTY
 .text          0x00000000c0007c44      0x407 keyboard.o
                0x00000000c0007c44                keyboard_handler
                0x00000000c0007cc6                read_from_keyboard_buf
                0x00000000c0007d26                keyboard_read
                0x00000000c0007ea5                init_keyboard_handler
                0x00000000c0007eb9                in_process
 .text          0x00000000c000804b       0x55 open.o
                0x00000000c000804b                open
 .text          0x00000000c00080a0       0x37 read.o
                0x00000000c00080a0                read
 .text          0x00000000c00080d7       0x37 write.o
                0x00000000c00080d7                write
 .text          0x00000000c000810e       0x4c close.o
                0x00000000c000810e                close
 .text          0x00000000c000815a       0x3e wait.o
                0x00000000c000815a                wait
 .text          0x00000000c0008198       0x29 exit.o
                0x00000000c0008198                exit
 .text          0x00000000c00081c1       0x5f fork.o
                0x00000000c00081c1                fork
 .text          0x00000000c0008220       0x25 getpid.o
                0x00000000c0008220                getpid
 .text          0x00000000c0008245      0x235 exec.o
                0x00000000c0008245                exec
                0x00000000c00082b0                execv
                0x00000000c0008455                execl
 .text          0x00000000c000847a      0x130 mm/main.o
                0x00000000c000847a                TaskMM
                0x00000000c000858b                alloc_mem
 .text          0x00000000c00085aa      0x344 mm/exec.o
                0x00000000c00085aa                do_exec2
                0x00000000c00085be                do_exec
 .text          0x00000000c00088ee      0x424 mm/forkexit.o
                0x00000000c00088ee                do_fork
                0x00000000c0008af8                do_exit
                0x00000000c0008bf4                do_wait
                0x00000000c0008cbe                cleanup
 .text          0x00000000c0008d12      0x83b mem/mem.o
                0x00000000c0008d12                test_bit_val
                0x00000000c0008d7b                set_bit_val
                0x00000000c0008df6                set_bits
                0x00000000c0008e30                get_first_free_bit
                0x00000000c0008e74                get_bits
                0x00000000c0008f2e                get_a_page2
                0x00000000c0008f5d                get_a_page
                0x00000000c0008fec                get_virtual_address
                0x00000000c000905d                ptr_pde
                0x00000000c0009070                ptr_pte
                0x00000000c0009097                add_map_entry
                0x00000000c000912b                get_physical_address
                0x00000000c000915d                alloc_memory
                0x00000000c00091b9                init_memory2
                0x00000000c0009430                init_memory
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c0009560      0xa01
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0009560      0x6bd kernel_main.o
 .rodata        0x00000000c0009c1d      0x10e hd.o
 *fill*         0x00000000c0009d2b        0x1 
 .rodata        0x00000000c0009d2c      0x173 fs_main.o
                0x00000000c0009d2c                FSBUF_SIZE
 .rodata        0x00000000c0009e9f        0x6 process.o
 .rodata        0x00000000c0009ea5       0x24 close.o
 .rodata        0x00000000c0009ec9       0x1b fork.o
 .rodata        0x00000000c0009ee4       0x31 exec.o
 .rodata        0x00000000c0009f15       0x11 mm/main.o
 *fill*         0x00000000c0009f26        0x2 
 .rodata        0x00000000c0009f28       0x37 mm/forkexit.o
 .rodata        0x00000000c0009f5f        0x2 mem/mem.o

.txt            0x00000000c0009f61       0xaa
 .txt           0x00000000c0009f61       0x82 string.o
                0x00000000c0009f61                Memcpy
                0x00000000c0009f8f                Memset
                0x00000000c0009fae                Strcpy
                0x00000000c0009fc8                Strlen
 .txt           0x00000000c0009fe3       0x28 hd_rdwt.o
                0x00000000c0009fe3                read_port
                0x00000000c0009ff7                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c000a00c     0x131c
 *(.eh_frame)
 .eh_frame      0x00000000c000a00c      0x5cc kernel_main.o
 .eh_frame      0x00000000c000a5d8      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x00000000c000a81c      0x288 fs_main.o
                                        0x2a0 (size before relaxing)
 .eh_frame      0x00000000c000aaa4       0xa0 process.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000ab44      0x104 protect.o
                                        0x11c (size before relaxing)
 .eh_frame      0x00000000c000ac48      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x00000000c000ae28       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000aec8       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000aee8       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000af08       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000af28       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000af48       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000af68       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000af88       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000afa8       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000afc8       0x64 exec.o
                                         0x7c (size before relaxing)
 .eh_frame      0x00000000c000b02c       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x00000000c000b068       0x4c mm/exec.o
                                         0x64 (size before relaxing)
 .eh_frame      0x00000000c000b0b4       0x90 mm/forkexit.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x00000000c000b144      0x1e4 mem/mem.o
                                        0x1fc (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c000d000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c000d000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c000d000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c000d000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c000d000        0x0
 *(.got)
 .got           0x00000000c000d000        0x0 kernel_sub.o
 *(.igot)
                0x00000000c000d000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c000d000        0x0
 *(.got.plt)
 .got.plt       0x00000000c000d000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x00000000c000d000        0x0 kernel_sub.o

.data           0x00000000c000d000      0x700
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000d000        0xf kernel_sub.o
 *fill*         0x00000000c000d00f        0x1 
 .data          0x00000000c000d010        0xf kernel.o
 .data          0x00000000c000d01f        0x0 kernel_main.o
 .data          0x00000000c000d01f        0x0 hd.o
 *fill*         0x00000000c000d01f        0x1 
 .data          0x00000000c000d020        0x0 syscall.o
 .data          0x00000000c000d020        0x8 fs_main.o
                0x00000000c000d020                fsbuf
                0x00000000c000d024                super_block_buf
 *fill*         0x00000000c000d028       0x18 
 .data          0x00000000c000d040       0xc0 global.o
                0x00000000c000d040                user_task_table
                0x00000000c000d060                sys_task_table
                0x00000000c000d0ec                sys_call_table
 .data          0x00000000c000d100        0x0 process.o
 .data          0x00000000c000d100        0x0 protect.o
 .data          0x00000000c000d100        0x0 console.o
 .data          0x00000000c000d100      0x600 keyboard.o
                0x00000000c000d100                keymap
 .data          0x00000000c000d700        0x0 open.o
 .data          0x00000000c000d700        0x0 read.o
 .data          0x00000000c000d700        0x0 write.o
 .data          0x00000000c000d700        0x0 close.o
 .data          0x00000000c000d700        0x0 wait.o
 .data          0x00000000c000d700        0x0 exit.o
 .data          0x00000000c000d700        0x0 fork.o
 .data          0x00000000c000d700        0x0 getpid.o
 .data          0x00000000c000d700        0x0 exec.o
 .data          0x00000000c000d700        0x0 mm/main.o
 .data          0x00000000c000d700        0x0 mm/exec.o
 .data          0x00000000c000d700        0x0 mm/forkexit.o
 .data          0x00000000c000d700        0x0 mem/mem.o

.data1
 *(.data1)
                0x00000000c000d700                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c000d700                . = .
                0x00000000c000d700                __bss_start = .

.bss            0x00000000c000d700    0x78990
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c000d700      0x800 kernel_sub.o
 .bss           0x00000000c000df00      0x800 kernel.o
 .bss           0x00000000c000e700        0x0 kernel_main.o
 .bss           0x00000000c000e700        0x0 hd.o
 .bss           0x00000000c000e700        0x4 fs_main.o
                0x00000000c000e700                c
 .bss           0x00000000c000e704        0x0 global.o
 .bss           0x00000000c000e704        0x0 process.o
 .bss           0x00000000c000e704        0x0 protect.o
 .bss           0x00000000c000e704        0x0 console.o
 .bss           0x00000000c000e704        0x0 keyboard.o
 .bss           0x00000000c000e704        0x0 open.o
 .bss           0x00000000c000e704        0x0 read.o
 .bss           0x00000000c000e704        0x0 write.o
 .bss           0x00000000c000e704        0x0 close.o
 .bss           0x00000000c000e704        0x0 wait.o
 .bss           0x00000000c000e704        0x0 exit.o
 .bss           0x00000000c000e704        0x0 fork.o
 .bss           0x00000000c000e704        0x0 getpid.o
 .bss           0x00000000c000e704        0x0 exec.o
 .bss           0x00000000c000e704        0x0 mm/main.o
 .bss           0x00000000c000e704        0x0 mm/exec.o
 .bss           0x00000000c000e704        0x0 mm/forkexit.o
 .bss           0x00000000c000e704        0x0 mem/mem.o
 *(COMMON)
 *fill*         0x00000000c000e704       0x1c 
 COMMON         0x00000000c000e720     0x27f1 kernel_main.o
                0x00000000c000e720                current_tty
                0x00000000c000e724                is_e0
                0x00000000c000e728                idt_ptr
                0x00000000c000e730                KernelVirtualMemory
                0x00000000c000e73c                dis_pos
                0x00000000c000e740                k_reenter
                0x00000000c000e760                gdt
                0x00000000c000eb60                proc_ready_table
                0x00000000c000eb64                pcaller
                0x00000000c000eb80                keyboard_buffer
                0x00000000c000eda0                tty_table
                0x00000000c0010620                tss
                0x00000000c001068c                KernelPool
                0x00000000c001069c                counter
                0x00000000c00106a0                key_pressed
                0x00000000c00106a4                is_shift
                0x00000000c00106a8                gdt_ptr
                0x00000000c00106c0                idt
                0x00000000c0010ec0                ticks
                0x00000000c0010ec4                UserPool
                0x00000000c0010ee0                console_table
                0x00000000c0010f10                is_disp
 *fill*         0x00000000c0010f11        0xf 
 COMMON         0x00000000c0010f20      0x440 hd.o
                0x00000000c0010f20                hd_info
                0x00000000c0011160                hd_cache
 COMMON         0x00000000c0011360      0xe28 fs_main.o
                0x00000000c0011360                file_desc_table
                0x00000000c0011760                inode_table
                0x00000000c0012160                root
 *fill*         0x00000000c0012188       0x18 
 COMMON         0x00000000c00121a0    0x73ef0 global.o
                0x00000000c00121a0                proc_stack
                0x00000000c00821a0                proc_table
                0x00000000c0086090                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0086090                . = ALIGN (0x4)
                0x00000000c0086090                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0086090                . = ALIGN (0x4)
                0x00000000c0086090                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c0086090                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o
 .comment       0x000000000000002c       0x2d mem/mem.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x298
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel_main.o
 .debug_aranges
                0x0000000000000020       0x20 hd.o
 .debug_aranges
                0x0000000000000040       0x20 fs_main.o
 .debug_aranges
                0x0000000000000060       0x18 global.o
 .debug_aranges
                0x0000000000000078       0x20 process.o
 .debug_aranges
                0x0000000000000098       0x20 protect.o
 .debug_aranges
                0x00000000000000b8       0x20 console.o
 .debug_aranges
                0x00000000000000d8       0x20 keyboard.o
 .debug_aranges
                0x00000000000000f8       0x20 open.o
 .debug_aranges
                0x0000000000000118       0x20 read.o
 .debug_aranges
                0x0000000000000138       0x20 write.o
 .debug_aranges
                0x0000000000000158       0x20 close.o
 .debug_aranges
                0x0000000000000178       0x20 wait.o
 .debug_aranges
                0x0000000000000198       0x20 exit.o
 .debug_aranges
                0x00000000000001b8       0x20 fork.o
 .debug_aranges
                0x00000000000001d8       0x20 getpid.o
 .debug_aranges
                0x00000000000001f8       0x20 exec.o
 .debug_aranges
                0x0000000000000218       0x20 mm/main.o
 .debug_aranges
                0x0000000000000238       0x20 mm/exec.o
 .debug_aranges
                0x0000000000000258       0x20 mm/forkexit.o
 .debug_aranges
                0x0000000000000278       0x20 mem/mem.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000    0x13313
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000     0x2480 kernel_main.o
 .debug_info    0x0000000000002480     0x13e6 hd.o
 .debug_info    0x0000000000003866     0x1bab fs_main.o
 .debug_info    0x0000000000005411      0xb27 global.o
 .debug_info    0x0000000000005f38      0xbcf process.o
 .debug_info    0x0000000000006b07      0xe43 protect.o
 .debug_info    0x000000000000794a      0xeb1 console.o
 .debug_info    0x00000000000087fb      0xc85 keyboard.o
 .debug_info    0x0000000000009480      0xb38 open.o
 .debug_info    0x0000000000009fb8      0xb3e read.o
 .debug_info    0x000000000000aaf6      0xb47 write.o
 .debug_info    0x000000000000b63d      0xb1e close.o
 .debug_info    0x000000000000c15b      0xb29 wait.o
 .debug_info    0x000000000000cc84      0xb1b exit.o
 .debug_info    0x000000000000d79f      0xb10 fork.o
 .debug_info    0x000000000000e2af      0xb10 getpid.o
 .debug_info    0x000000000000edbf      0xc6d exec.o
 .debug_info    0x000000000000fa2c      0xb27 mm/main.o
 .debug_info    0x0000000000010553      0xe11 mm/exec.o
 .debug_info    0x0000000000011364      0xd7b mm/forkexit.o
 .debug_info    0x00000000000120df     0x1234 mem/mem.o

.debug_abbrev   0x0000000000000000     0x272b
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x3be kernel_main.o
 .debug_abbrev  0x00000000000003be      0x2bf hd.o
 .debug_abbrev  0x000000000000067d      0x2cb fs_main.o
 .debug_abbrev  0x0000000000000948      0x135 global.o
 .debug_abbrev  0x0000000000000a7d      0x1d6 process.o
 .debug_abbrev  0x0000000000000c53      0x1f0 protect.o
 .debug_abbrev  0x0000000000000e43      0x257 console.o
 .debug_abbrev  0x000000000000109a      0x1d9 keyboard.o
 .debug_abbrev  0x0000000000001273      0x16a open.o
 .debug_abbrev  0x00000000000013dd      0x180 read.o
 .debug_abbrev  0x000000000000155d      0x180 write.o
 .debug_abbrev  0x00000000000016dd      0x168 close.o
 .debug_abbrev  0x0000000000001845      0x16a wait.o
 .debug_abbrev  0x00000000000019af      0x166 exit.o
 .debug_abbrev  0x0000000000001b15      0x155 fork.o
 .debug_abbrev  0x0000000000001c6a      0x155 getpid.o
 .debug_abbrev  0x0000000000001dbf      0x19e exec.o
 .debug_abbrev  0x0000000000001f5d      0x1be mm/main.o
 .debug_abbrev  0x000000000000211b      0x1a9 mm/exec.o
 .debug_abbrev  0x00000000000022c4      0x1e4 mm/forkexit.o
 .debug_abbrev  0x00000000000024a8      0x283 mem/mem.o

.debug_line     0x0000000000000000     0x3a0b
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0xdc2 kernel_main.o
 .debug_line    0x0000000000000dc2      0x546 hd.o
 .debug_line    0x0000000000001308      0xbca fs_main.o
 .debug_line    0x0000000000001ed2       0x80 global.o
 .debug_line    0x0000000000001f52      0x1c2 process.o
 .debug_line    0x0000000000002114      0x233 protect.o
 .debug_line    0x0000000000002347      0x51e console.o
 .debug_line    0x0000000000002865      0x275 keyboard.o
 .debug_line    0x0000000000002ada       0xb0 open.o
 .debug_line    0x0000000000002b8a       0xa7 read.o
 .debug_line    0x0000000000002c31       0xa8 write.o
 .debug_line    0x0000000000002cd9       0xad close.o
 .debug_line    0x0000000000002d86       0xb7 wait.o
 .debug_line    0x0000000000002e3d       0xa0 exit.o
 .debug_line    0x0000000000002edd       0xae fork.o
 .debug_line    0x0000000000002f8b       0xa0 getpid.o
 .debug_line    0x000000000000302b      0x15b exec.o
 .debug_line    0x0000000000003186       0xe4 mm/main.o
 .debug_line    0x000000000000326a      0x1df mm/exec.o
 .debug_line    0x0000000000003449      0x202 mm/forkexit.o
 .debug_line    0x000000000000364b      0x3c0 mem/mem.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000     0x16fb
 *(.debug_str)
 .debug_str     0x0000000000000000      0x887 kernel_main.o
                                        0x983 (size before relaxing)
 .debug_str     0x0000000000000887      0x290 hd.o
                                        0x70a (size before relaxing)
 .debug_str     0x0000000000000b17      0x437 fs_main.o
                                        0x8c4 (size before relaxing)
 .debug_str     0x0000000000000f4e        0x9 global.o
                                        0x41c (size before relaxing)
 .debug_str     0x0000000000000f57       0x50 process.o
                                        0x463 (size before relaxing)
 .debug_str     0x0000000000000fa7      0x10d protect.o
                                        0x557 (size before relaxing)
 .debug_str     0x00000000000010b4      0x103 console.o
                                        0x522 (size before relaxing)
 .debug_str     0x00000000000011b7       0x84 keyboard.o
                                        0x4a8 (size before relaxing)
 .debug_str     0x000000000000123b        0xb open.o
                                        0x432 (size before relaxing)
 .debug_str     0x0000000000001246        0xb read.o
                                        0x429 (size before relaxing)
 .debug_str     0x0000000000001251        0xc write.o
                                        0x42b (size before relaxing)
 .debug_str     0x000000000000125d        0xc close.o
                                        0x425 (size before relaxing)
 .debug_str     0x0000000000001269        0xb wait.o
                                        0x42a (size before relaxing)
 .debug_str     0x0000000000001274        0xb exit.o
                                        0x42a (size before relaxing)
 .debug_str     0x000000000000127f        0xb fork.o
                                        0x423 (size before relaxing)
 .debug_str     0x000000000000128a       0x14 getpid.o
                                        0x427 (size before relaxing)
 .debug_str     0x000000000000129e       0x1a exec.o
                                        0x44c (size before relaxing)
 .debug_str     0x00000000000012b8       0x32 mm/main.o
                                        0x417 (size before relaxing)
 .debug_str     0x00000000000012ea      0x17b mm/exec.o
                                        0x597 (size before relaxing)
 .debug_str     0x0000000000001465       0xb8 mm/forkexit.o
                                        0x4d5 (size before relaxing)
 .debug_str     0x000000000000151d      0x1de mem/mem.o
                                        0x6ed (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x90
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x30 kernel_main.o
 .debug_ranges  0x0000000000000030       0x48 hd.o
 .debug_ranges  0x0000000000000078       0x18 mm/exec.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
