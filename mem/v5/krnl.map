
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
idt_ptr             0x6               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
tty_table           0x186c            kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
root                0x28              fs_main.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
ticks               0x4               kernel_main.o
UserPool            0x10              kernel_main.o
console_table       0x30              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table          0x1ac             global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mem/mem.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
LOAD switch_to.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x8220
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0x78 kernel_sub.o
                0x00000000c0001500                _start
 *fill*         0x00000000c0001578        0x8 
 .text          0x00000000c0001580      0x341 kernel.o
                0x00000000c0001580                InterruptTest
                0x00000000c000158c                disp_str
                0x00000000c00015c7                disp_str_colour
                0x00000000c0001603                divide_zero_fault
                0x00000000c0001609                single_step_fault
                0x00000000c000160f                non_maskable_interrupt
                0x00000000c0001615                breakpoint_trap
                0x00000000c000161b                overflow_trap
                0x00000000c0001621                bound_range_exceeded_fault
                0x00000000c0001627                invalid_opcode_fault
                0x00000000c000162d                coprocessor_not_available_fault
                0x00000000c0001633                double_fault_exception_abort
                0x00000000c0001637                coprocessor_segment_overrun
                0x00000000c000163d                invalid_task_state_segment_fault
                0x00000000c0001641                segment_not_present_fault
                0x00000000c0001645                stack_exception_fault
                0x00000000c0001649                general_protection_exception_fault
                0x00000000c000164d                page_fault
                0x00000000c0001651                coprocessor_error_fault
                0x00000000c0001657                align_check_fault
                0x00000000c000165b                simd_float_exception_fault
                0x00000000c000166a                hwint0
                0x00000000c00016b3                hwint1
                0x00000000c00016fc                hwint14
                0x00000000c0001745                sys_call
                0x00000000c000178f                restart
                0x00000000c00017d3                in_byte
                0x00000000c00017df                out_byte
                0x00000000c0001801                disable_int
                0x00000000c0001803                enable_int
                0x00000000c0001899                enable_8259A_casecade_irq
                0x00000000c00018a3                disable_8259A_casecade_irq
                0x00000000c00018ad                enable_8259A_slave_winchester_irq
                0x00000000c00018b7                disable_8259A_slave_winchester_irq
 .text          0x00000000c00018c1     0x2a65 kernel_main.o
                0x00000000c00018c1                untar
                0x00000000c0001acb                atoi
                0x00000000c0001b71                disp_int
                0x00000000c0001b9a                do_page_fault
                0x00000000c0001cff                exception_handler
                0x00000000c0001e8c                exception_handler2
                0x00000000c000202d                init_internal_interrupt
                0x00000000c00021a2                test
                0x00000000c00021d8                disp_str_colour3
                0x00000000c00021de                spurious_irq
                0x00000000c0002257                init_keyboard
                0x00000000c00022d4                init
                0x00000000c0002305                kernel_main
                0x00000000c0002590                TestFS
                0x00000000c0002964                wait_exit
                0x00000000c0002a32                INIT_fork
                0x00000000c0002d22                simple_shell
                0x00000000c0002ef9                test_split_str
                0x00000000c0003086                test_shell
                0x00000000c0003164                test_exec
                0x00000000c000322c                INIT
                0x00000000c0003239                TestA
                0x00000000c0003241                delay
                0x00000000c0003288                TestB
                0x00000000c00032b7                TestC
                0x00000000c00032ea                sys_get_ticks
                0x00000000c00032f4                sys_write
                0x00000000c0003345                milli_delay
                0x00000000c0003381                TaskSys
                0x00000000c00033fe                Printf
                0x00000000c000345c                vsprintf
                0x00000000c0003608                printx
                0x00000000c000364b                sys_printx
                0x00000000c000372d                spin
                0x00000000c0003732                panic
                0x00000000c0003750                assertion_failure
                0x00000000c0003787                dead_lock
                0x00000000c0003791                sys_send_msg
                0x00000000c0003afd                sys_receive_msg
                0x00000000c0003fc2                disp_str_colour_debug
                0x00000000c0003fc8                send_rec
                0x00000000c00040ae                block
                0x00000000c00040c0                unblock
                0x00000000c00040f7                get_ticks_ipc
                0x00000000c0004142                itoa
                0x00000000c0004198                i2a
                0x00000000c00041fe                inform_int
                0x00000000c00042b7                strcmp
 .text          0x00000000c0004326      0xc69 hd.o
                0x00000000c0004326                TaskHD
                0x00000000c0004338                init_hd
                0x00000000c0004352                hd_handle
                0x00000000c0004417                hd_cmd_out
                0x00000000c0004519                hd_identify
                0x00000000c00045d0                print_hdinfo
                0x00000000c000475e                print_dpt_entry
                0x00000000c00047ca                get_partition_table
                0x00000000c00048a9                partition
                0x00000000c0004ac3                hd_open
                0x00000000c0004b12                get_hd_ioctl
                0x00000000c0004b6b                wait_for
                0x00000000c0004b9c                interrupt_wait
                0x00000000c0004bbb                hd_rdwt
                0x00000000c0004ded                hd_handler
                0x00000000c0004e19                waitfor
                0x00000000c0004e6a                print_hd_info
                0x00000000c0004f57                is_empty
 *fill*         0x00000000c0004f8f        0x1 
 .text          0x00000000c0004f90       0x74 syscall.o
                0x00000000c0004f90                get_ticks
                0x00000000c0004f98                write2
                0x00000000c0004fa8                write_debug
                0x00000000c0004fc8                send_msg
                0x00000000c0004fee                receive_msg
 .text          0x00000000c0005004     0x1ecb fs_main.o
                0x00000000c0005004                task_fs
                0x00000000c000513f                rd_wt
                0x00000000c00051e3                mkfs
                0x00000000c00057a3                init_fs
                0x00000000c00057d2                do_open
                0x00000000c00059b3                search_file
                0x00000000c0005ae3                strip_path
                0x00000000c0005baf                get_inode
                0x00000000c0005d71                create_file
                0x00000000c0005e7c                alloc_imap_bit
                0x00000000c0005f79                alloc_smap_bit
                0x00000000c000611a                new_inode
                0x00000000c0006238                new_dir_entry
                0x00000000c0006440                do_unlink
                0x00000000c0006910                do_rdwt
                0x00000000c0006c83                sync_inode
                0x00000000c0006dd7                put_inode
                0x00000000c0006e15                do_close
                0x00000000c0006e67                get_super_block
 .text          0x00000000c0006ecf        0x0 global.o
 .text          0x00000000c0006ecf      0x1ff process.o
                0x00000000c0006ecf                check
                0x00000000c0006f44                schedule_process
                0x00000000c000700a                clock_handler
                0x00000000c0007093                pid2proc
                0x00000000c00070af                proc2pid
 .text          0x00000000c00070ce      0x316 protect.o
                0x00000000c00070ce                InitDescriptor
                0x00000000c000713b                Seg2PhyAddr
                0x00000000c000717c                Seg2PhyAddrLDT
                0x00000000c00071bd                VirAddr2PhyAddr
                0x00000000c00071d3                v2l
                0x00000000c0007216                init_propt
                0x00000000c00072fd                InitInterruptDesc
                0x00000000c0007359                ReloadGDT
 .text          0x00000000c00073e4      0xa28 console.o
                0x00000000c00073e4                select_console
                0x00000000c0007420                flush
                0x00000000c0007459                set_cursor
                0x00000000c00074b7                set_console_start_video_addr
                0x00000000c0007515                put_key
                0x00000000c0007581                scroll_up
                0x00000000c00075c3                scroll_down
                0x00000000c000762e                out_char
                0x00000000c00077d5                tty_dev_read
                0x00000000c00077ff                tty_dev_write
                0x00000000c0007a06                tty_do_read
                0x00000000c0007a97                tty_do_write
                0x00000000c0007bdf                init_screen
                0x00000000c0007c73                init_tty
                0x00000000c0007d0d                TaskTTY
 .text          0x00000000c0007e0c      0x407 keyboard.o
                0x00000000c0007e0c                keyboard_handler
                0x00000000c0007e8e                read_from_keyboard_buf
                0x00000000c0007eee                keyboard_read
                0x00000000c000806d                init_keyboard_handler
                0x00000000c0008081                in_process
 .text          0x00000000c0008213       0x55 open.o
                0x00000000c0008213                open
 .text          0x00000000c0008268       0x37 read.o
                0x00000000c0008268                read
 .text          0x00000000c000829f       0x37 write.o
                0x00000000c000829f                write
 .text          0x00000000c00082d6       0x4c close.o
                0x00000000c00082d6                close
 .text          0x00000000c0008322       0x3e wait.o
                0x00000000c0008322                wait
 .text          0x00000000c0008360       0x29 exit.o
                0x00000000c0008360                exit
 .text          0x00000000c0008389       0x5f fork.o
                0x00000000c0008389                fork
 .text          0x00000000c00083e8       0x25 getpid.o
                0x00000000c00083e8                getpid
 .text          0x00000000c000840d      0x235 exec.o
                0x00000000c000840d                exec
                0x00000000c0008478                execv
                0x00000000c000861d                execl
 .text          0x00000000c0008642      0x130 mm/main.o
                0x00000000c0008642                TaskMM
                0x00000000c0008753                alloc_mem
 .text          0x00000000c0008772      0x344 mm/exec.o
                0x00000000c0008772                do_exec2
                0x00000000c0008786                do_exec
 .text          0x00000000c0008ab6      0x41e mm/forkexit.o
                0x00000000c0008ab6                do_fork
                0x00000000c0008cba                do_exit
                0x00000000c0008db6                do_wait
                0x00000000c0008e80                cleanup
 .text          0x00000000c0008ed4      0x83b mem/mem.o
                0x00000000c0008ed4                test_bit_val
                0x00000000c0008f3d                set_bit_val
                0x00000000c0008fb8                set_bits
                0x00000000c0008ff2                get_first_free_bit
                0x00000000c0009036                get_bits
                0x00000000c00090f0                get_a_page2
                0x00000000c000911f                get_a_page
                0x00000000c00091ae                get_virtual_address
                0x00000000c000921f                ptr_pde
                0x00000000c0009232                ptr_pte
                0x00000000c0009259                add_map_entry
                0x00000000c00092ed                get_physical_address
                0x00000000c000931f                alloc_memory
                0x00000000c000937b                init_memory2
                0x00000000c00095f2                init_memory
 *fill*         0x00000000c000970f        0x1 
 .text          0x00000000c0009710       0x10 switch_to.o
                0x00000000c0009710                switch_to
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c0009720      0xa61
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0009720      0x71d kernel_main.o
 .rodata        0x00000000c0009e3d      0x10e hd.o
 *fill*         0x00000000c0009f4b        0x1 
 .rodata        0x00000000c0009f4c      0x173 fs_main.o
                0x00000000c0009f4c                FSBUF_SIZE
 .rodata        0x00000000c000a0bf        0x6 process.o
 .rodata        0x00000000c000a0c5       0x24 close.o
 .rodata        0x00000000c000a0e9       0x1b fork.o
 .rodata        0x00000000c000a104       0x31 exec.o
 .rodata        0x00000000c000a135       0x11 mm/main.o
 *fill*         0x00000000c000a146        0x2 
 .rodata        0x00000000c000a148       0x37 mm/forkexit.o
 .rodata        0x00000000c000a17f        0x2 mem/mem.o

.txt            0x00000000c000a181       0xaa
 .txt           0x00000000c000a181       0x82 string.o
                0x00000000c000a181                Memcpy
                0x00000000c000a1af                Memset
                0x00000000c000a1ce                Strcpy
                0x00000000c000a1e8                Strlen
 .txt           0x00000000c000a203       0x28 hd_rdwt.o
                0x00000000c000a203                read_port
                0x00000000c000a217                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c000a22c     0x1368
 *(.eh_frame)
 .eh_frame      0x00000000c000a22c      0x61c kernel_main.o
 .eh_frame      0x00000000c000a848      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x00000000c000aa8c      0x288 fs_main.o
                                        0x2a0 (size before relaxing)
 .eh_frame      0x00000000c000ad14       0xa0 process.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000adb4      0x100 protect.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c000aeb4      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x00000000c000b094       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000b134       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b154       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b174       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b194       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b1b4       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b1d4       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b1f4       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b214       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b234       0x64 exec.o
                                         0x7c (size before relaxing)
 .eh_frame      0x00000000c000b298       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x00000000c000b2d4       0x4c mm/exec.o
                                         0x64 (size before relaxing)
 .eh_frame      0x00000000c000b320       0x90 mm/forkexit.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x00000000c000b3b0      0x1e4 mem/mem.o
                                        0x1fc (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c000d000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c000d000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c000d000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c000d000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c000d000        0x0
 *(.got)
 .got           0x00000000c000d000        0x0 kernel_sub.o
 *(.igot)
                0x00000000c000d000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c000d000        0x0
 *(.got.plt)
 .got.plt       0x00000000c000d000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x00000000c000d000        0x0 kernel_sub.o

.data           0x00000000c000d000      0x660
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000d000        0xf kernel_sub.o
 *fill*         0x00000000c000d00f        0x1 
 .data          0x00000000c000d010        0xf kernel.o
 .data          0x00000000c000d01f        0x0 kernel_main.o
 .data          0x00000000c000d01f        0x0 hd.o
 *fill*         0x00000000c000d01f        0x1 
 .data          0x00000000c000d020        0x0 syscall.o
 .data          0x00000000c000d020        0x8 fs_main.o
                0x00000000c000d020                fsbuf
                0x00000000c000d024                super_block_buf
 .data          0x00000000c000d028       0x30 global.o
                0x00000000c000d028                sys_task_table
                0x00000000c000d044                sys_call_table
 .data          0x00000000c000d058        0x0 process.o
 .data          0x00000000c000d058        0x0 protect.o
 .data          0x00000000c000d058        0x0 console.o
 *fill*         0x00000000c000d058        0x8 
 .data          0x00000000c000d060      0x600 keyboard.o
                0x00000000c000d060                keymap
 .data          0x00000000c000d660        0x0 open.o
 .data          0x00000000c000d660        0x0 read.o
 .data          0x00000000c000d660        0x0 write.o
 .data          0x00000000c000d660        0x0 close.o
 .data          0x00000000c000d660        0x0 wait.o
 .data          0x00000000c000d660        0x0 exit.o
 .data          0x00000000c000d660        0x0 fork.o
 .data          0x00000000c000d660        0x0 getpid.o
 .data          0x00000000c000d660        0x0 exec.o
 .data          0x00000000c000d660        0x0 mm/main.o
 .data          0x00000000c000d660        0x0 mm/exec.o
 .data          0x00000000c000d660        0x0 mm/forkexit.o
 .data          0x00000000c000d660        0x0 mem/mem.o

.data1
 *(.data1)
                0x00000000c000d660                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c000d660                . = .
                0x00000000c000d660                __bss_start = .

.bss            0x00000000c000d660    0x74c4c
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c000d660      0x800 kernel_sub.o
 .bss           0x00000000c000de60      0x800 kernel.o
 .bss           0x00000000c000e660        0x0 kernel_main.o
 .bss           0x00000000c000e660        0x0 hd.o
 .bss           0x00000000c000e660        0x4 fs_main.o
                0x00000000c000e660                c
 .bss           0x00000000c000e664        0x1 global.o
                0x00000000c000e664                user_task_table
 .bss           0x00000000c000e665        0x0 process.o
 .bss           0x00000000c000e665        0x0 protect.o
 .bss           0x00000000c000e665        0x0 console.o
 .bss           0x00000000c000e665        0x0 keyboard.o
 .bss           0x00000000c000e665        0x0 open.o
 .bss           0x00000000c000e665        0x0 read.o
 .bss           0x00000000c000e665        0x0 write.o
 .bss           0x00000000c000e665        0x0 close.o
 .bss           0x00000000c000e665        0x0 wait.o
 .bss           0x00000000c000e665        0x0 exit.o
 .bss           0x00000000c000e665        0x0 fork.o
 .bss           0x00000000c000e665        0x0 getpid.o
 .bss           0x00000000c000e665        0x0 exec.o
 .bss           0x00000000c000e665        0x0 mm/main.o
 .bss           0x00000000c000e665        0x0 mm/exec.o
 .bss           0x00000000c000e665        0x0 mm/forkexit.o
 .bss           0x00000000c000e665        0x0 mem/mem.o
 *(COMMON)
 *fill*         0x00000000c000e665       0x1b 
 COMMON         0x00000000c000e680     0x27f1 kernel_main.o
                0x00000000c000e680                current_tty
                0x00000000c000e684                is_e0
                0x00000000c000e688                idt_ptr
                0x00000000c000e690                KernelVirtualMemory
                0x00000000c000e69c                dis_pos
                0x00000000c000e6a0                k_reenter
                0x00000000c000e6c0                gdt
                0x00000000c000eac0                proc_ready_table
                0x00000000c000eac4                pcaller
                0x00000000c000eae0                keyboard_buffer
                0x00000000c000ed00                tty_table
                0x00000000c0010580                tss
                0x00000000c00105ec                KernelPool
                0x00000000c00105fc                counter
                0x00000000c0010600                key_pressed
                0x00000000c0010604                is_shift
                0x00000000c0010608                gdt_ptr
                0x00000000c0010620                idt
                0x00000000c0010e20                ticks
                0x00000000c0010e24                UserPool
                0x00000000c0010e40                console_table
                0x00000000c0010e70                is_disp
 *fill*         0x00000000c0010e71        0xf 
 COMMON         0x00000000c0010e80      0x440 hd.o
                0x00000000c0010e80                hd_info
                0x00000000c00110c0                hd_cache
 COMMON         0x00000000c00112c0      0xe28 fs_main.o
                0x00000000c00112c0                file_desc_table
                0x00000000c00116c0                inode_table
                0x00000000c00120c0                root
 *fill*         0x00000000c00120e8       0x18 
 COMMON         0x00000000c0012100    0x701ac global.o
                0x00000000c0012100                proc_stack
                0x00000000c0082100                proc_table
                0x00000000c00822ac                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c00822ac                . = ALIGN (0x4)
                0x00000000c00822ac                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c00822ac                . = ALIGN (0x4)
                0x00000000c00822ac                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c00822ac                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o
 .comment       0x000000000000002c       0x2d mem/mem.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x298
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel_main.o
 .debug_aranges
                0x0000000000000020       0x20 hd.o
 .debug_aranges
                0x0000000000000040       0x20 fs_main.o
 .debug_aranges
                0x0000000000000060       0x18 global.o
 .debug_aranges
                0x0000000000000078       0x20 process.o
 .debug_aranges
                0x0000000000000098       0x20 protect.o
 .debug_aranges
                0x00000000000000b8       0x20 console.o
 .debug_aranges
                0x00000000000000d8       0x20 keyboard.o
 .debug_aranges
                0x00000000000000f8       0x20 open.o
 .debug_aranges
                0x0000000000000118       0x20 read.o
 .debug_aranges
                0x0000000000000138       0x20 write.o
 .debug_aranges
                0x0000000000000158       0x20 close.o
 .debug_aranges
                0x0000000000000178       0x20 wait.o
 .debug_aranges
                0x0000000000000198       0x20 exit.o
 .debug_aranges
                0x00000000000001b8       0x20 fork.o
 .debug_aranges
                0x00000000000001d8       0x20 getpid.o
 .debug_aranges
                0x00000000000001f8       0x20 exec.o
 .debug_aranges
                0x0000000000000218       0x20 mm/main.o
 .debug_aranges
                0x0000000000000238       0x20 mm/exec.o
 .debug_aranges
                0x0000000000000258       0x20 mm/forkexit.o
 .debug_aranges
                0x0000000000000278       0x20 mem/mem.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000    0x13514
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000     0x25bb kernel_main.o
 .debug_info    0x00000000000025bb     0x13f4 hd.o
 .debug_info    0x00000000000039af     0x1bb9 fs_main.o
 .debug_info    0x0000000000005568      0xb35 global.o
 .debug_info    0x000000000000609d      0xbdd process.o
 .debug_info    0x0000000000006c7a      0xe03 protect.o
 .debug_info    0x0000000000007a7d      0xebf console.o
 .debug_info    0x000000000000893c      0xc93 keyboard.o
 .debug_info    0x00000000000095cf      0xb46 open.o
 .debug_info    0x000000000000a115      0xb4c read.o
 .debug_info    0x000000000000ac61      0xb55 write.o
 .debug_info    0x000000000000b7b6      0xb2c close.o
 .debug_info    0x000000000000c2e2      0xb37 wait.o
 .debug_info    0x000000000000ce19      0xb29 exit.o
 .debug_info    0x000000000000d942      0xb1e fork.o
 .debug_info    0x000000000000e460      0xb1e getpid.o
 .debug_info    0x000000000000ef7e      0xc7b exec.o
 .debug_info    0x000000000000fbf9      0xb35 mm/main.o
 .debug_info    0x000000000001072e      0xe1f mm/exec.o
 .debug_info    0x000000000001154d      0xd89 mm/forkexit.o
 .debug_info    0x00000000000122d6     0x123e mem/mem.o

.debug_abbrev   0x0000000000000000     0x272d
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x3c0 kernel_main.o
 .debug_abbrev  0x00000000000003c0      0x2bf hd.o
 .debug_abbrev  0x000000000000067f      0x2cb fs_main.o
 .debug_abbrev  0x000000000000094a      0x135 global.o
 .debug_abbrev  0x0000000000000a7f      0x1d6 process.o
 .debug_abbrev  0x0000000000000c55      0x1f0 protect.o
 .debug_abbrev  0x0000000000000e45      0x257 console.o
 .debug_abbrev  0x000000000000109c      0x1d9 keyboard.o
 .debug_abbrev  0x0000000000001275      0x16a open.o
 .debug_abbrev  0x00000000000013df      0x180 read.o
 .debug_abbrev  0x000000000000155f      0x180 write.o
 .debug_abbrev  0x00000000000016df      0x168 close.o
 .debug_abbrev  0x0000000000001847      0x16a wait.o
 .debug_abbrev  0x00000000000019b1      0x166 exit.o
 .debug_abbrev  0x0000000000001b17      0x155 fork.o
 .debug_abbrev  0x0000000000001c6c      0x155 getpid.o
 .debug_abbrev  0x0000000000001dc1      0x19e exec.o
 .debug_abbrev  0x0000000000001f5f      0x1be mm/main.o
 .debug_abbrev  0x000000000000211d      0x1a9 mm/exec.o
 .debug_abbrev  0x00000000000022c6      0x1e4 mm/forkexit.o
 .debug_abbrev  0x00000000000024aa      0x283 mem/mem.o

.debug_line     0x0000000000000000     0x3a0a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0xe27 kernel_main.o
 .debug_line    0x0000000000000e27      0x546 hd.o
 .debug_line    0x000000000000136d      0xbca fs_main.o
 .debug_line    0x0000000000001f37       0x80 global.o
 .debug_line    0x0000000000001fb7      0x1c2 process.o
 .debug_line    0x0000000000002179      0x1cd protect.o
 .debug_line    0x0000000000002346      0x51e console.o
 .debug_line    0x0000000000002864      0x275 keyboard.o
 .debug_line    0x0000000000002ad9       0xb0 open.o
 .debug_line    0x0000000000002b89       0xa7 read.o
 .debug_line    0x0000000000002c30       0xa8 write.o
 .debug_line    0x0000000000002cd8       0xad close.o
 .debug_line    0x0000000000002d85       0xb7 wait.o
 .debug_line    0x0000000000002e3c       0xa0 exit.o
 .debug_line    0x0000000000002edc       0xae fork.o
 .debug_line    0x0000000000002f8a       0xa0 getpid.o
 .debug_line    0x000000000000302a      0x15b exec.o
 .debug_line    0x0000000000003185       0xe4 mm/main.o
 .debug_line    0x0000000000003269      0x1df mm/exec.o
 .debug_line    0x0000000000003448      0x202 mm/forkexit.o
 .debug_line    0x000000000000364a      0x3c0 mem/mem.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000     0x1706
 *(.debug_str)
 .debug_str     0x0000000000000000      0x8b2 kernel_main.o
                                        0x9af (size before relaxing)
 .debug_str     0x00000000000008b2      0x290 hd.o
                                        0x710 (size before relaxing)
 .debug_str     0x0000000000000b42      0x437 fs_main.o
                                        0x8ca (size before relaxing)
 .debug_str     0x0000000000000f79        0x9 global.o
                                        0x422 (size before relaxing)
 .debug_str     0x0000000000000f82       0x50 process.o
                                        0x469 (size before relaxing)
 .debug_str     0x0000000000000fd2       0xed protect.o
                                        0x53d (size before relaxing)
 .debug_str     0x00000000000010bf      0x103 console.o
                                        0x528 (size before relaxing)
 .debug_str     0x00000000000011c2       0x84 keyboard.o
                                        0x4ae (size before relaxing)
 .debug_str     0x0000000000001246        0xb open.o
                                        0x438 (size before relaxing)
 .debug_str     0x0000000000001251        0xb read.o
                                        0x42f (size before relaxing)
 .debug_str     0x000000000000125c        0xc write.o
                                        0x431 (size before relaxing)
 .debug_str     0x0000000000001268        0xc close.o
                                        0x42b (size before relaxing)
 .debug_str     0x0000000000001274        0xb wait.o
                                        0x430 (size before relaxing)
 .debug_str     0x000000000000127f        0xb exit.o
                                        0x430 (size before relaxing)
 .debug_str     0x000000000000128a        0xb fork.o
                                        0x429 (size before relaxing)
 .debug_str     0x0000000000001295       0x14 getpid.o
                                        0x42d (size before relaxing)
 .debug_str     0x00000000000012a9       0x1a exec.o
                                        0x452 (size before relaxing)
 .debug_str     0x00000000000012c3       0x32 mm/main.o
                                        0x41d (size before relaxing)
 .debug_str     0x00000000000012f5      0x17b mm/exec.o
                                        0x59d (size before relaxing)
 .debug_str     0x0000000000001470       0xb8 mm/forkexit.o
                                        0x4db (size before relaxing)
 .debug_str     0x0000000000001528      0x1de mem/mem.o
                                        0x6f3 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x90
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x30 kernel_main.o
 .debug_ranges  0x0000000000000030       0x48 hd.o
 .debug_ranges  0x0000000000000078       0x18 mm/exec.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
