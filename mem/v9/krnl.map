
Merging program properties

Removed property 0xc0010001 to merge kernel_main.o (0x1) and kernel_sub.o (not found)
Removed property 0xc0010002 to merge kernel_main.o (0x0) and kernel_sub.o (not found)
Removed property 0xc0010001 to merge kernel_main.o (not found) and hd.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and hd.o (0x1)
Removed property 0xc0010001 to merge kernel_main.o (not found) and fs_main.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and fs_main.o (0x1)
Removed property 0xc0010001 to merge kernel_main.o (not found) and global.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and global.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and process.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and process.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and protect.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and protect.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and console.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and console.o (0x1)
Removed property 0xc0010001 to merge kernel_main.o (not found) and keyboard.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and keyboard.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and open.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and open.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and read.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and read.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and write.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and write.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and close.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and close.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and wait.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and wait.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and exit.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and exit.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and fork.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and fork.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and getpid.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and getpid.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and exec.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and exec.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and mm/main.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and mm/main.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and mm/exec.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and mm/exec.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and mm/forkexit.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and mm/forkexit.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and mem/mem.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and mem/mem.o (0x1)
Removed property 0xc0010001 to merge kernel_main.o (not found) and kernel_main_old.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and kernel_main_old.o (0x1)
Removed property 0xc0010001 to merge kernel_main.o (not found) and my_process.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and my_process.o (0x1)
Removed property 0xc0010001 to merge kernel_main.o (not found) and double_link_list.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and double_link_list.o (0x0)
Removed property 0xc0010001 to merge kernel_main.o (not found) and thread.o (0x1)
Removed property 0xc0010002 to merge kernel_main.o (not found) and thread.o (0x0)

Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
phy_super_block_buf
                    0x4               fs_main.o
phy_fsbuf           0x4               fs_main.o
idt_ptr             0x6               kernel_main.o
pid                 0x4               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
super_block_buf     0x4               fs_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
pcb_list            0x10              kernel_main.o
tty_table           0x1878            kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
fsbuf               0x4               fs_main.o
root                0x28              fs_main.o
kernel_mem_block_decs_array
                    0xf0              global.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
ticks               0x4               kernel_main.o
UserPool            0x10              kernel_main.o
all_pcb_list        0x10              kernel_main.o
console_table       0x30              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table          0xab0             global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x00000000        0x0 kernel_main.o
 .note.gnu.property
                0x00000000       0x28 kernel_main.o
 .note.GNU-stack
                0x00000000        0x0 hd.o
 .note.gnu.property
                0x00000000       0x28 hd.o
 .note.GNU-stack
                0x00000000        0x0 fs_main.o
 .note.gnu.property
                0x00000000       0x28 fs_main.o
 .note.GNU-stack
                0x00000000        0x0 global.o
 .note.gnu.property
                0x00000000       0x28 global.o
 .note.GNU-stack
                0x00000000        0x0 process.o
 .note.gnu.property
                0x00000000       0x28 process.o
 .note.GNU-stack
                0x00000000        0x0 protect.o
 .note.gnu.property
                0x00000000       0x28 protect.o
 .note.GNU-stack
                0x00000000        0x0 console.o
 .note.gnu.property
                0x00000000       0x28 console.o
 .note.GNU-stack
                0x00000000        0x0 keyboard.o
 .note.gnu.property
                0x00000000       0x28 keyboard.o
 .note.GNU-stack
                0x00000000        0x0 open.o
 .note.gnu.property
                0x00000000       0x28 open.o
 .note.GNU-stack
                0x00000000        0x0 read.o
 .note.gnu.property
                0x00000000       0x28 read.o
 .note.GNU-stack
                0x00000000        0x0 write.o
 .note.gnu.property
                0x00000000       0x28 write.o
 .note.GNU-stack
                0x00000000        0x0 close.o
 .note.gnu.property
                0x00000000       0x28 close.o
 .note.GNU-stack
                0x00000000        0x0 wait.o
 .note.gnu.property
                0x00000000       0x28 wait.o
 .note.GNU-stack
                0x00000000        0x0 exit.o
 .note.gnu.property
                0x00000000       0x28 exit.o
 .note.GNU-stack
                0x00000000        0x0 fork.o
 .note.gnu.property
                0x00000000       0x28 fork.o
 .note.GNU-stack
                0x00000000        0x0 getpid.o
 .note.gnu.property
                0x00000000       0x28 getpid.o
 .note.GNU-stack
                0x00000000        0x0 exec.o
 .note.gnu.property
                0x00000000       0x28 exec.o
 .note.GNU-stack
                0x00000000        0x0 mm/main.o
 .note.gnu.property
                0x00000000       0x28 mm/main.o
 .note.GNU-stack
                0x00000000        0x0 mm/exec.o
 .note.gnu.property
                0x00000000       0x28 mm/exec.o
 .note.GNU-stack
                0x00000000        0x0 mm/forkexit.o
 .note.gnu.property
                0x00000000       0x28 mm/forkexit.o
 .note.GNU-stack
                0x00000000        0x0 mem/mem.o
 .note.gnu.property
                0x00000000       0x28 mem/mem.o
 .note.GNU-stack
                0x00000000        0x0 kernel_main_old.o
 .note.gnu.property
                0x00000000       0x28 kernel_main_old.o
 .note.GNU-stack
                0x00000000        0x0 my_process.o
 .note.gnu.property
                0x00000000       0x28 my_process.o
 .note.GNU-stack
                0x00000000        0x0 double_link_list.o
 .note.gnu.property
                0x00000000       0x28 double_link_list.o
 .note.GNU-stack
                0x00000000        0x0 thread.o
 .note.gnu.property
                0x00000000       0x28 thread.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
LOAD kernel_main_old.o
LOAD my_process.o
LOAD switch_to.o
LOAD double_link_list.o
LOAD thread.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x080480d4                        . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x080480d4        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x080480d4        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x080480d4        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x080480d4        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x080480d4        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.relr.dyn
 *(.relr.dyn)
                0x08049000                        . = ALIGN (CONSTANT (MAXPAGESIZE))

.init
 *(SORT_NONE(.init))

.plt            0x08049000        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x08049000        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0xc0001500     0x9103
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(SORT_BY_NAME(.text.sorted.*))
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0xc0001500       0x76 kernel_sub.o
                0xc0001500                _start
 *fill*         0xc0001576        0xa 
 .text          0xc0001580      0x314 kernel.o
                0xc0001580                InterruptTest
                0xc000158c                disp_str
                0xc00015c7                disp_str_colour
                0xc0001603                divide_zero_fault
                0xc0001609                single_step_fault
                0xc000160f                non_maskable_interrupt
                0xc0001615                breakpoint_trap
                0xc000161b                overflow_trap
                0xc0001621                bound_range_exceeded_fault
                0xc0001627                invalid_opcode_fault
                0xc000162d                coprocessor_not_available_fault
                0xc0001633                double_fault_exception_abort
                0xc0001637                coprocessor_segment_overrun
                0xc000163d                invalid_task_state_segment_fault
                0xc0001641                segment_not_present_fault
                0xc0001645                stack_exception_fault
                0xc0001649                general_protection_exception_fault
                0xc000164d                page_fault
                0xc0001651                coprocessor_error_fault
                0xc0001657                align_check_fault
                0xc000165b                simd_float_exception_fault
                0xc000166a                hwint0
                0xc0001698                hwint1
                0xc00016dc                hwint14
                0xc000171c                sys_call
                0xc0001761                restart
                0xc0001782                in_byte
                0xc000178e                out_byte
                0xc00017b0                disable_int
                0xc00017b2                enable_int
                0xc0001848                enable_8259A_casecade_irq
                0xc0001852                disable_8259A_casecade_irq
                0xc000185c                enable_8259A_slave_winchester_irq
                0xc0001866                disable_8259A_slave_winchester_irq
                0xc0001870                update_cr3
                0xc000187d                update_tss
                0xc000188c                get_running_thread_pcb
 .text          0xc0001894      0x227 kernel_main.o
                0xc0001894                kernel_main
                0xc0001934                init
                0xc0001996                kernel_thread_a
                0xc00019f8                kernel_thread_b
                0xc0001a5a                kernel_thread_c
                0xc0001a70                kernel_thread_d
                0xc0001a86                user_proc_a
                0xc0001aa3                user_proc_b
 .text          0xc0001abb      0xd11 hd.o
                0xc0001abb                TaskHD
                0xc0001aee                init_hd
                0xc0001b08                hd_handle
                0xc0001c02                hd_cmd_out
                0xc0001d04                hd_identify
                0xc0001dbb                print_hdinfo
                0xc0001f49                print_dpt_entry
                0xc0001fb5                get_partition_table
                0xc0002094                partition
                0xc00022ae                hd_open
                0xc00022fd                get_hd_ioctl
                0xc0002356                wait_for
                0xc0002387                interrupt_wait
                0xc00023d8                hd_rdwt
                0xc0002637                hd_handler
                0xc0002663                waitfor
                0xc00026a7                print_hd_info
                0xc0002794                is_empty
 *fill*         0xc00027cc        0x4 
 .text          0xc00027d0       0x74 syscall.o
                0xc00027d0                get_ticks
                0xc00027d8                write2
                0xc00027e8                write_debug
                0xc0002808                send_msg
                0xc000282e                receive_msg
 .text          0xc0002844     0x1fca fs_main.o
                0xc0002844                task_fs
                0xc00029e1                rd_wt
                0xc0002abb                mkfs
                0xc000309d                init_fs
                0xc00030f2                do_open
                0xc00032c1                search_file
                0xc00033f3                strip_path
                0xc00034bf                get_inode
                0xc0003681                create_file
                0xc000378c                alloc_imap_bit
                0xc0003889                alloc_smap_bit
                0xc0003a2a                new_inode
                0xc0003b48                new_dir_entry
                0xc0003d54                do_unlink
                0xc0004230                do_rdwt
                0xc00045c2                sync_inode
                0xc0004716                put_inode
                0xc0004754                do_close
                0xc00047a6                get_super_block
 .text          0xc000480e        0x0 global.o
 .text          0xc000480e      0x209 process.o
                0xc000480e                check
                0xc0004883                schedule_process
                0xc000496c                clock_handler
                0xc0004990                pid2proc
                0xc0004a00                proc2pid
 .text          0xc0004a17      0x360 protect.o
                0xc0004a17                InitDescriptor
                0xc0004a84                Seg2PhyAddr
                0xc0004ac5                Seg2PhyAddrLDT
                0xc0004b09                VirAddr2PhyAddr
                0xc0004b1f                v2l
                0xc0004b62                init_propt
                0xc0004c90                InitInterruptDesc
                0xc0004cec                ReloadGDT
 .text          0xc0004d77      0xaaf console.o
                0xc0004d77                select_console
                0xc0004db3                flush
                0xc0004dec                set_cursor
                0xc0004e4a                set_console_start_video_addr
                0xc0004ea8                put_key
                0xc0004f14                scroll_up
                0xc0004f56                scroll_down
                0xc0004fc1                out_char
                0xc0005168                tty_dev_read
                0xc0005192                tty_dev_write
                0xc00053ae                tty_do_read
                0xc0005476                tty_do_write
                0xc00055da                init_screen
                0xc000566e                init_tty
                0xc0005723                TaskTTY
 .text          0xc0005826      0x40f keyboard.o
                0xc0005826                keyboard_handler
                0xc00058aa                read_from_keyboard_buf
                0xc0005910                keyboard_read
                0xc0005a8f                init_keyboard_handler
                0xc0005aa3                in_process
 .text          0xc0005c35       0x85 open.o
                0xc0005c35                open
 .text          0xc0005cba       0x74 read.o
                0xc0005cba                read
 .text          0xc0005d2e       0x85 write.o
                0xc0005d2e                write
 .text          0xc0005db3       0x4c close.o
                0xc0005db3                close
 .text          0xc0005dff       0x3e wait.o
                0xc0005dff                wait
 .text          0xc0005e3d       0x29 exit.o
                0xc0005e3d                exit
 .text          0xc0005e66       0x5f fork.o
                0xc0005e66                fork
 .text          0xc0005ec5       0x25 getpid.o
                0xc0005ec5                getpid
 .text          0xc0005eea      0x235 exec.o
                0xc0005eea                exec
                0xc0005f55                execv
                0xc00060fa                execl
 .text          0xc000611f      0x138 mm/main.o
                0xc000611f                TaskMM
                0xc0006238                alloc_mem
 .text          0xc0006257      0x345 mm/exec.o
                0xc0006257                do_exec2
                0xc000626b                do_exec
 .text          0xc000659c      0x285 mm/forkexit.o
                0xc000659c                do_fork
                0xc0006607                do_exit
                0xc0006703                do_wait
                0xc00067cd                cleanup
 .text          0xc0006821      0xe6d mem/mem.o
                0xc0006821                init_bitmap
                0xc0006844                test_bit_val
                0xc00068ad                set_bit_val
                0xc0006928                set_bits
                0xc0006962                get_first_free_bit
                0xc00069a6                get_bits
                0xc0006a6e                get_a_page2
                0xc0006a9d                get_a_page
                0xc0006b2c                get_virtual_address
                0xc0006bbc                ptr_pde
                0xc0006bcf                ptr_pte
                0xc0006bf6                add_map_entry
                0xc0006c84                alloc_virtual_memory
                0xc0006cf1                get_physical_address
                0xc0006d23                alloc_memory
                0xc0006d85                get_a_virtual_page
                0xc0006daf                block2arena
                0xc0006dc5                sys_malloc
                0xc0006fdc                remove_map_entry
                0xc0006ffd                free_a_page
                0xc00070a4                sys_free
                0xc0007214                init_memory_block_desc
                0xc00072e5                init_memory2
                0xc000755c                init_memory
 .text          0xc000768e     0x261f kernel_main_old.o
                0xc000768e                untar
                0xc0007898                atoi
                0xc000793e                disp_int
                0xc0007967                do_page_fault
                0xc0007aa4                exception_handler
                0xc0007c75                exception_handler2
                0xc0007e16                init_internal_interrupt
                0xc0007f8b                test
                0xc0007fc1                disp_str_colour3
                0xc0007fc7                spurious_irq
                0xc0008040                init_keyboard
                0xc00080ad                init2
                0xc00080db                u_thread_a
                0xc00080f3                kernel_main2
                0xc0008359                TestTTY
                0xc00083f8                TestFS
                0xc0008460                wait_exit
                0xc000852e                INIT_fork
                0xc00086fd                simple_shell
                0xc00088d4                test_split_str
                0xc0008a61                test_shell
                0xc0008b3f                test_exec
                0xc0008c07                INIT
                0xc0008c14                TestA
                0xc0008c49                delay
                0xc0008c90                TestB
                0xc0008ca8                TestC
                0xc0008cdb                sys_get_ticks
                0xc0008ce5                sys_write
                0xc0008d39                milli_delay
                0xc0008d75                TaskSys
                0xc0008d7a                Printf
                0xc0008dd8                vsprintf
                0xc0008f84                printx
                0xc0008fc7                sys_printx
                0xc00090aa                spin
                0xc00090d0                panic
                0xc00090ee                assertion_failure
                0xc0009125                dead_lock
                0xc000912f                sys_send_msg
                0xc0009481                sys_receive_msg
                0xc00098dc                disp_str_colour_debug
                0xc00098e2                send_rec
                0xc00099de                block
                0xc0009a1a                unblock
                0xc0009a6a                get_ticks_ipc
                0xc0009ab5                itoa
                0xc0009b0b                i2a
                0xc0009b71                inform_int
                0xc0009c3e                strcmp
 .text          0xc0009cad      0x65d my_process.o
                0xc0009cad                create_user_process_address_space
                0xc0009d3d                user_process
                0xc0009e06                clone_pcb
                0xc0009f19                build_body_stack
                0xc000a07f                build_process_kernel_stack
                0xc000a0f6                fork_process
                0xc000a1c8                process_execute
 *fill*         0xc000a30a        0x6 
 .text          0xc000a310       0x15 switch_to.o
                0xc000a310                switch_to
 .text          0xc000a325      0x15b double_link_list.o
                0xc000a325                initDoubleLinkList
                0xc000a353                isListEmpty
                0xc000a374                appendToDoubleLinkList
                0xc000a3b9                insertToDoubleLinkList
                0xc000a3fa                popFromDoubleLinkList
                0xc000a44f                findElementInList
 .text          0xc000a480      0x183 thread.o
                0xc000a480                kernel_thread
                0xc000a498                thread_init
                0xc000a516                thread_create
                0xc000a54b                thread_start
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)
                0xc000b000                        . = ALIGN (CONSTANT (MAXPAGESIZE))
                0xc000b000                        . = SEGMENT_START ("rodata-segment", (ALIGN (CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 0x1))))

.rodata         0xc000b000      0xbe4
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0xc000b000       0xa2 kernel_main.o
 *fill*         0xc000b0a2        0x2 
 .rodata        0xc000b0a4      0x188 hd.o
 .rodata        0xc000b22c      0x1eb fs_main.o
                0xc000b22c                FSBUF_SIZE
 .rodata        0xc000b417        0x6 process.o
 .rodata        0xc000b41d       0x22 console.o
 .rodata        0xc000b43f       0x24 close.o
 .rodata        0xc000b463       0x1b fork.o
 .rodata        0xc000b47e       0x31 exec.o
 .rodata        0xc000b4af       0x11 mm/main.o
 .rodata        0xc000b4c0        0x2 mem/mem.o
 *fill*         0xc000b4c2       0x1e 
 .rodata        0xc000b4e0      0x6fd kernel_main_old.o
 .rodata        0xc000bbdd        0x7 my_process.o

.txt            0xc000bbe4       0xaa
 .txt           0xc000bbe4       0x82 string.o
                0xc000bbe4                Memcpy
                0xc000bc12                Memset
                0xc000bc31                Strcpy
                0xc000bc4b                Strlen
 .txt           0xc000bc66       0x28 hd_rdwt.o
                0xc000bc66                read_port
                0xc000bc7a                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0xc000bc90     0x17ac
 *(.eh_frame)
 .eh_frame      0xc000bc90       0xfc kernel_main.o
 .eh_frame      0xc000bd8c      0x244 hd.o
                                0x25c (size before relaxing)
 .eh_frame      0xc000bfd0      0x27c fs_main.o
                                0x294 (size before relaxing)
 .eh_frame      0xc000c24c       0xa0 process.o
                                 0xb8 (size before relaxing)
 .eh_frame      0xc000c2ec      0x100 protect.o
                                0x118 (size before relaxing)
 .eh_frame      0xc000c3ec      0x1e0 console.o
                                0x1f8 (size before relaxing)
 .eh_frame      0xc000c5cc       0xa0 keyboard.o
                                 0xb8 (size before relaxing)
 .eh_frame      0xc000c66c       0x20 open.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc000c68c       0x20 read.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc000c6ac       0x20 write.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc000c6cc       0x20 close.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc000c6ec       0x20 wait.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc000c70c       0x20 exit.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc000c72c       0x20 fork.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc000c74c       0x20 getpid.o
                                 0x38 (size before relaxing)
 .eh_frame      0xc000c76c       0x64 exec.o
                                 0x7c (size before relaxing)
 .eh_frame      0xc000c7d0       0x3c mm/main.o
                                 0x54 (size before relaxing)
 .eh_frame      0xc000c80c       0x4c mm/exec.o
                                 0x64 (size before relaxing)
 .eh_frame      0xc000c858       0x80 mm/forkexit.o
                                 0x98 (size before relaxing)
 .eh_frame      0xc000c8d8      0x304 mem/mem.o
                                0x31c (size before relaxing)
 .eh_frame      0xc000cbdc      0x640 kernel_main_old.o
                                0x658 (size before relaxing)
 .eh_frame      0xc000d21c       0xe0 my_process.o
                                 0xf8 (size before relaxing)
 .eh_frame      0xc000d2fc       0xc0 double_link_list.o
                                 0xd8 (size before relaxing)
 .eh_frame      0xc000d3bc       0x80 thread.o
                                 0x98 (size before relaxing)
 *(.eh_frame.*)

.sframe
 *(.sframe)
 *(.sframe.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0xc000e000                        . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.sframe
 *(.sframe)
 *(.sframe.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0xc000e000        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0xc000e000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0xc000e000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0xc000e000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0xc000e000        0x0
 *(.got)
 .got           0xc000e000        0x0 kernel_sub.o
 *(.igot)
                0xc000e000                        . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0xc000e000        0x0
 *(.got.plt)
 .got.plt       0xc000e000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0xc000e000        0x0 kernel_sub.o

.data           0xc000e000      0x700
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0xc000e000        0xf kernel_sub.o
 *fill*         0xc000e00f        0x1 
 .data          0xc000e010        0xf kernel.o
 .data          0xc000e01f        0x0 kernel_main.o
 .data          0xc000e01f        0x0 hd.o
 *fill*         0xc000e01f        0x1 
 .data          0xc000e020        0x0 syscall.o
 .data          0xc000e020        0x0 fs_main.o
 .data          0xc000e020       0xe0 global.o
                0xc000e020                user_task_table
                0xc000e060                sys_task_table
                0xc000e0ec                sys_call_table
 .data          0xc000e100        0x0 process.o
 .data          0xc000e100        0x0 protect.o
 .data          0xc000e100        0x0 console.o
 .data          0xc000e100      0x600 keyboard.o
                0xc000e100                keymap
 .data          0xc000e700        0x0 open.o
 .data          0xc000e700        0x0 read.o
 .data          0xc000e700        0x0 write.o
 .data          0xc000e700        0x0 close.o
 .data          0xc000e700        0x0 wait.o
 .data          0xc000e700        0x0 exit.o
 .data          0xc000e700        0x0 fork.o
 .data          0xc000e700        0x0 getpid.o
 .data          0xc000e700        0x0 exec.o
 .data          0xc000e700        0x0 mm/main.o
 .data          0xc000e700        0x0 mm/exec.o
 .data          0xc000e700        0x0 mm/forkexit.o
 .data          0xc000e700        0x0 mem/mem.o
 .data          0xc000e700        0x0 kernel_main_old.o
 .data          0xc000e700        0x0 my_process.o
 .data          0xc000e700        0x0 double_link_list.o
 .data          0xc000e700        0x0 thread.o

.data1
 *(.data1)
                0xc000e700                        _edata = .
                [!provide]                        PROVIDE (edata = .)
                0xc000e700                        . = .
                0xc000e700                        __bss_start = .

.bss            0xc000e700    0x756b0
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0xc000e700      0x800 kernel_sub.o
 .bss           0xc000ef00      0x800 kernel.o
 .bss           0xc000f700        0x0 kernel_main.o
 .bss           0xc000f700        0x0 hd.o
 .bss           0xc000f700        0x4 fs_main.o
                0xc000f700                c
 .bss           0xc000f704        0x0 global.o
 .bss           0xc000f704        0x0 process.o
 .bss           0xc000f704        0x0 protect.o
 .bss           0xc000f704        0x0 console.o
 .bss           0xc000f704        0x0 keyboard.o
 .bss           0xc000f704        0x0 open.o
 .bss           0xc000f704        0x0 read.o
 .bss           0xc000f704        0x0 write.o
 .bss           0xc000f704        0x0 close.o
 .bss           0xc000f704        0x0 wait.o
 .bss           0xc000f704        0x0 exit.o
 .bss           0xc000f704        0x0 fork.o
 .bss           0xc000f704        0x0 getpid.o
 .bss           0xc000f704        0x0 exec.o
 .bss           0xc000f704        0x0 mm/main.o
 .bss           0xc000f704        0x0 mm/exec.o
 .bss           0xc000f704        0x0 mm/forkexit.o
 .bss           0xc000f704        0x0 mem/mem.o
 .bss           0xc000f704        0x0 kernel_main_old.o
 .bss           0xc000f704        0x0 my_process.o
 .bss           0xc000f704        0x0 double_link_list.o
 .bss           0xc000f704        0x0 thread.o
 *(COMMON)
 *fill*         0xc000f704       0x1c 
 COMMON         0xc000f720     0x2811 kernel_main.o
                0xc000f720                current_tty
                0xc000f724                is_e0
                0xc000f728                idt_ptr
                0xc000f730                pid
                0xc000f734                KernelVirtualMemory
                0xc000f740                dis_pos
                0xc000f744                k_reenter
                0xc000f760                gdt
                0xc000fb60                proc_ready_table
                0xc000fb64                pcaller
                0xc000fb80                keyboard_buffer
                0xc000fd8c                pcb_list
                0xc000fda0                tty_table
                0xc0011620                tss
                0xc001168c                KernelPool
                0xc001169c                counter
                0xc00116a0                key_pressed
                0xc00116a4                is_shift
                0xc00116a8                gdt_ptr
                0xc00116c0                idt
                0xc0011ec0                ticks
                0xc0011ec4                UserPool
                0xc0011ed4                all_pcb_list
                0xc0011f00                console_table
                0xc0011f30                is_disp
 *fill*         0xc0011f31        0xf 
 COMMON         0xc0011f40      0x440 hd.o
                0xc0011f40                hd_info
                0xc0012180                hd_cache
 COMMON         0xc0012380      0xe68 fs_main.o
                0xc0012380                file_desc_table
                0xc0012780                phy_super_block_buf
                0xc0012784                phy_fsbuf
                0xc00127a0                inode_table
                0xc00131a0                super_block_buf
                0xc00131a4                fsbuf
                0xc00131c0                root
 *fill*         0xc00131e8       0x18 
 COMMON         0xc0013200    0x70bb0 global.o
                0xc0013200                proc_stack
                0xc0083200                kernel_mem_block_decs_array
                0xc0083300                proc_table
                0xc0083db0                        . = ALIGN ((. != 0x0)?0x4:0x1)
                0xc0083db0                        . = ALIGN (0x4)
                0xc0083db0                        . = SEGMENT_START ("ldata-segment", .)
                0xc0083db0                        . = ALIGN (0x4)
                0xc0083db0                        _end = .
                [!provide]                        PROVIDE (end = .)
                0xc0083db0                        . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2c
 *(.comment)
 .comment       0x00000000       0x2c kernel_main.o
                                 0x2d (size before relaxing)
 .comment       0x0000002c       0x2d hd.o
 .comment       0x0000002c       0x2d fs_main.o
 .comment       0x0000002c       0x2d global.o
 .comment       0x0000002c       0x2d process.o
 .comment       0x0000002c       0x2d protect.o
 .comment       0x0000002c       0x2d console.o
 .comment       0x0000002c       0x2d keyboard.o
 .comment       0x0000002c       0x2d open.o
 .comment       0x0000002c       0x2d read.o
 .comment       0x0000002c       0x2d write.o
 .comment       0x0000002c       0x2d close.o
 .comment       0x0000002c       0x2d wait.o
 .comment       0x0000002c       0x2d exit.o
 .comment       0x0000002c       0x2d fork.o
 .comment       0x0000002c       0x2d getpid.o
 .comment       0x0000002c       0x2d exec.o
 .comment       0x0000002c       0x2d mm/main.o
 .comment       0x0000002c       0x2d mm/exec.o
 .comment       0x0000002c       0x2d mm/forkexit.o
 .comment       0x0000002c       0x2d mem/mem.o
 .comment       0x0000002c       0x2d kernel_main_old.o
 .comment       0x0000002c       0x2d my_process.o
 .comment       0x0000002c       0x2d double_link_list.o
 .comment       0x0000002c       0x2d thread.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x318
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 kernel_main.o
 .debug_aranges
                0x00000020       0x20 hd.o
 .debug_aranges
                0x00000040       0x20 fs_main.o
 .debug_aranges
                0x00000060       0x18 global.o
 .debug_aranges
                0x00000078       0x20 process.o
 .debug_aranges
                0x00000098       0x20 protect.o
 .debug_aranges
                0x000000b8       0x20 console.o
 .debug_aranges
                0x000000d8       0x20 keyboard.o
 .debug_aranges
                0x000000f8       0x20 open.o
 .debug_aranges
                0x00000118       0x20 read.o
 .debug_aranges
                0x00000138       0x20 write.o
 .debug_aranges
                0x00000158       0x20 close.o
 .debug_aranges
                0x00000178       0x20 wait.o
 .debug_aranges
                0x00000198       0x20 exit.o
 .debug_aranges
                0x000001b8       0x20 fork.o
 .debug_aranges
                0x000001d8       0x20 getpid.o
 .debug_aranges
                0x000001f8       0x20 exec.o
 .debug_aranges
                0x00000218       0x20 mm/main.o
 .debug_aranges
                0x00000238       0x20 mm/exec.o
 .debug_aranges
                0x00000258       0x20 mm/forkexit.o
 .debug_aranges
                0x00000278       0x20 mem/mem.o
 .debug_aranges
                0x00000298       0x20 kernel_main_old.o
 .debug_aranges
                0x000002b8       0x20 my_process.o
 .debug_aranges
                0x000002d8       0x20 double_link_list.o
 .debug_aranges
                0x000002f8       0x20 thread.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000    0x19af9
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0xe27 kernel_main.o
 .debug_info    0x00000e27     0x1629 hd.o
 .debug_info    0x00002450     0x1dec fs_main.o
 .debug_info    0x0000423c      0xd61 global.o
 .debug_info    0x00004f9d      0xe54 process.o
 .debug_info    0x00005df1     0x104a protect.o
 .debug_info    0x00006e3b     0x10fb console.o
 .debug_info    0x00007f36      0xea3 keyboard.o
 .debug_info    0x00008dd9      0xcb5 open.o
 .debug_info    0x00009a8e      0xcdd read.o
 .debug_info    0x0000a76b      0xcf4 write.o
 .debug_info    0x0000b45f      0xc7b close.o
 .debug_info    0x0000c0da      0xc86 wait.o
 .debug_info    0x0000cd60      0xc78 exit.o
 .debug_info    0x0000d9d8      0xc6d fork.o
 .debug_info    0x0000e645      0xc6d getpid.o
 .debug_info    0x0000f2b2      0xdd8 exec.o
 .debug_info    0x0001008a      0xc73 mm/main.o
 .debug_info    0x00010cfd      0xf84 mm/exec.o
 .debug_info    0x00011c81      0xe47 mm/forkexit.o
 .debug_info    0x00012ac8     0x18f6 mem/mem.o
 .debug_info    0x000143be     0x2796 kernel_main_old.o
 .debug_info    0x00016b54     0x121d my_process.o
 .debug_info    0x00017d71      0xe74 double_link_list.o
 .debug_info    0x00018be5      0xf14 thread.o

.debug_abbrev   0x00000000     0x336c
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1a9 kernel_main.o
 .debug_abbrev  0x000001a9      0x2d0 hd.o
 .debug_abbrev  0x00000479      0x2dc fs_main.o
 .debug_abbrev  0x00000755      0x157 global.o
 .debug_abbrev  0x000008ac      0x201 process.o
 .debug_abbrev  0x00000aad      0x212 protect.o
 .debug_abbrev  0x00000cbf      0x279 console.o
 .debug_abbrev  0x00000f38      0x1fb keyboard.o
 .debug_abbrev  0x00001133      0x1c5 open.o
 .debug_abbrev  0x000012f8      0x1c8 read.o
 .debug_abbrev  0x000014c0      0x1db write.o
 .debug_abbrev  0x0000169b      0x19d close.o
 .debug_abbrev  0x00001838      0x19f wait.o
 .debug_abbrev  0x000019d7      0x19b exit.o
 .debug_abbrev  0x00001b72      0x18a fork.o
 .debug_abbrev  0x00001cfc      0x18a getpid.o
 .debug_abbrev  0x00001e86      0x1d3 exec.o
 .debug_abbrev  0x00002059      0x1f5 mm/main.o
 .debug_abbrev  0x0000224e      0x1f5 mm/exec.o
 .debug_abbrev  0x00002443      0x204 mm/forkexit.o
 .debug_abbrev  0x00002647      0x2ea mem/mem.o
 .debug_abbrev  0x00002931      0x3e3 kernel_main_old.o
 .debug_abbrev  0x00002d14      0x23e my_process.o
 .debug_abbrev  0x00002f52      0x1f8 double_link_list.o
 .debug_abbrev  0x0000314a      0x222 thread.o

.debug_line     0x00000000     0x4336
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000      0x154 kernel_main.o
 .debug_line    0x00000154      0x590 hd.o
 .debug_line    0x000006e4      0xbf8 fs_main.o
 .debug_line    0x000012dc       0x95 global.o
 .debug_line    0x00001371      0x18d process.o
 .debug_line    0x000014fe      0x1ef protect.o
 .debug_line    0x000016ed      0x53c console.o
 .debug_line    0x00001c29      0x296 keyboard.o
 .debug_line    0x00001ebf       0xbc open.o
 .debug_line    0x00001f7b       0xb7 read.o
 .debug_line    0x00002032       0xbc write.o
 .debug_line    0x000020ee       0xad close.o
 .debug_line    0x0000219b       0xb7 wait.o
 .debug_line    0x00002252       0xa0 exit.o
 .debug_line    0x000022f2       0xae fork.o
 .debug_line    0x000023a0       0xa0 getpid.o
 .debug_line    0x00002440      0x15b exec.o
 .debug_line    0x0000259b       0xe8 mm/main.o
 .debug_line    0x00002683      0x1d3 mm/exec.o
 .debug_line    0x00002856      0x18a mm/forkexit.o
 .debug_line    0x000029e0      0x67a mem/mem.o
 .debug_line    0x0000305a      0xd54 kernel_main_old.o
 .debug_line    0x00003dae      0x2cb my_process.o
 .debug_line    0x00004079      0x184 double_link_list.o
 .debug_line    0x000041fd      0x139 thread.o

.debug_frame
 *(.debug_frame)

.debug_str      0x00000000     0x1bc4
 *(.debug_str)
 .debug_str     0x00000000     0x1bc4 kernel_main.o
                                0x5b7 (size before relaxing)
 .debug_str     0x00001bc4      0x83f hd.o
 .debug_str     0x00001bc4      0xa31 fs_main.o
 .debug_str     0x00001bc4      0x56c global.o
 .debug_str     0x00001bc4      0x590 process.o
 .debug_str     0x00001bc4      0x685 protect.o
 .debug_str     0x00001bc4      0x66e console.o
 .debug_str     0x00001bc4      0x5dc keyboard.o
 .debug_str     0x00001bc4      0x50f open.o
 .debug_str     0x00001bc4      0x50a read.o
 .debug_str     0x00001bc4      0x515 write.o
 .debug_str     0x00001bc4      0x4e0 close.o
 .debug_str     0x00001bc4      0x4e5 wait.o
 .debug_str     0x00001bc4      0x4e5 exit.o
 .debug_str     0x00001bc4      0x4de fork.o
 .debug_str     0x00001bc4      0x4e2 getpid.o
 .debug_str     0x00001bc4      0x507 exec.o
 .debug_str     0x00001bc4      0x4d2 mm/main.o
 .debug_str     0x00001bc4      0x652 mm/exec.o
 .debug_str     0x00001bc4      0x542 mm/forkexit.o
 .debug_str     0x00001bc4      0x906 mem/mem.o
 .debug_str     0x00001bc4      0xad2 kernel_main_old.o
 .debug_str     0x00001bc4      0x7a8 my_process.o
 .debug_str     0x00001bc4      0x5e2 double_link_list.o
 .debug_str     0x00001bc4      0x64d thread.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x78
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x48 hd.o
 .debug_ranges  0x00000048       0x18 mm/exec.o
 .debug_ranges  0x00000060       0x18 kernel_main_old.o

.debug_addr
 *(.debug_addr)

.debug_line_str
 *(.debug_line_str)

.debug_loclists
 *(.debug_loclists)

.debug_macro
 *(.debug_macro)

.debug_names
 *(.debug_names)

.debug_rnglists
 *(.debug_rnglists)

.debug_str_offsets
 *(.debug_str_offsets)

.debug_sup
 *(.debug_sup)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
