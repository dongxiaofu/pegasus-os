
Allocating common symbols
Common symbol       size              file

current_tty         0x4               kernel_main.o
file_desc_table     0x400             fs_main.o
is_e0               0x1               kernel_main.o
idt_ptr             0x6               kernel_main.o
KernelVirtualMemory
                    0xc               kernel_main.o
inode_table         0xa00             fs_main.o
dis_pos             0x4               kernel_main.o
k_reenter           0x4               kernel_main.o
gdt                 0x400             kernel_main.o
proc_ready_table    0x4               kernel_main.o
hd_info             0x224             hd.o
proc_stack          0x70000           global.o
pcaller             0x4               kernel_main.o
keyboard_buffer     0x20c             kernel_main.o
pcb_list            0x18              kernel_main.o
tty_table           0x186c            kernel_main.o
tss                 0x6c              kernel_main.o
KernelPool          0x10              kernel_main.o
root                0x28              fs_main.o
counter             0x4               kernel_main.o
key_pressed         0x4               kernel_main.o
is_shift            0x1               kernel_main.o
gdt_ptr             0x6               kernel_main.o
idt                 0x800             kernel_main.o
ticks               0x4               kernel_main.o
UserPool            0x10              kernel_main.o
console_table       0x30              kernel_main.o
is_disp             0x1               kernel_main.o
proc_table          0x2c0             global.o
hd_cache            0x200             hd.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 global.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 read.o
 .note.GNU-stack
                0x0000000000000000        0x0 write.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 wait.o
 .note.GNU-stack
                0x0000000000000000        0x0 exit.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 getpid.o
 .note.GNU-stack
                0x0000000000000000        0x0 exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mem/mem.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel_main_old.o
 .note.GNU-stack
                0x0000000000000000        0x0 my_process.o
 .note.GNU-stack
                0x0000000000000000        0x0 double_link_list.o
 .note.GNU-stack
                0x0000000000000000        0x0 thread.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD kernel_sub.o
LOAD kernel.o
LOAD string.o
LOAD kernel_main.o
LOAD hd.o
LOAD syscall.o
LOAD fs_main.o
LOAD global.o
LOAD hd_rdwt.o
LOAD process.o
LOAD protect.o
LOAD console.o
LOAD keyboard.o
LOAD open.o
LOAD read.o
LOAD write.o
LOAD close.o
LOAD wait.o
LOAD exit.o
LOAD fork.o
LOAD getpid.o
LOAD exec.o
LOAD mm/main.o
LOAD mm/exec.o
LOAD mm/forkexit.o
LOAD mem/mem.o
LOAD kernel_main_old.o
LOAD my_process.o
LOAD switch_to.o
LOAD double_link_list.o
LOAD thread.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel_sub.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel_sub.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel_sub.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel_sub.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x8618
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0x76 kernel_sub.o
                0x00000000c0001500                _start
 *fill*         0x00000000c0001576        0xa 
 .text          0x00000000c0001580      0x323 kernel.o
                0x00000000c0001580                InterruptTest
                0x00000000c000158c                disp_str
                0x00000000c00015c7                disp_str_colour
                0x00000000c0001603                divide_zero_fault
                0x00000000c0001609                single_step_fault
                0x00000000c000160f                non_maskable_interrupt
                0x00000000c0001615                breakpoint_trap
                0x00000000c000161b                overflow_trap
                0x00000000c0001621                bound_range_exceeded_fault
                0x00000000c0001627                invalid_opcode_fault
                0x00000000c000162d                coprocessor_not_available_fault
                0x00000000c0001633                double_fault_exception_abort
                0x00000000c0001637                coprocessor_segment_overrun
                0x00000000c000163d                invalid_task_state_segment_fault
                0x00000000c0001641                segment_not_present_fault
                0x00000000c0001645                stack_exception_fault
                0x00000000c0001649                general_protection_exception_fault
                0x00000000c000164d                page_fault
                0x00000000c0001651                coprocessor_error_fault
                0x00000000c0001657                align_check_fault
                0x00000000c000165b                simd_float_exception_fault
                0x00000000c000166a                hwint0
                0x00000000c0001698                hwint1
                0x00000000c00016e1                hwint14
                0x00000000c0001726                sys_call
                0x00000000c0001770                restart
                0x00000000c0001791                in_byte
                0x00000000c000179d                out_byte
                0x00000000c00017bf                disable_int
                0x00000000c00017c1                enable_int
                0x00000000c0001857                enable_8259A_casecade_irq
                0x00000000c0001861                disable_8259A_casecade_irq
                0x00000000c000186b                enable_8259A_slave_winchester_irq
                0x00000000c0001875                disable_8259A_slave_winchester_irq
                0x00000000c000187f                update_cr3
                0x00000000c000188c                update_tss
                0x00000000c000189b                get_running_thread_pcb
 .text          0x00000000c00018a3      0x1bd kernel_main.o
                0x00000000c00018a3                kernel_main
                0x00000000c000194f                init
                0x00000000c000198c                kernel_thread_a
                0x00000000c00019ee                kernel_thread_b
                0x00000000c0001a04                kernel_thread_c
                0x00000000c0001a1a                kernel_thread_d
                0x00000000c0001a30                user_proc_a
                0x00000000c0001a48                user_proc_b
 .text          0x00000000c0001a60      0xc69 hd.o
                0x00000000c0001a60                TaskHD
                0x00000000c0001a72                init_hd
                0x00000000c0001a8c                hd_handle
                0x00000000c0001b51                hd_cmd_out
                0x00000000c0001c53                hd_identify
                0x00000000c0001d0a                print_hdinfo
                0x00000000c0001e98                print_dpt_entry
                0x00000000c0001f04                get_partition_table
                0x00000000c0001fe3                partition
                0x00000000c00021fd                hd_open
                0x00000000c000224c                get_hd_ioctl
                0x00000000c00022a5                wait_for
                0x00000000c00022d6                interrupt_wait
                0x00000000c00022f5                hd_rdwt
                0x00000000c0002527                hd_handler
                0x00000000c0002553                waitfor
                0x00000000c00025a4                print_hd_info
                0x00000000c0002691                is_empty
 *fill*         0x00000000c00026c9        0x7 
 .text          0x00000000c00026d0       0x74 syscall.o
                0x00000000c00026d0                get_ticks
                0x00000000c00026d8                write2
                0x00000000c00026e8                write_debug
                0x00000000c0002708                send_msg
                0x00000000c000272e                receive_msg
 .text          0x00000000c0002744     0x1ec8 fs_main.o
                0x00000000c0002744                task_fs
                0x00000000c000287f                rd_wt
                0x00000000c0002923                mkfs
                0x00000000c0002ee3                init_fs
                0x00000000c0002f12                do_open
                0x00000000c00030f3                search_file
                0x00000000c0003223                strip_path
                0x00000000c00032ef                get_inode
                0x00000000c00034b1                create_file
                0x00000000c00035bc                alloc_imap_bit
                0x00000000c00036b9                alloc_smap_bit
                0x00000000c000385a                new_inode
                0x00000000c0003978                new_dir_entry
                0x00000000c0003b80                do_unlink
                0x00000000c0004050                do_rdwt
                0x00000000c00043c0                sync_inode
                0x00000000c0004514                put_inode
                0x00000000c0004552                do_close
                0x00000000c00045a4                get_super_block
 .text          0x00000000c000460c        0x0 global.o
 .text          0x00000000c000460c      0x15a process.o
                0x00000000c000460c                check
                0x00000000c0004678                schedule_process
                0x00000000c000471d                clock_handler
                0x00000000c000472b                pid2proc
                0x00000000c0004747                proc2pid
 .text          0x00000000c0004766      0x35d protect.o
                0x00000000c0004766                InitDescriptor
                0x00000000c00047d3                Seg2PhyAddr
                0x00000000c0004814                Seg2PhyAddrLDT
                0x00000000c0004855                VirAddr2PhyAddr
                0x00000000c000486b                v2l
                0x00000000c00048ae                init_propt
                0x00000000c00049dc                InitInterruptDesc
                0x00000000c0004a38                ReloadGDT
 .text          0x00000000c0004ac3      0x941 console.o
                0x00000000c0004ac3                select_console
                0x00000000c0004aff                flush
                0x00000000c0004b38                set_cursor
                0x00000000c0004b96                set_console_start_video_addr
                0x00000000c0004bf4                put_key
                0x00000000c0004c60                scroll_up
                0x00000000c0004ca2                scroll_down
                0x00000000c0004d0d                out_char
                0x00000000c0004eb4                tty_dev_read
                0x00000000c0004ede                tty_dev_write
                0x00000000c00050e5                tty_do_read
                0x00000000c0005176                tty_do_write
                0x00000000c00052be                init_screen
                0x00000000c0005352                init_tty
                0x00000000c00053ec                TaskTTY
 .text          0x00000000c0005404      0x407 keyboard.o
                0x00000000c0005404                keyboard_handler
                0x00000000c0005486                read_from_keyboard_buf
                0x00000000c00054e6                keyboard_read
                0x00000000c0005665                init_keyboard_handler
                0x00000000c0005679                in_process
 .text          0x00000000c000580b       0x55 open.o
                0x00000000c000580b                open
 .text          0x00000000c0005860       0x37 read.o
                0x00000000c0005860                read
 .text          0x00000000c0005897       0x37 write.o
                0x00000000c0005897                write
 .text          0x00000000c00058ce       0x4c close.o
                0x00000000c00058ce                close
 .text          0x00000000c000591a       0x3e wait.o
                0x00000000c000591a                wait
 .text          0x00000000c0005958       0x29 exit.o
                0x00000000c0005958                exit
 .text          0x00000000c0005981       0x5f fork.o
                0x00000000c0005981                fork
 .text          0x00000000c00059e0       0x25 getpid.o
                0x00000000c00059e0                getpid
 .text          0x00000000c0005a05      0x235 exec.o
                0x00000000c0005a05                exec
                0x00000000c0005a70                execv
                0x00000000c0005c15                execl
 .text          0x00000000c0005c3a      0x130 mm/main.o
                0x00000000c0005c3a                TaskMM
                0x00000000c0005d4b                alloc_mem
 .text          0x00000000c0005d6a      0x345 mm/exec.o
                0x00000000c0005d6a                do_exec2
                0x00000000c0005d7e                do_exec
 .text          0x00000000c00060af      0x3f5 mm/forkexit.o
                0x00000000c00060af                do_fork
                0x00000000c000629f                do_exit
                0x00000000c0006392                do_wait
                0x00000000c000645c                cleanup
 .text          0x00000000c00064a4      0x88f mem/mem.o
                0x00000000c00064a4                init_bitmap
                0x00000000c00064c7                test_bit_val
                0x00000000c0006530                set_bit_val
                0x00000000c00065ab                set_bits
                0x00000000c00065e5                get_first_free_bit
                0x00000000c0006629                get_bits
                0x00000000c00066f1                get_a_page2
                0x00000000c0006720                get_a_page
                0x00000000c00067af                get_virtual_address
                0x00000000c000681a                ptr_pde
                0x00000000c000682d                ptr_pte
                0x00000000c0006854                add_map_entry
                0x00000000c00068e2                get_physical_address
                0x00000000c0006914                alloc_memory
                0x00000000c0006970                get_a_virtual_page
                0x00000000c000699a                init_memory2
                0x00000000c0006c11                init_memory
 .text          0x00000000c0006d33     0x28f7 kernel_main_old.o
                0x00000000c0006d33                untar
                0x00000000c0006f3d                atoi
                0x00000000c0006fe3                disp_int
                0x00000000c000700c                do_page_fault
                0x00000000c000713f                exception_handler
                0x00000000c0007306                exception_handler2
                0x00000000c00074a7                init_internal_interrupt
                0x00000000c000761c                test
                0x00000000c0007652                disp_str_colour3
                0x00000000c0007658                spurious_irq
                0x00000000c00076d1                init_keyboard
                0x00000000c000773e                init2
                0x00000000c000776c                u_thread_a
                0x00000000c0007784                kernel_main2
                0x00000000c00079bd                TestFS
                0x00000000c0007d91                wait_exit
                0x00000000c0007e5f                INIT_fork
                0x00000000c000814f                simple_shell
                0x00000000c0008326                test_split_str
                0x00000000c00084b3                test_shell
                0x00000000c0008591                test_exec
                0x00000000c0008659                INIT
                0x00000000c0008666                TestA
                0x00000000c000869b                delay
                0x00000000c00086e2                TestB
                0x00000000c00086fa                TestC
                0x00000000c000872d                sys_get_ticks
                0x00000000c0008737                sys_write
                0x00000000c0008788                milli_delay
                0x00000000c00087c4                TaskSys
                0x00000000c00087fc                Printf
                0x00000000c000885a                vsprintf
                0x00000000c0008a06                printx
                0x00000000c0008a49                sys_printx
                0x00000000c0008b26                spin
                0x00000000c0008b2b                panic
                0x00000000c0008b49                assertion_failure
                0x00000000c0008b80                dead_lock
                0x00000000c0008b8a                sys_send_msg
                0x00000000c0008ea2                sys_receive_msg
                0x00000000c00092e7                disp_str_colour_debug
                0x00000000c00092ed                send_rec
                0x00000000c00093d3                block
                0x00000000c00093e5                unblock
                0x00000000c0009419                get_ticks_ipc
                0x00000000c0009464                itoa
                0x00000000c00094ba                i2a
                0x00000000c0009520                inform_int
                0x00000000c00095bb                strcmp
 .text          0x00000000c000962a      0x24e my_process.o
                0x00000000c000962a                create_user_process_address_space
                0x00000000c00096ba                user_process
                0x00000000c0009783                process_execute
 *fill*         0x00000000c0009878        0x8 
 .text          0x00000000c0009880       0x15 switch_to.o
                0x00000000c0009880                switch_to
 .text          0x00000000c0009895      0x169 double_link_list.o
                0x00000000c0009895                initDoubleLinkList
                0x00000000c00098c3                isListEmpty
                0x00000000c00098e4                appendToDoubleLinkList
                0x00000000c0009950                insertToDoubleLinkList
                0x00000000c00099a6                popFromDoubleLinkList
 .text          0x00000000c00099fe      0x11a thread.o
                0x00000000c00099fe                kernel_thread
                0x00000000c0009a16                thread_init
                0x00000000c0009a61                thread_create
                0x00000000c0009a96                thread_start
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c0009b20      0xb51
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0009b20       0x8d kernel_main.o
 .rodata        0x00000000c0009bad      0x10e hd.o
 *fill*         0x00000000c0009cbb        0x1 
 .rodata        0x00000000c0009cbc      0x173 fs_main.o
                0x00000000c0009cbc                FSBUF_SIZE
 .rodata        0x00000000c0009e2f        0x6 process.o
 .rodata        0x00000000c0009e35        0xa console.o
 .rodata        0x00000000c0009e3f       0x24 close.o
 .rodata        0x00000000c0009e63       0x1b fork.o
 .rodata        0x00000000c0009e7e       0x31 exec.o
 .rodata        0x00000000c0009eaf       0x11 mm/main.o
 .rodata        0x00000000c0009ec0       0x37 mm/forkexit.o
 .rodata        0x00000000c0009ef7        0x2 mem/mem.o
 *fill*         0x00000000c0009ef9        0x7 
 .rodata        0x00000000c0009f00      0x771 kernel_main_old.o

.txt            0x00000000c000a671       0xaa
 .txt           0x00000000c000a671       0x82 string.o
                0x00000000c000a671                Memcpy
                0x00000000c000a69f                Memset
                0x00000000c000a6be                Strcpy
                0x00000000c000a6d8                Strlen
 .txt           0x00000000c000a6f3       0x28 hd_rdwt.o
                0x00000000c000a6f3                read_port
                0x00000000c000a707                write_port

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c000a71c     0x1628
 *(.eh_frame)
 .eh_frame      0x00000000c000a71c       0xfc kernel_main.o
 .eh_frame      0x00000000c000a818      0x244 hd.o
                                        0x25c (size before relaxing)
 .eh_frame      0x00000000c000aa5c      0x288 fs_main.o
                                        0x2a0 (size before relaxing)
 .eh_frame      0x00000000c000ace4       0xa0 process.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000ad84      0x100 protect.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c000ae84      0x1e0 console.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x00000000c000b064       0xa0 keyboard.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000b104       0x20 open.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b124       0x20 read.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b144       0x20 write.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b164       0x20 close.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b184       0x20 wait.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b1a4       0x20 exit.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b1c4       0x20 fork.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b1e4       0x20 getpid.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c000b204       0x64 exec.o
                                         0x7c (size before relaxing)
 .eh_frame      0x00000000c000b268       0x3c mm/main.o
                                         0x54 (size before relaxing)
 .eh_frame      0x00000000c000b2a4       0x4c mm/exec.o
                                         0x64 (size before relaxing)
 .eh_frame      0x00000000c000b2f0       0x90 mm/forkexit.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x00000000c000b380      0x224 mem/mem.o
                                        0x23c (size before relaxing)
 .eh_frame      0x00000000c000b5a4      0x620 kernel_main_old.o
                                        0x638 (size before relaxing)
 .eh_frame      0x00000000c000bbc4       0x60 my_process.o
                                         0x78 (size before relaxing)
 .eh_frame      0x00000000c000bc24       0xa0 double_link_list.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000bcc4       0x80 thread.o
                                         0x98 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c000d000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c000d000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c000d000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c000d000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c000d000        0x0
 *(.got)
 .got           0x00000000c000d000        0x0 kernel_sub.o
 *(.igot)
                0x00000000c000d000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c000d000        0x0
 *(.got.plt)
 .got.plt       0x00000000c000d000        0x0 kernel_sub.o
 *(.igot.plt)
 .igot.plt      0x00000000c000d000        0x0 kernel_sub.o

.data           0x00000000c000d000      0x720
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000d000        0xf kernel_sub.o
 *fill*         0x00000000c000d00f        0x1 
 .data          0x00000000c000d010        0xf kernel.o
 .data          0x00000000c000d01f        0x0 kernel_main.o
 .data          0x00000000c000d01f        0x0 hd.o
 *fill*         0x00000000c000d01f        0x1 
 .data          0x00000000c000d020        0x0 syscall.o
 .data          0x00000000c000d020        0x8 fs_main.o
                0x00000000c000d020                fsbuf
                0x00000000c000d024                super_block_buf
 *fill*         0x00000000c000d028       0x18 
 .data          0x00000000c000d040       0xe0 global.o
                0x00000000c000d040                user_task_table
                0x00000000c000d080                sys_task_table
                0x00000000c000d10c                sys_call_table
 .data          0x00000000c000d120        0x0 process.o
 .data          0x00000000c000d120        0x0 protect.o
 .data          0x00000000c000d120        0x0 console.o
 .data          0x00000000c000d120      0x600 keyboard.o
                0x00000000c000d120                keymap
 .data          0x00000000c000d720        0x0 open.o
 .data          0x00000000c000d720        0x0 read.o
 .data          0x00000000c000d720        0x0 write.o
 .data          0x00000000c000d720        0x0 close.o
 .data          0x00000000c000d720        0x0 wait.o
 .data          0x00000000c000d720        0x0 exit.o
 .data          0x00000000c000d720        0x0 fork.o
 .data          0x00000000c000d720        0x0 getpid.o
 .data          0x00000000c000d720        0x0 exec.o
 .data          0x00000000c000d720        0x0 mm/main.o
 .data          0x00000000c000d720        0x0 mm/exec.o
 .data          0x00000000c000d720        0x0 mm/forkexit.o
 .data          0x00000000c000d720        0x0 mem/mem.o
 .data          0x00000000c000d720        0x0 kernel_main_old.o
 .data          0x00000000c000d720        0x0 my_process.o
 .data          0x00000000c000d720        0x0 double_link_list.o
 .data          0x00000000c000d720        0x0 thread.o

.data1
 *(.data1)
                0x00000000c000d720                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c000d720                . = .
                0x00000000c000d720                __bss_start = .

.bss            0x00000000c000d720    0x74d80
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c000d720      0x800 kernel_sub.o
 .bss           0x00000000c000df20      0x800 kernel.o
 .bss           0x00000000c000e720        0x0 kernel_main.o
 .bss           0x00000000c000e720        0x0 hd.o
 .bss           0x00000000c000e720        0x4 fs_main.o
                0x00000000c000e720                c
 .bss           0x00000000c000e724        0x0 global.o
 .bss           0x00000000c000e724        0x0 process.o
 .bss           0x00000000c000e724        0x0 protect.o
 .bss           0x00000000c000e724        0x0 console.o
 .bss           0x00000000c000e724        0x0 keyboard.o
 .bss           0x00000000c000e724        0x0 open.o
 .bss           0x00000000c000e724        0x0 read.o
 .bss           0x00000000c000e724        0x0 write.o
 .bss           0x00000000c000e724        0x0 close.o
 .bss           0x00000000c000e724        0x0 wait.o
 .bss           0x00000000c000e724        0x0 exit.o
 .bss           0x00000000c000e724        0x0 fork.o
 .bss           0x00000000c000e724        0x0 getpid.o
 .bss           0x00000000c000e724        0x0 exec.o
 .bss           0x00000000c000e724        0x0 mm/main.o
 .bss           0x00000000c000e724        0x0 mm/exec.o
 .bss           0x00000000c000e724        0x0 mm/forkexit.o
 .bss           0x00000000c000e724        0x0 mem/mem.o
 .bss           0x00000000c000e724        0x0 kernel_main_old.o
 .bss           0x00000000c000e724        0x0 my_process.o
 .bss           0x00000000c000e724        0x0 double_link_list.o
 .bss           0x00000000c000e724        0x0 thread.o
 *(COMMON)
 *fill*         0x00000000c000e724       0x1c 
 COMMON         0x00000000c000e740     0x2811 kernel_main.o
                0x00000000c000e740                current_tty
                0x00000000c000e744                is_e0
                0x00000000c000e748                idt_ptr
                0x00000000c000e750                KernelVirtualMemory
                0x00000000c000e75c                dis_pos
                0x00000000c000e760                k_reenter
                0x00000000c000e780                gdt
                0x00000000c000eb80                proc_ready_table
                0x00000000c000eb84                pcaller
                0x00000000c000eba0                keyboard_buffer
                0x00000000c000edac                pcb_list
                0x00000000c000ede0                tty_table
                0x00000000c0010660                tss
                0x00000000c00106cc                KernelPool
                0x00000000c00106dc                counter
                0x00000000c00106e0                key_pressed
                0x00000000c00106e4                is_shift
                0x00000000c00106e8                gdt_ptr
                0x00000000c0010700                idt
                0x00000000c0010f00                ticks
                0x00000000c0010f04                UserPool
                0x00000000c0010f20                console_table
                0x00000000c0010f50                is_disp
 *fill*         0x00000000c0010f51        0xf 
 COMMON         0x00000000c0010f60      0x440 hd.o
                0x00000000c0010f60                hd_info
                0x00000000c00111a0                hd_cache
 COMMON         0x00000000c00113a0      0xe28 fs_main.o
                0x00000000c00113a0                file_desc_table
                0x00000000c00117a0                inode_table
                0x00000000c00121a0                root
 *fill*         0x00000000c00121c8       0x18 
 COMMON         0x00000000c00121e0    0x702c0 global.o
                0x00000000c00121e0                proc_stack
                0x00000000c00821e0                proc_table
                0x00000000c00824a0                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c00824a0                . = ALIGN (0x4)
                0x00000000c00824a0                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c00824a0                . = ALIGN (0x4)
                0x00000000c00824a0                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c00824a0                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel_main.o
                                         0x2d (size before relaxing)
 .comment       0x000000000000002c       0x2d hd.o
 .comment       0x000000000000002c       0x2d fs_main.o
 .comment       0x000000000000002c       0x2d global.o
 .comment       0x000000000000002c       0x2d process.o
 .comment       0x000000000000002c       0x2d protect.o
 .comment       0x000000000000002c       0x2d console.o
 .comment       0x000000000000002c       0x2d keyboard.o
 .comment       0x000000000000002c       0x2d open.o
 .comment       0x000000000000002c       0x2d read.o
 .comment       0x000000000000002c       0x2d write.o
 .comment       0x000000000000002c       0x2d close.o
 .comment       0x000000000000002c       0x2d wait.o
 .comment       0x000000000000002c       0x2d exit.o
 .comment       0x000000000000002c       0x2d fork.o
 .comment       0x000000000000002c       0x2d getpid.o
 .comment       0x000000000000002c       0x2d exec.o
 .comment       0x000000000000002c       0x2d mm/main.o
 .comment       0x000000000000002c       0x2d mm/exec.o
 .comment       0x000000000000002c       0x2d mm/forkexit.o
 .comment       0x000000000000002c       0x2d mem/mem.o
 .comment       0x000000000000002c       0x2d kernel_main_old.o
 .comment       0x000000000000002c       0x2d my_process.o
 .comment       0x000000000000002c       0x2d double_link_list.o
 .comment       0x000000000000002c       0x2d thread.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x318
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 kernel_main.o
 .debug_aranges
                0x0000000000000020       0x20 hd.o
 .debug_aranges
                0x0000000000000040       0x20 fs_main.o
 .debug_aranges
                0x0000000000000060       0x18 global.o
 .debug_aranges
                0x0000000000000078       0x20 process.o
 .debug_aranges
                0x0000000000000098       0x20 protect.o
 .debug_aranges
                0x00000000000000b8       0x20 console.o
 .debug_aranges
                0x00000000000000d8       0x20 keyboard.o
 .debug_aranges
                0x00000000000000f8       0x20 open.o
 .debug_aranges
                0x0000000000000118       0x20 read.o
 .debug_aranges
                0x0000000000000138       0x20 write.o
 .debug_aranges
                0x0000000000000158       0x20 close.o
 .debug_aranges
                0x0000000000000178       0x20 wait.o
 .debug_aranges
                0x0000000000000198       0x20 exit.o
 .debug_aranges
                0x00000000000001b8       0x20 fork.o
 .debug_aranges
                0x00000000000001d8       0x20 getpid.o
 .debug_aranges
                0x00000000000001f8       0x20 exec.o
 .debug_aranges
                0x0000000000000218       0x20 mm/main.o
 .debug_aranges
                0x0000000000000238       0x20 mm/exec.o
 .debug_aranges
                0x0000000000000258       0x20 mm/forkexit.o
 .debug_aranges
                0x0000000000000278       0x20 mem/mem.o
 .debug_aranges
                0x0000000000000298       0x20 kernel_main_old.o
 .debug_aranges
                0x00000000000002b8       0x20 my_process.o
 .debug_aranges
                0x00000000000002d8       0x20 double_link_list.o
 .debug_aranges
                0x00000000000002f8       0x20 thread.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000    0x17fc2
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0xd4b kernel_main.o
 .debug_info    0x0000000000000d4b     0x1548 hd.o
 .debug_info    0x0000000000002293     0x1d0d fs_main.o
 .debug_info    0x0000000000003fa0      0xc8f global.o
 .debug_info    0x0000000000004c2f      0xd52 process.o
 .debug_info    0x0000000000005981      0xf88 protect.o
 .debug_info    0x0000000000006909      0xff9 console.o
 .debug_info    0x0000000000007902      0xded keyboard.o
 .debug_info    0x00000000000086ef      0xbd5 open.o
 .debug_info    0x00000000000092c4      0xbd9 read.o
 .debug_info    0x0000000000009e9d      0xbe4 write.o
 .debug_info    0x000000000000aa81      0xbbb close.o
 .debug_info    0x000000000000b63c      0xbc6 wait.o
 .debug_info    0x000000000000c202      0xbb8 exit.o
 .debug_info    0x000000000000cdba      0xbad fork.o
 .debug_info    0x000000000000d967      0xbad getpid.o
 .debug_info    0x000000000000e514      0xd18 exec.o
 .debug_info    0x000000000000f22c      0xbc8 mm/main.o
 .debug_info    0x000000000000fdf4      0xec4 mm/exec.o
 .debug_info    0x0000000000010cb8      0xe4a mm/forkexit.o
 .debug_info    0x0000000000011b02     0x1333 mem/mem.o
 .debug_info    0x0000000000012e35     0x26d8 kernel_main_old.o
 .debug_info    0x000000000001550d      0xef9 my_process.o
 .debug_info    0x0000000000016406      0xd79 double_link_list.o
 .debug_info    0x000000000001717f      0xe43 thread.o

.debug_abbrev   0x0000000000000000     0x2ff6
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x187 kernel_main.o
 .debug_abbrev  0x0000000000000187      0x2c6 hd.o
 .debug_abbrev  0x000000000000044d      0x2c1 fs_main.o
 .debug_abbrev  0x000000000000070e      0x13c global.o
 .debug_abbrev  0x000000000000084a      0x1e6 process.o
 .debug_abbrev  0x0000000000000a30      0x1f0 protect.o
 .debug_abbrev  0x0000000000000c20      0x281 console.o
 .debug_abbrev  0x0000000000000ea1      0x1e0 keyboard.o
 .debug_abbrev  0x0000000000001081      0x184 open.o
 .debug_abbrev  0x0000000000001205      0x193 read.o
 .debug_abbrev  0x0000000000001398      0x19a write.o
 .debug_abbrev  0x0000000000001532      0x182 close.o
 .debug_abbrev  0x00000000000016b4      0x184 wait.o
 .debug_abbrev  0x0000000000001838      0x180 exit.o
 .debug_abbrev  0x00000000000019b8      0x16f fork.o
 .debug_abbrev  0x0000000000001b27      0x16f getpid.o
 .debug_abbrev  0x0000000000001c96      0x1b8 exec.o
 .debug_abbrev  0x0000000000001e4e      0x1da mm/main.o
 .debug_abbrev  0x0000000000002028      0x1da mm/exec.o
 .debug_abbrev  0x0000000000002202      0x1eb mm/forkexit.o
 .debug_abbrev  0x00000000000023ed      0x295 mem/mem.o
 .debug_abbrev  0x0000000000002682      0x3b8 kernel_main_old.o
 .debug_abbrev  0x0000000000002a3a      0x1db my_process.o
 .debug_abbrev  0x0000000000002c15      0x1e1 double_link_list.o
 .debug_abbrev  0x0000000000002df6      0x200 thread.o

.debug_line     0x0000000000000000     0x3e9f
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x135 kernel_main.o
 .debug_line    0x0000000000000135      0x55b hd.o
 .debug_line    0x0000000000000690      0xbdf fs_main.o
 .debug_line    0x000000000000126f       0x95 global.o
 .debug_line    0x0000000000001304      0x146 process.o
 .debug_line    0x000000000000144a      0x1ef protect.o
 .debug_line    0x0000000000001639      0x4be console.o
 .debug_line    0x0000000000001af7      0x28a keyboard.o
 .debug_line    0x0000000000001d81       0xb0 open.o
 .debug_line    0x0000000000001e31       0xa7 read.o
 .debug_line    0x0000000000001ed8       0xa8 write.o
 .debug_line    0x0000000000001f80       0xad close.o
 .debug_line    0x000000000000202d       0xb7 wait.o
 .debug_line    0x00000000000020e4       0xa0 exit.o
 .debug_line    0x0000000000002184       0xae fork.o
 .debug_line    0x0000000000002232       0xa0 getpid.o
 .debug_line    0x00000000000022d2      0x15b exec.o
 .debug_line    0x000000000000242d       0xe4 mm/main.o
 .debug_line    0x0000000000002511      0x1d3 mm/exec.o
 .debug_line    0x00000000000026e4      0x202 mm/forkexit.o
 .debug_line    0x00000000000028e6      0x3e4 mem/mem.o
 .debug_line    0x0000000000002cca      0xde1 kernel_main_old.o
 .debug_line    0x0000000000003aab      0x16c my_process.o
 .debug_line    0x0000000000003c17      0x16c double_link_list.o
 .debug_line    0x0000000000003d83      0x11c thread.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000     0x1956
 *(.debug_str)
 .debug_str     0x0000000000000000      0x491 kernel_main.o
                                        0x556 (size before relaxing)
 .debug_str     0x0000000000000491      0x2a8 hd.o
                                        0x7dd (size before relaxing)
 .debug_str     0x0000000000000739      0x458 fs_main.o
                                        0x997 (size before relaxing)
 .debug_str     0x0000000000000b91        0x9 global.o
                                        0x4ef (size before relaxing)
 .debug_str     0x0000000000000b9a       0x37 process.o
                                        0x527 (size before relaxing)
 .debug_str     0x0000000000000bd1      0x10e protect.o
                                        0x624 (size before relaxing)
 .debug_str     0x0000000000000cdf      0x103 console.o
                                        0x5f5 (size before relaxing)
 .debug_str     0x0000000000000de2       0x84 keyboard.o
                                        0x57b (size before relaxing)
 .debug_str     0x0000000000000e66       0x14 open.o
                                        0x48c (size before relaxing)
 .debug_str     0x0000000000000e7a        0xb read.o
                                        0x483 (size before relaxing)
 .debug_str     0x0000000000000e85        0xc write.o
                                        0x485 (size before relaxing)
 .debug_str     0x0000000000000e91        0xc close.o
                                        0x47f (size before relaxing)
 .debug_str     0x0000000000000e9d        0xb wait.o
                                        0x484 (size before relaxing)
 .debug_str     0x0000000000000ea8        0xb exit.o
                                        0x484 (size before relaxing)
 .debug_str     0x0000000000000eb3        0xb fork.o
                                        0x47d (size before relaxing)
 .debug_str     0x0000000000000ebe       0x14 getpid.o
                                        0x481 (size before relaxing)
 .debug_str     0x0000000000000ed2       0x2b exec.o
                                        0x4a6 (size before relaxing)
 .debug_str     0x0000000000000efd       0x32 mm/main.o
                                        0x471 (size before relaxing)
 .debug_str     0x0000000000000f2f      0x18f mm/exec.o
                                        0x5f1 (size before relaxing)
 .debug_str     0x00000000000010be       0xab mm/forkexit.o
                                        0x53e (size before relaxing)
 .debug_str     0x0000000000001169      0x21b mem/mem.o
                                        0x75d (size before relaxing)
 .debug_str     0x0000000000001384      0x477 kernel_main_old.o
                                        0xa5a (size before relaxing)
 .debug_str     0x00000000000017fb       0x9f my_process.o
                                        0x626 (size before relaxing)
 .debug_str     0x000000000000189a       0x7e double_link_list.o
                                        0x58d (size before relaxing)
 .debug_str     0x0000000000001918       0x3e thread.o
                                        0x5e0 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x78
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x48 hd.o
 .debug_ranges  0x0000000000000048       0x18 mm/exec.o
 .debug_ranges  0x0000000000000060       0x18 kernel_main_old.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.gnu_object_only)
OUTPUT(kernel.bin elf32-i386)
