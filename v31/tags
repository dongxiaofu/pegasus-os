!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	./include/keymap.h	/^#define A	/;"	d
ALT_L	./include/keymap.h	/^#define ALT_L	/;"	d
ALT_R	./include/keymap.h	/^#define ALT_R	/;"	d
ANY	./include/process.h	/^#define ANY /;"	d
APPS	./include/keymap.h	/^#define APPS	/;"	d
ASKFLAGS	./Makefile	/^ASKFLAGS=	-I include\/ -f elf$/;"	m
ASM	./Makefile	/^ASM	=	nasm$/;"	m
ASSERT	./experiment/c/assert-demo.c	/^#define ASSERT$/;"	d	file:
ASSERT_MAGIC	./include/stdio.h	/^#define ASSERT_MAGIC /;"	d
A_PRINT_NUM	./main.c	/^#define A_PRINT_NUM /;"	d	file:
A_STACK_SIZE	./include/process.h	/^#define A_STACK_SIZE /;"	d
B	./include/keymap.h	/^#define B	/;"	d
BACKSPACE	./include/keymap.h	/^#define BACKSPACE	/;"	d
BMLen	./test/boot.asm	/^BMLen	equ	$ - BootMessage$/;"	d
BOOT	./Makefile	/^BOOT = loader.bin boot.bin$/;"	m
BOTH	./include/const.h	/^#define BOTH	/;"	d
BPB_BytsPerSec	./boot.asm	/^	BPB_BytsPerSec	DW 512		; 每扇区字节数$/;"	d
BPB_BytsPerSec	./loader-error.asm	/^	BPB_BytsPerSec	DW 512		; 每扇区字节数$/;"	d
BPB_BytsPerSec	./loader.asm	/^	BPB_BytsPerSec	DW 512		; 每扇区字节数$/;"	d
BPB_BytsPerSec	./pmtest2.asm	/^	BPB_BytsPerSec	DW 512		; 每扇区字节数$/;"	d
BPB_FATSz16	./boot.asm	/^	BPB_FATSz16	DW 9		; 每FAT扇区数$/;"	d
BPB_FATSz16	./loader-error.asm	/^	BPB_FATSz16	DW 9		; 每FAT扇区数$/;"	d
BPB_FATSz16	./loader.asm	/^	BPB_FATSz16	DW 9		; 每FAT扇区数$/;"	d
BPB_FATSz16	./pmtest2.asm	/^	BPB_FATSz16	DW 9		; 每FAT扇区数$/;"	d
BPB_HiddSec	./boot.asm	/^	BPB_HiddSec	DD 0		; 隐藏扇区数$/;"	d
BPB_HiddSec	./loader-error.asm	/^	BPB_HiddSec	DD 0		; 隐藏扇区数$/;"	d
BPB_HiddSec	./loader.asm	/^	BPB_HiddSec	DD 0		; 隐藏扇区数$/;"	d
BPB_HiddSec	./pmtest2.asm	/^	BPB_HiddSec	DD 0		; 隐藏扇区数$/;"	d
BPB_Media	./boot.asm	/^	BPB_Media	DB 0xF0		; 媒体描述符$/;"	d
BPB_Media	./loader-error.asm	/^	BPB_Media	DB 0xF0		; 媒体描述符$/;"	d
BPB_Media	./loader.asm	/^	BPB_Media	DB 0xF0		; 媒体描述符$/;"	d
BPB_Media	./pmtest2.asm	/^	BPB_Media	DB 0xF0		; 媒体描述符$/;"	d
BPB_NumFATs	./boot.asm	/^	BPB_NumFATs	DB 2		; 共有多少 FAT 表$/;"	d
BPB_NumFATs	./loader-error.asm	/^	BPB_NumFATs	DB 2		; 共有多少 FAT 表$/;"	d
BPB_NumFATs	./loader.asm	/^	BPB_NumFATs	DB 2		; 共有多少 FAT 表$/;"	d
BPB_NumFATs	./pmtest2.asm	/^	BPB_NumFATs	DB 2		; 共有多少 FAT 表$/;"	d
BPB_NumHeads	./boot.asm	/^	BPB_NumHeads	DW 2		; 磁头数(面数)$/;"	d
BPB_NumHeads	./loader-error.asm	/^	BPB_NumHeads	DW 2		; 磁头数(面数)$/;"	d
BPB_NumHeads	./loader.asm	/^	BPB_NumHeads	DW 2		; 磁头数(面数)$/;"	d
BPB_NumHeads	./pmtest2.asm	/^	BPB_NumHeads	DW 2		; 磁头数(面数)$/;"	d
BPB_RootEntCnt	./boot.asm	/^	BPB_RootEntCnt	DW 224		; 根目录文件数最大值$/;"	d
BPB_RootEntCnt	./loader-error.asm	/^	BPB_RootEntCnt	DW 224		; 根目录文件数最大值$/;"	d
BPB_RootEntCnt	./loader.asm	/^	BPB_RootEntCnt	DW 224		; 根目录文件数最大值$/;"	d
BPB_RootEntCnt	./pmtest2.asm	/^	BPB_RootEntCnt	DW 224		; 根目录文件数最大值$/;"	d
BPB_RsvdSecCnt	./boot.asm	/^	BPB_RsvdSecCnt	DW 1		; Boot 记录占用多少扇区$/;"	d
BPB_RsvdSecCnt	./loader-error.asm	/^	BPB_RsvdSecCnt	DW 1		; Boot 记录占用多少扇区$/;"	d
BPB_RsvdSecCnt	./loader.asm	/^	BPB_RsvdSecCnt	DW 1		; Boot 记录占用多少扇区$/;"	d
BPB_RsvdSecCnt	./pmtest2.asm	/^	BPB_RsvdSecCnt	DW 1		; Boot 记录占用多少扇区$/;"	d
BPB_SecPerClus	./boot.asm	/^	BPB_SecPerClus	DB 1		; 每簇多少扇区$/;"	d
BPB_SecPerClus	./loader-error.asm	/^	BPB_SecPerClus	DB 1		; 每簇多少扇区$/;"	d
BPB_SecPerClus	./loader.asm	/^	BPB_SecPerClus	DB 1		; 每簇多少扇区$/;"	d
BPB_SecPerClus	./pmtest2.asm	/^	BPB_SecPerClus	DB 1		; 每簇多少扇区$/;"	d
BPB_SecPerTrk	./boot.asm	/^	BPB_SecPerTrk	DW 18		; 每磁道扇区数$/;"	d
BPB_SecPerTrk	./loader-error.asm	/^	BPB_SecPerTrk	DW 18		; 每磁道扇区数$/;"	d
BPB_SecPerTrk	./loader.asm	/^	BPB_SecPerTrk	DW 18		; 每磁道扇区数$/;"	d
BPB_SecPerTrk	./pmtest2.asm	/^	BPB_SecPerTrk	DW 18		; 每磁道扇区数$/;"	d
BPB_TotSec16	./boot.asm	/^	BPB_TotSec16	DW 2880		; 逻辑扇区总数$/;"	d
BPB_TotSec16	./loader-error.asm	/^	BPB_TotSec16	DW 2880		; 逻辑扇区总数$/;"	d
BPB_TotSec16	./loader.asm	/^	BPB_TotSec16	DW 2880		; 逻辑扇区总数$/;"	d
BPB_TotSec16	./pmtest2.asm	/^	BPB_TotSec16	DW 2880		; 逻辑扇区总数$/;"	d
BPB_TotSec32	./boot.asm	/^	BPB_TotSec32	DD 0		; wTotalSectorCount为0时这个值记录扇区数$/;"	d
BPB_TotSec32	./loader-error.asm	/^	BPB_TotSec32	DD 0		; wTotalSectorCount为0时这个值记录扇区数$/;"	d
BPB_TotSec32	./loader.asm	/^	BPB_TotSec32	DD 0		; wTotalSectorCount为0时这个值记录扇区数$/;"	d
BPB_TotSec32	./pmtest2.asm	/^	BPB_TotSec32	DD 0		; wTotalSectorCount为0时这个值记录扇区数$/;"	d
BS_BootSig	./boot.asm	/^	BS_BootSig	DB 29h		; 扩展引导标记 (29h)$/;"	d
BS_BootSig	./loader-error.asm	/^	BS_BootSig	DB 29h		; 扩展引导标记 (29h)$/;"	d
BS_BootSig	./loader.asm	/^	BS_BootSig	DB 29h		; 扩展引导标记 (29h)$/;"	d
BS_BootSig	./pmtest2.asm	/^	BS_BootSig	DB 29h		; 扩展引导标记 (29h)$/;"	d
BS_DrvNum	./boot.asm	/^	BS_DrvNum	DB 0		; 中断 13 的驱动器号$/;"	d
BS_DrvNum	./loader-error.asm	/^	BS_DrvNum	DB 0		; 中断 13 的驱动器号$/;"	d
BS_DrvNum	./loader.asm	/^	BS_DrvNum	DB 0		; 中断 13 的驱动器号$/;"	d
BS_DrvNum	./pmtest2.asm	/^	BS_DrvNum	DB 0		; 中断 13 的驱动器号$/;"	d
BS_FileSysType	./boot.asm	/^	BS_FileSysType	DB 'FAT12   '	; 文件系统类型, 必须 8个字节$/;"	d
BS_FileSysType	./loader-error.asm	/^	BS_FileSysType	DB 'FAT12   '	; 文件系统类型, 必须 8个字节$/;"	d
BS_FileSysType	./loader.asm	/^	BS_FileSysType	DB 'FAT12   '	; 文件系统类型, 必须 8个字节$/;"	d
BS_FileSysType	./pmtest2.asm	/^	BS_FileSysType	DB 'FAT12   '	; 文件系统类型, 必须 8个字节$/;"	d
BS_OEMName	./boot.asm	/^	BS_OEMName	DB 'ForrestY'	; OEM String, 必须 8 个字节$/;"	d
BS_OEMName	./loader-error.asm	/^	BS_OEMName	DB 'ForrestY'	; OEM String, 必须 8 个字节$/;"	d
BS_OEMName	./loader.asm	/^	BS_OEMName	DB 'ForrestY'	; OEM String, 必须 8 个字节$/;"	d
BS_OEMName	./pmtest2.asm	/^	BS_OEMName	DB 'ForrestY'	; OEM String, 必须 8 个字节$/;"	d
BS_Reserved1	./boot.asm	/^	BS_Reserved1	DB 0		; 未使用$/;"	d
BS_Reserved1	./loader-error.asm	/^	BS_Reserved1	DB 0		; 未使用$/;"	d
BS_Reserved1	./loader.asm	/^	BS_Reserved1	DB 0		; 未使用$/;"	d
BS_Reserved1	./pmtest2.asm	/^	BS_Reserved1	DB 0		; 未使用$/;"	d
BS_VolID	./boot.asm	/^	BS_VolID	DD 0		; 卷序列号$/;"	d
BS_VolID	./loader-error.asm	/^	BS_VolID	DD 0		; 卷序列号$/;"	d
BS_VolID	./loader.asm	/^	BS_VolID	DD 0		; 卷序列号$/;"	d
BS_VolID	./pmtest2.asm	/^	BS_VolID	DD 0		; 卷序列号$/;"	d
BS_VolLab	./boot.asm	/^	BS_VolLab	DB 'OrangeS0.02'; 卷标, 必须 11 个字节$/;"	d
BS_VolLab	./loader-error.asm	/^	BS_VolLab	DB 'OrangeS0.02'; 卷标, 必须 11 个字节$/;"	d
BS_VolLab	./loader.asm	/^	BS_VolLab	DB 'OrangeS0.02'; 卷标, 必须 11 个字节$/;"	d
BS_VolLab	./pmtest2.asm	/^	BS_VolLab	DB 'OrangeS0.02'; 卷标, 必须 11 个字节$/;"	d
B_PRINT_NUM	./main.c	/^#define B_PRINT_NUM /;"	d	file:
B_STACK_SIZE	./include/process.h	/^#define B_STACK_SIZE /;"	d
BaseOfFATEntry	./boot.asm	/^BaseOfFATEntry	equ	0x1000$/;"	d
BaseOfFATEntry	./loader-error.asm	/^BaseOfFATEntry	equ	0x1000$/;"	d
BaseOfFATEntry	./loader.asm	/^BaseOfFATEntry	equ	0x1000$/;"	d
BaseOfKernel	./loader-error.asm	/^BaseOfKernel	equ	0x800$/;"	d
BaseOfKernel	./loader.asm	/^BaseOfKernel	equ	0x9000$/;"	d
BaseOfKernel2	./loader.asm	/^BaseOfKernel2	equ	0x6000$/;"	d
BaseOfKernel3	./loader.asm	/^BaseOfKernel3	equ	0x0$/;"	d
BaseOfKernelPhyAddr	./loader.asm	/^BaseOfKernelPhyAddr	equ	BaseOfKernel * 10h  ; Kernel.BIN 被加载到的位置 ---- 物理地址 中的段基址部分$/;"	d
BaseOfLoader	./boot.asm	/^BaseOfLoader	equ	0x2000$/;"	d
BaseOfLoader	./loader.asm	/^BaseOfLoader    equ     0x2000$/;"	d
BaseOfLoaderPhyAddr	./loader.asm	/^BaseOfLoaderPhyAddr	equ	BaseOfLoader * 10h	; LOADER.BIN 被加载到的位置 ---- 物理地址 (= BaseOfLoader * 10h)$/;"	d
Begin	./loader-error.asm	/^Begin:$/;"	l
BootMessage	./boot.asm	/^BootMessage:	db	"Hello,World OS!"$/;"	d
BootMessage	./experiment/boot.asm	/^BootMessage:	db	"Hello,OS world"$/;"	d
BootMessage	./loader-error.asm	/^BootMessage:	db	"Hello,World OS!"$/;"	d
BootMessage	./loader.asm	/^BootMessage:	db	"Hello,World OS!"$/;"	d
BootMessage	./test/boot.asm	/^BootMessage:	db	"Hello,World"$/;"	d
BootMessage	./test/experiment/boot.asm	/^BootMessage:	db	"Hello,OS world"$/;"	d
BootMessageLength	./boot.asm	/^BootMessageLength	equ	$ - BootMessage$/;"	d
BootMessageLength	./loader-error.asm	/^BootMessageLength	equ	$ - BootMessage$/;"	d
BootMessageLength	./loader.asm	/^BootMessageLength	equ	$ - BootMessage$/;"	d
BytesOfSector	./boot.asm	/^BytesOfSector	equ	512	; 每个扇区包含的字节数量$/;"	d
BytesOfSector	./loader-error.asm	/^BytesOfSector	equ	512	; 每个扇区包含的字节数量$/;"	d
BytesOfSector	./loader.asm	/^BytesOfSector	equ	512	; 每个扇区包含的字节数量$/;"	d
C	./include/keymap.h	/^#define C	/;"	d
CAPS_LOCK	./include/keymap.h	/^#define CAPS_LOCK	/;"	d
CC	./Makefile	/^CC	=	gcc$/;"	m
CFLAGS	./Makefile	/^CFLAGS	=	-I include\/ -I include\/fs\/  -g -c -fno-builtin -m32	$/;"	m
COMPARE_FILENAME	./boot.asm	/^COMPARE_FILENAME:$/;"	l
COMPARE_FILENAME	./loader-error.asm	/^COMPARE_FILENAME:$/;"	l
COMPARE_FILENAME	./loader.asm	/^COMPARE_FILENAME:$/;"	l
CONSOLE	./include/console.h	/^}CONSOLE;$/;"	t	typeref:struct:__anon1
CS_SELECTOR	./include/const.h	/^#define CS_SELECTOR /;"	d
CS_SELECTOR_INDEX	./include/const.h	/^#define CS_SELECTOR_INDEX /;"	d
CTRL_L	./include/keymap.h	/^#define CTRL_L	/;"	d
CTRL_R	./include/keymap.h	/^#define CTRL_R	/;"	d
C_PRINT_NUM	./main.c	/^#define C_PRINT_NUM /;"	d	file:
C_STACK_SIZE	./include/process.h	/^#define C_STACK_SIZE /;"	d
Code16Len	./pmtest2.asm	/^Code16Len	equ	$ - LABEL_SEG_CODE16$/;"	d
D	./include/keymap.h	/^#define D	/;"	d
DEBUG	./include/const.h	/^#define DEBUG /;"	d
DEFAULT_COLOUR	./include/console.h	/^#define DEFAULT_COLOUR /;"	d
DEFAULT_STACK_SIZE	./include/process.h	/^#define DEFAULT_STACK_SIZE /;"	d
DEFAULT_STR_SIZE	./include/const.h	/^#define DEFAULT_STR_SIZE /;"	d
DELETE	./include/keymap.h	/^#define DELETE	/;"	d
DOWN	./include/keymap.h	/^#define DOWN	/;"	d
DS_SELECTOR	./include/const.h	/^#define DS_SELECTOR /;"	d
DS_SELECTOR_INDEX	./include/const.h	/^#define DS_SELECTOR_INDEX /;"	d
DataLen	./pmtest2.asm	/^DataLen			equ	$ - LABEL_DATA$/;"	d
Descriptor	./include/protect.h	/^}Descriptor;$/;"	t	typeref:struct:__anon4
Disassembly	./dis-k.asm	/^Disassembly of section .text:$/;"	l
Disassembly	./experiment/c/dis-ptr-str.asm	/^Disassembly of section .fini:$/;"	l
Disassembly	./experiment/c/dis-ptr-str.asm	/^Disassembly of section .init:$/;"	l
Disassembly	./experiment/c/dis-ptr-str.asm	/^Disassembly of section .plt:$/;"	l
Disassembly	./experiment/c/dis-ptr-str.asm	/^Disassembly of section .text:$/;"	l
DispAL	./pmtest2.asm	/^DispAL:$/;"	l
DispReturn	./pmtest2.asm	/^DispReturn:$/;"	l
DispStr	./experiment/boot.asm	/^DispStr:$/;"	l
DispStr	./test/experiment/boot.asm	/^DispStr:$/;"	l
E	./include/keymap.h	/^#define E	/;"	d
END	./include/keymap.h	/^#define END	/;"	d
ENTER	./include/keymap.h	/^#define ENTER	/;"	d
ESC	./include/keymap.h	/^#define ESC	/;"	d
F	./include/keymap.h	/^#define F	/;"	d
F1	./include/keymap.h	/^#define F1	/;"	d
F10	./include/keymap.h	/^#define F10	/;"	d
F11	./include/keymap.h	/^#define F11	/;"	d
F12	./include/keymap.h	/^#define F12	/;"	d
F2	./include/keymap.h	/^#define F2	/;"	d
F3	./include/keymap.h	/^#define F3	/;"	d
F4	./include/keymap.h	/^#define F4	/;"	d
F5	./include/keymap.h	/^#define F5	/;"	d
F6	./include/keymap.h	/^#define F6	/;"	d
F7	./include/keymap.h	/^#define F7	/;"	d
F8	./include/keymap.h	/^#define F8	/;"	d
F9	./include/keymap.h	/^#define F9	/;"	d
FATEntryIsInt	./boot.asm	/^FATEntryIsInt	equ 0		; FAT项的字节偏移量是不是整数个字节：0，不是；1，是。$/;"	d
FATEntryIsInt	./loader-error.asm	/^FATEntryIsInt	equ 0		; FAT项的字节偏移量是不是整数个字节：0，不是；1，是。$/;"	d
FATEntryIsInt	./loader.asm	/^FATEntryIsInt	equ 0		; FAT项的字节偏移量是不是整数个字节：0，不是；1，是。$/;"	d
FATEntry_Is_Int	./boot.asm	/^FATEntry_Is_Int:$/;"	l
FATEntry_Is_Int	./loader-error.asm	/^FATEntry_Is_Int:$/;"	l
FATEntry_Is_Int	./loader.asm	/^FATEntry_Is_Int:$/;"	l
FILENAME_DIFFIERENT	./boot.asm	/^FILENAME_DIFFIERENT:$/;"	l
FILENAME_DIFFIERENT	./loader-error.asm	/^FILENAME_DIFFIERENT:$/;"	l
FILENAME_DIFFIERENT	./loader.asm	/^FILENAME_DIFFIERENT:$/;"	l
FILE_FOUND	./boot.asm	/^FILE_FOUND:$/;"	l
FILE_FOUND	./loader-error.asm	/^FILE_FOUND:$/;"	l
FILE_FOUND	./loader.asm	/^FILE_FOUND:$/;"	l
FILE_NOT_FOUND	./boot.asm	/^FILE_NOT_FOUND:$/;"	l
FILE_NOT_FOUND	./loader-error.asm	/^FILE_NOT_FOUND:$/;"	l
FILE_NOT_FOUND	./loader.asm	/^FILE_NOT_FOUND:$/;"	l
FLAG_EXT	./include/keymap.h	/^#define FLAG_EXT /;"	d
FirstSectorOfRootDirectory	./boot.asm	/^FirstSectorOfRootDirectory	equ	19$/;"	d
FirstSectorOfRootDirectory	./loader-error.asm	/^FirstSectorOfRootDirectory	equ	19$/;"	d
FirstSectorOfRootDirectory	./loader.asm	/^FirstSectorOfRootDirectory	equ	19$/;"	d
Func	./include/process.h	/^typedef void (*Func)();$/;"	t
G	./include/keymap.h	/^#define G	/;"	d
GO_BACK_REAL_MODEL	./loader.asm	/^GO_BACK_REAL_MODEL:$/;"	l
GS_SELECTOR	./include/const.h	/^#define GS_SELECTOR /;"	d
GS_SELECTOR_INDEX	./include/const.h	/^#define GS_SELECTOR_INDEX /;"	d
GUI_L	./include/keymap.h	/^#define GUI_L	/;"	d
GUI_R	./include/keymap.h	/^#define GUI_R	/;"	d
Gate	./include/protect.h	/^}Gate;$/;"	t	typeref:struct:__anon5
GdtLen	./loader.asm	/^	GdtLen	equ		$ - LABEL_GDT$/;"	d
GdtLen	./pmtest2.asm	/^GdtLen		equ	$ - LABEL_GDT	; GDT长度$/;"	d
GdtPtr	./loader.asm	/^	GdtPtr	dw	GdtLen - 1$/;"	d
GdtPtr	./pmtest2.asm	/^GdtPtr		dw	GdtLen - 1	; GDT界限$/;"	d
GetFATEntry	./boot.asm	/^GetFATEntry:$/;"	l
GetFATEntry	./loader-error.asm	/^GetFATEntry:$/;"	l
GetFATEntry	./loader.asm	/^GetFATEntry:$/;"	l
GreaterNumber	./experiment/foo.asm	/^GreaterNumber	equ	51$/;"	d
H	./include/keymap.h	/^#define H	/;"	d
HD_DEV_OPEN	./include/global.h	/^#define HD_DEV_OPEN /;"	d
HOME	./include/keymap.h	/^#define HOME	/;"	d
I	./include/keymap.h	/^#define I	/;"	d
INIT_MASTER_VEC_NO	./include/const.h	/^const int INIT_MASTER_VEC_NO = 0x20;$/;"	v
INIT_SLAVE_VEC_NO	./include/const.h	/^const int INIT_SLAVE_VEC_NO = 0x28;$/;"	v
INSERT	./include/keymap.h	/^#define INSERT	/;"	d
INT_VECTOR_TICKS	./syscall.asm	/^INT_VECTOR_TICKS	equ	0x90$/;"	d
IN_REAL_MODEL	./loader.asm	/^IN_REAL_MODEL:$/;"	l
Init8253	./loader.asm	/^Init8253:$/;"	l
InitDescriptor	./protect.c	/^void InitDescriptor(Descriptor *desc, unsigned int base, unsigned int limit, unsigned short attribute)$/;"	f
InitInterruptDesc	./protect.c	/^void InitInterruptDesc(int vec_no, int_handle offset, int privilege, int type)$/;"	f
InitKernel	./loader-error.asm	/^InitKernel:$/;"	l
InitKernel	./loader.asm	/^InitKernel:$/;"	l
Init_8259A	./loader.asm	/^Init_8259A:$/;"	l
InterruptTest	./kernel.asm	/^InterruptTest:$/;"	l
J	./include/keymap.h	/^#define J	/;"	d
K	./include/keymap.h	/^#define K	/;"	d
KERNEL	./Makefile	/^KERNEL	=	kernel.bin$/;"	m
KEYBOARD_BUF_SIZE	./include/keyboard.h	/^#define KEYBOARD_BUF_SIZE /;"	d
KeyboardBuffer	./include/keyboard.h	/^}KeyboardBuffer;$/;"	t	typeref:struct:__anon3
L	./include/keymap.h	/^#define L	/;"	d
LABEL_BEGIN	./pmtest2.asm	/^LABEL_BEGIN:$/;"	l
LABEL_DATA	./pmtest2.asm	/^LABEL_DATA:$/;"	l
LABEL_DESC_CODE16	./pmtest2.asm	/^LABEL_DESC_CODE16: Descriptor    0,         0ffffh, DA_C      ; 非一致代码段, 16$/;"	l
LABEL_DESC_CODE32	./pmtest2.asm	/^LABEL_DESC_CODE32: Descriptor    0, SegCode32Len-1, DA_C+DA_32; 非一致代码段, 32$/;"	l
LABEL_DESC_DATA	./pmtest2.asm	/^LABEL_DESC_DATA:   Descriptor    0,      DataLen-1, DA_DRW    ; Data$/;"	l
LABEL_DESC_NORMAL	./pmtest2.asm	/^LABEL_DESC_NORMAL: Descriptor    0,         0ffffh, DA_DRW    ; Normal 描述符$/;"	l
LABEL_DESC_STACK	./pmtest2.asm	/^LABEL_DESC_STACK:  Descriptor    0,     TopOfStack, DA_DRWA+DA_32; Stack, 32 位$/;"	l
LABEL_DESC_TEST	./pmtest2.asm	/^LABEL_DESC_TEST:   Descriptor 0500000h,     0ffffh, DA_DRW$/;"	l
LABEL_DESC_VIDEO	./pmtest2.asm	/^LABEL_DESC_VIDEO:  Descriptor  0B8000h,     0ffffh, DA_DRW    ; 显存首地址$/;"	l
LABEL_GDT	./loader.asm	/^	LABEL_GDT:	Descriptor  0,	0,	0$/;"	l
LABEL_GDT	./pmtest2.asm	/^LABEL_GDT:         Descriptor    0,              0, 0         ; 空描述符$/;"	l
LABEL_GO_BACK_TO_REAL	./pmtest2.asm	/^LABEL_GO_BACK_TO_REAL:$/;"	l
LABEL_PM_START	./bits-demo-16.asm	/^LABEL_PM_START:$/;"	l
LABEL_PM_START	./bits-demo.asm	/^LABEL_PM_START:$/;"	l
LABEL_PM_START	./loader.asm	/^LABEL_PM_START:$/;"	l
LABEL_REAL_ENTRY	./pmtest2.asm	/^LABEL_REAL_ENTRY:$/;"	l
LABEL_SEG_16	./loader.asm	/^LABEL_SEG_16:$/;"	l
LABEL_SEG_CODE16	./pmtest2.asm	/^LABEL_SEG_CODE16:$/;"	l
LABEL_SEG_CODE32	./pmtest2.asm	/^LABEL_SEG_CODE32:$/;"	l
LABEL_STACK	./pmtest2.asm	/^LABEL_STACK:$/;"	l
LABEL_START	./boot.asm	/^LABEL_START:$/;"	l
LABEL_START	./loader-error.asm	/^LABEL_START:$/;"	l
LABEL_START	./loader.asm	/^LABEL_START:$/;"	l
LABEL_START	./test/boot.asm	/^LABEL_START:$/;"	l
LABLE_GDT_FLAT_X	./loader.asm	/^	LABLE_GDT_FLAT_X: Descriptor	0,		0ffffffh,		 0c9ah$/;"	l
LABLE_GDT_FLAT_X_16	./loader.asm	/^	LABLE_GDT_FLAT_X_16: Descriptor	0,		0ffffffh,		 98h$/;"	l
LABLE_GDT_FLAT_X_162	./loader.asm	/^	LABLE_GDT_FLAT_X_162: Descriptor	0,		0ffffffh,		 98h$/;"	l
LABLE_GDT_VIDEO	./loader.asm	/^	LABLE_GDT_VIDEO: Descriptor	0b8000h,		0ffffh,		 0f2h$/;"	l
LABLE_GDT_VIDEO	./t2.asm	/^LABLE_GDT_VIDEO: Descriptor     0b8000h,                0ffffh,          0c9ah$/;"	l
LD	./Makefile	/^LD	=	ld$/;"	m
LDFLAGS	./Makefile	/^LDFLAGS	=	-s -Ttext 0x30400 -m elf_i386$/;"	m
LDT_FIRST_SELECTOR	./include/const.h	/^#define LDT_FIRST_SELECTOR /;"	d
LDT_FIRST_SELECTOR_INDEX	./include/const.h	/^#define LDT_FIRST_SELECTOR_INDEX /;"	d
LEFT	./include/keymap.h	/^#define LEFT	/;"	d
Len	./experiment/nasm_in_linux.asm	/^Len	equ	$ - Str$/;"	d
LoaderBinFileName	./boot.asm	/^LoaderBinFileName:	db	"LOADER  BIN"$/;"	d
LoaderBinFileName	./loader-error.asm	/^LoaderBinFileName:	db	"KERNEL  BIN"$/;"	d
LoaderBinFileName	./loader.asm	/^LoaderBinFileName:	db	"KERNEL  BIN"$/;"	d
LoaderBinFileNameLength	./boot.asm	/^LoaderBinFileNameLength	equ	$ - LoaderBinFileName	; 中间两个空格$/;"	d
LoaderBinFileNameLength	./loader-error.asm	/^LoaderBinFileNameLength	equ	$ - LoaderBinFileName	; 中间两个空格$/;"	d
LoaderBinFileNameLength	./loader.asm	/^LoaderBinFileNameLength	equ	$ - LoaderBinFileName	; 中间两个空格$/;"	d
M	./include/keymap.h	/^#define M	/;"	d
MAP_COLS	./include/keymap.h	/^#define MAP_COLS /;"	d
Memcpy	./loader-error.asm	/^Memcpy:$/;"	l
Memcpy	./loader.asm	/^Memcpy:$/;"	l
Memcpy	./string.asm	/^Memcpy:$/;"	l
Memset	./string.asm	/^Memset:$/;"	l
Message	./include/process.h	/^}Message;$/;"	t	typeref:struct:__anon8
MsgSender	./include/process.h	/^struct MsgSender$/;"	s
N	./include/keymap.h	/^#define N	/;"	d
NO_TASK	./include/process.h	/^#define NO_TASK /;"	d
NR_GET_TICKS	./include/const.h	/^#define NR_GET_TICKS	/;"	d
NR_SCAN_CODES	./include/keymap.h	/^#define NR_SCAN_CODES /;"	d
NUM_LOCK	./include/keymap.h	/^#define NUM_LOCK	/;"	d
NoAction	./loader-error.asm	/^NoAction:$/;"	l
Node	./experiment/c/struct-demo.c	/^struct Node{$/;"	s	file:
O	./include/keymap.h	/^#define O	/;"	d
OBJS	./Makefile	/^OBJS	=	kernel.o string.o kernel_main.o hd.o syscall.o fs_main.o$/;"	m
OVER	./boot.asm	/^OVER:$/;"	l
OVER	./loader-error.asm	/^OVER:$/;"	l
OVER	./loader.asm	/^OVER:$/;"	l
OVER	./test/boot.asm	/^OVER:$/;"	l
OffSetOfLoader	./boot.asm	/^OffSetOfLoader	equ	0x100$/;"	d
OffSetOfLoader	./loader-error.asm	/^OffSetOfLoader	equ	0x0$/;"	d
OffSetOfLoader	./loader.asm	/^OffSetOfLoader	equ	0x0$/;"	d
OffsetPMMessage	./pmtest2.asm	/^OffsetPMMessage		equ	PMMessage - $\$$/;"	d
OffsetStrTest	./pmtest2.asm	/^OffsetStrTest		equ	StrTest - $\$$/;"	d
P	./include/keymap.h	/^#define P	/;"	d
PAD_DOT	./include/keymap.h	/^#define PAD_DOT	/;"	d
PAD_DOWN	./include/keymap.h	/^#define PAD_DOWN	/;"	d
PAD_END	./include/keymap.h	/^#define PAD_END	/;"	d
PAD_ENTER	./include/keymap.h	/^#define PAD_ENTER	/;"	d
PAD_HOME	./include/keymap.h	/^#define PAD_HOME	/;"	d
PAD_INS	./include/keymap.h	/^#define PAD_INS	/;"	d
PAD_LEFT	./include/keymap.h	/^#define PAD_LEFT	/;"	d
PAD_MID	./include/keymap.h	/^#define PAD_MID	/;"	d
PAD_MINUS	./include/keymap.h	/^#define PAD_MINUS	/;"	d
PAD_PAGEDOWN	./include/keymap.h	/^#define PAD_PAGEDOWN	/;"	d
PAD_PAGEUP	./include/keymap.h	/^#define PAD_PAGEUP	/;"	d
PAD_PLUS	./include/keymap.h	/^#define PAD_PLUS	/;"	d
PAD_RIGHT	./include/keymap.h	/^#define PAD_RIGHT	/;"	d
PAD_SLASH	./include/keymap.h	/^#define PAD_SLASH	/;"	d
PAD_UP	./include/keymap.h	/^#define PAD_UP	/;"	d
PAGEDOWN	./include/keymap.h	/^#define PAGEDOWN	/;"	d
PAGEUP	./include/keymap.h	/^#define PAGEUP	/;"	d
PANIC_MAGIC	./include/stdio.h	/^#define PANIC_MAGIC /;"	d
PAUSE	./include/keymap.h	/^#define PAUSE /;"	d
PMMessage	./pmtest2.asm	/^PMMessage:		db	"3333In Protect Mode now. ^-^", 0	; 在保护模式中显示$/;"	d
PRINT_SCREEN	./include/keymap.h	/^#define PRINT_SCREEN /;"	d
Person	./experiment/c/point.c	/^struct Person{$/;"	s	file:
Printf	./main.c	/^void Printf(char *fmt, ...)$/;"	f
Proc	./include/process.h	/^}Proc;$/;"	t	typeref:struct:__anon9
Q	./include/keymap.h	/^#define Q	/;"	d
R	./include/keymap.h	/^#define R	/;"	d
READ_FILE	./boot.asm	/^READ_FILE:$/;"	l
READ_FILE	./loader-error.asm	/^READ_FILE:$/;"	l
READ_FILE	./loader.asm	/^READ_FILE:$/;"	l
READ_FILE_OVER	./boot.asm	/^READ_FILE_OVER:$/;"	l
READ_FILE_OVER	./loader-error.asm	/^READ_FILE_OVER:$/;"	l
READ_FILE_OVER	./loader.asm	/^READ_FILE_OVER:$/;"	l
RECEIVE	./include/const.h	/^#define RECEIVE /;"	d
RECEIVING	./include/const.h	/^#define RECEIVING /;"	d
RIGHT	./include/keymap.h	/^#define RIGHT	/;"	d
RUNNING	./include/const.h	/^#define RUNNING	/;"	d
ReadSector	./boot.asm	/^ReadSector:$/;"	l
ReadSector	./loader-error.asm	/^ReadSector:$/;"	l
ReadSector	./loader.asm	/^ReadSector:$/;"	l
ReadSector2	./boot.asm	/^ReadSector2:$/;"	l
ReadSector2	./loader-error.asm	/^ReadSector2:$/;"	l
ReadSector2	./loader.asm	/^ReadSector2:$/;"	l
Regs	./include/process.h	/^}Regs;$/;"	t	typeref:struct:__anon7
ReloadGDT	./main.c	/^void ReloadGDT()$/;"	f
S	./include/keymap.h	/^#define S	/;"	d
SCREEN_SIZE	./include/console.h	/^#define SCREEN_SIZE /;"	d
SCREEN_WIDTH	./include/console.h	/^#define SCREEN_WIDTH /;"	d
SCROLL_LOCK	./include/keymap.h	/^#define SCROLL_LOCK	/;"	d
SEARCH_FILE_IN_ROOT_DIRECTORY	./boot.asm	/^SEARCH_FILE_IN_ROOT_DIRECTORY:$/;"	l
SEARCH_FILE_IN_ROOT_DIRECTORY	./loader-error.asm	/^SEARCH_FILE_IN_ROOT_DIRECTORY:$/;"	l
SEARCH_FILE_IN_ROOT_DIRECTORY	./loader.asm	/^SEARCH_FILE_IN_ROOT_DIRECTORY:$/;"	l
SEND	./include/const.h	/^#define SEND /;"	d
SENDING	./include/const.h	/^#define SENDING /;"	d
SHIFT_L	./include/keymap.h	/^#define SHIFT_L	/;"	d
SHIFT_L1	./include/keyboard.h	/^#define SHIFT_L1 /;"	d
SHIFT_R	./include/keymap.h	/^#define SHIFT_R	/;"	d
SHIFT_R1	./include/keyboard.h	/^#define SHIFT_R1 /;"	d
SPValueInRealMode	./pmtest2.asm	/^SPValueInRealMode	dw	0$/;"	d
STACK_SIZE	./include/process.h	/^#define STACK_SIZE /;"	d
SYS_CALL_FUNCTION_NUM	./include/const.h	/^#define SYS_CALL_FUNCTION_NUM /;"	d
SectorNumberOfFAT1	./boot.asm	/^SectorNumberOfFAT1	equ	1$/;"	d
SectorNumberOfFAT1	./loader-error.asm	/^SectorNumberOfFAT1	equ	1$/;"	d
SectorNumberOfFAT1	./loader.asm	/^SectorNumberOfFAT1	equ	1$/;"	d
SectorNumberOfTrack	./boot.asm	/^SectorNumberOfTrack	equ	18$/;"	d
SectorNumberOfTrack	./loader-error.asm	/^SectorNumberOfTrack	equ	18$/;"	d
SectorNumberOfTrack	./loader.asm	/^SectorNumberOfTrack	equ	18$/;"	d
Seg2PhyAddr	./protect.c	/^unsigned int Seg2PhyAddr(unsigned int selector)$/;"	f
Seg2PhyAddrLDT	./protect.c	/^unsigned int Seg2PhyAddrLDT(unsigned int selector, Proc *proc)$/;"	f
SegCode32Len	./pmtest2.asm	/^SegCode32Len	equ	$ - LABEL_SEG_CODE32$/;"	d
SelectFlatWR	./bits-demo-16.asm	/^SelectFlatWR    equ     $ - $\$$/;"	d
SelectFlatWR	./bits-demo.asm	/^SelectFlatWR	equ	$ - $\$$/;"	d
SelectFlatWR	./loader.asm	/^	SelectFlatWR	equ	LABLE_GDT_FLAT_WR - LABEL_GDT$/;"	d
SelectFlatWR_16	./loader.asm	/^	SelectFlatWR_16	equ	LABLE_GDT_FLAT_WR_16 - LABEL_GDT$/;"	d
SelectFlatWR_TEST	./loader.asm	/^	SelectFlatWR_TEST	equ	LABLE_GDT_FLAT_WR_TEST - LABEL_GDT$/;"	d
SelectFlatX	./loader.asm	/^	SelectFlatX	equ	LABLE_GDT_FLAT_X - LABEL_GDT$/;"	d
SelectFlatX_16	./loader.asm	/^	SelectFlatX_16	equ	LABLE_GDT_FLAT_X_16 - LABEL_GDT$/;"	d
SelectFlatX_162	./loader.asm	/^	SelectFlatX_162	equ	LABLE_GDT_FLAT_X_162 - LABEL_GDT$/;"	d
SelectVideo	./bits-demo-16.asm	/^SelectVideo     equ     $ - $\$$/;"	d
SelectVideo	./bits-demo.asm	/^SelectVideo	equ	$ - $\$$/;"	d
SelectVideo	./loader.asm	/^	SelectVideo	equ	LABLE_GDT_VIDEO - LABEL_GDT + 3$/;"	d
SelectorCode16	./pmtest2.asm	/^SelectorCode16		equ	LABEL_DESC_CODE16	- LABEL_GDT$/;"	d
SelectorCode32	./pmtest2.asm	/^SelectorCode32		equ	LABEL_DESC_CODE32	- LABEL_GDT$/;"	d
SelectorData	./pmtest2.asm	/^SelectorData		equ	LABEL_DESC_DATA		- LABEL_GDT$/;"	d
SelectorNormal	./pmtest2.asm	/^SelectorNormal		equ	LABEL_DESC_NORMAL	- LABEL_GDT$/;"	d
SelectorStack	./pmtest2.asm	/^SelectorStack		equ	LABEL_DESC_STACK	- LABEL_GDT$/;"	d
SelectorTest	./pmtest2.asm	/^SelectorTest		equ	LABEL_DESC_TEST		- LABEL_GDT$/;"	d
SelectorVideo	./pmtest2.asm	/^SelectorVideo		equ	LABEL_DESC_VIDEO	- LABEL_GDT$/;"	d
SmallerNumber	./experiment/foo.asm	/^SmallerNumber equ	23$/;"	d
Stack	./kernel.asm	/^Stack	resb	1024*2$/;"	l
StackTop	./kernel.asm	/^StackTop:$/;"	l
Str	./experiment/foo.asm	/^Str:	db	"Hello"$/;"	d
Str	./experiment/nasm_in_linux.asm	/^Str:	db	"Hello,World"$/;"	d
StrTest	./pmtest2.asm	/^StrTest:		db	"ABCDEFGHIJKLMNOPQRSTUVWXYZ", 0$/;"	d
Strcpy	./string.asm	/^Strcpy:$/;"	l
Strlen	./experiment/foo.asm	/^Strlen	dd	5$/;"	d
Strlen	./string.asm	/^Strlen:$/;"	l
T	./include/keymap.h	/^#define T	/;"	d
TAB	./include/keymap.h	/^#define TAB	/;"	d
TASK_FS_SIZE	./include/process.h	/^#define TASK_FS_SIZE /;"	d
TASK_HD_SIZE	./include/process.h	/^#define TASK_HD_SIZE /;"	d
TASK_PROC_NUM	./include/process.h	/^#define TASK_PROC_NUM /;"	d
TASK_SYS_SIZE	./include/process.h	/^#define TASK_SYS_SIZE /;"	d
TICKS_TASK_SYS_TYPE	./include/const.h	/^#define TICKS_TASK_SYS_TYPE /;"	d
TSS	./include/protect.h	/^}TSS;$/;"	t	typeref:struct:__anon6
TSS_SELECTOR	./include/const.h	/^#define TSS_SELECTOR /;"	d
TSS_SELECTOR	./kernel.asm	/^TSS_SELECTOR	equ	0x40$/;"	d
TSS_SELECTOR_INDEX	./include/const.h	/^#define TSS_SELECTOR_INDEX /;"	d
TTY	./include/console.h	/^}TTY;$/;"	t	typeref:struct:__anon2
TTY_BUF_SIZE	./include/console.h	/^#define TTY_BUF_SIZE /;"	d
TTY_NUM	./include/console.h	/^#define TTY_NUM /;"	d
Task	./include/process.h	/^}Task;$/;"	t	typeref:struct:__anon10
TaskHD	./hd.c	/^void TaskHD()$/;"	f
TaskSys	./main.c	/^void TaskSys()$/;"	f
TaskTTY	./main.c	/^void TaskTTY()$/;"	f
TaskTTY_STACK_SIZE	./include/process.h	/^#define TaskTTY_STACK_SIZE /;"	d
TestA	./main.c	/^void TestA()$/;"	f
TestB	./main.c	/^void TestB()$/;"	f
TestC	./main.c	/^void TestC()$/;"	f
TestRead	./pmtest2.asm	/^TestRead:$/;"	l
TestWrite	./pmtest2.asm	/^TestWrite:$/;"	l
TopOfStack	./pmtest2.asm	/^TopOfStack	equ	$ - LABEL_STACK - 1$/;"	d
U	./include/keymap.h	/^#define U	/;"	d
UP	./include/keymap.h	/^#define UP	/;"	d
USER_PROC_NUM	./include/process.h	/^#define USER_PROC_NUM /;"	d
V	./include/keymap.h	/^#define V	/;"	d
VM_BASE_ADDR	./include/console.h	/^#define VM_BASE_ADDR /;"	d
VM_TOTAL	./include/console.h	/^#define VM_TOTAL /;"	d
VirAddr2PhyAddr	./protect.c	/^unsigned int VirAddr2PhyAddr(unsigned int base, void *offset)$/;"	f
W	./include/keymap.h	/^#define W	/;"	d
X	./include/keymap.h	/^#define X	/;"	d
Y	./include/keymap.h	/^#define Y	/;"	d
Z	./include/keymap.h	/^#define Z	/;"	d
_NR_GET_TICKS	./syscall.asm	/^_NR_GET_TICKS	equ	0$/;"	d
_NR_RECEIVE_MSG	./include/const.h	/^#define _NR_RECEIVE_MSG	/;"	d
_NR_RECEIVE_MSG	./syscall.asm	/^_NR_RECEIVE_MSG	equ		4$/;"	d
_NR_SEND_MSG	./include/const.h	/^#define _NR_SEND_MSG	/;"	d
_NR_SEND_MSG	./syscall.asm	/^_NR_SEND_MSG	equ		3$/;"	d
_NR_WRITE	./include/const.h	/^#define _NR_WRITE	/;"	d
_NR_WRITE	./syscall.asm	/^_NR_WRITE	equ	1$/;"	d
_NR_WRITE_DEBUG	./include/const.h	/^#define _NR_WRITE_DEBUG	/;"	d
_NR_WRITE_DEBUG	./syscall.asm	/^_NR_WRITE_DEBUG	equ	2$/;"	d
_PEGASUS_OS_CONSOLE_H	./include/console.h	/^#define _PEGASUS_OS_CONSOLE_H$/;"	d
_PEGASUS_OS_CONST_H	./include/const.h	/^#define _PEGASUS_OS_CONST_H$/;"	d
_PEGASUS_OS_KEYBOARD_H	./include/keyboard.h	/^#define _PEGASUS_OS_KEYBOARD_H$/;"	d
_PEGASUS_OS_PROCESS_H	./include/process.h	/^#define _PEGASUS_OS_PROCESS_H$/;"	d
_PEGASUS_OS_PROTECT_H	./include/protect.h	/^#define _PEGASUS_OS_PROTECT_H$/;"	d
_PEGASUS_OS_PROTO_H	./include/proto.h	/^#define _PEGASUS_OS_PROTO_H$/;"	d
_PEGASUS_OS_STDIO_H	./include/stdio.h	/^#define _PEGASUS_OS_STDIO_H$/;"	d
_PEGASUS_OS_STRING_H	./include/string.h	/^#define _PEGASUS_OS_STRING_H$/;"	d
_displayStr	./experiment/foo.asm	/^_displayStr:$/;"	l
_start	./experiment/foo.asm	/^_start:$/;"	l
_start	./experiment/nasm_in_linux.asm	/^_start:$/;"	l
_start	./kernel.asm	/^_start:$/;"	l
age	./experiment/c/point.c	/^	int age;$/;"	m	struct:Person	file:
align_check_fault	./kernel.asm	/^align_check_fault:$/;"	l
arr	./generate_constant.php	/^$arr = [$/;"	v
arr2	./generate_constant.php	/^$arr2 = [];$/;"	v
arr3	./generate_constant.php	/^$arr3 = array_unique($arr2);$/;"	v
assert	./experiment/c/assert-demo.c	/^#define assert(/;"	d	file:
assert	./include/stdio.h	/^#define assert(/;"	d
assertion_failure	./experiment/c/assert-demo.c	/^void assertion_failure(char *exp, char *file, char *base_file, int line)$/;"	f
assertion_failure	./main.c	/^void assertion_failure(char *exp, char *filename, char *base_filename, unsigned int line)$/;"	f
atoi	./main.c	/^void atoi(char *str, int num)$/;"	f
block	./main.c	/^int block(Proc *proc)$/;"	f
bound_range_exceeded_fault	./kernel.asm	/^bound_range_exceeded_fault:$/;"	l
breakpoint_trap	./kernel.asm	/^breakpoint_trap:$/;"	l
buf	./include/console.h	/^	unsigned int buf[TTY_BUF_SIZE];$/;"	m	struct:__anon2
buf	./include/keyboard.h	/^	unsigned char buf[KEYBOARD_BUF_SIZE];$/;"	m	struct:__anon3
c	./experiment/c/var.c	/^int c = 0;$/;"	v
ch	./generate_constant.php	/^	$ch = $v[0];$/;"	v
check_tss_esp0	./kernel.asm	/^check_tss_esp0:$/;"	l
choose	./experiment/bar.c	/^int choose(int a, int b)$/;"	f
cld	./test/boot.asm	/^cld$/;"	l
clock_handler	./process.c	/^void clock_handler()$/;"	f
console	./include/console.h	/^	CONSOLE *console;$/;"	m	struct:__anon2
console_table	./include/console.h	/^CONSOLE console_table[TTY_NUM];$/;"	v
content	./tool.php	/^$content = file_get_contents('main.c');$/;"	v
coprocessor_error_fault	./kernel.asm	/^coprocessor_error_fault:$/;"	l
coprocessor_not_available_fault	./kernel.asm	/^coprocessor_not_available_fault:$/;"	l
coprocessor_segment_overrun	./kernel.asm	/^coprocessor_segment_overrun:$/;"	l
counter	./generate_constant.php	/^$counter = 1;$/;"	v
counter	./include/console.h	/^	unsigned int counter;$/;"	m	struct:__anon2
counter	./include/keyboard.h	/^	int counter;$/;"	m	struct:__anon3
counter	./include/proto.h	/^unsigned int counter;$/;"	v
cr3	./include/protect.h	/^        unsigned int cr3;$/;"	m	struct:__anon6
cs	./include/process.h	/^        unsigned int cs;$/;"	m	struct:__anon7
cs	./include/protect.h	/^        unsigned int cs;$/;"	m	struct:__anon6
csinit	./kernel.asm	/^csinit:$/;"	l
current_tty	./include/console.h	/^TTY *current_tty;$/;"	v
cursor	./include/console.h	/^	unsigned int cursor;$/;"	m	struct:__anon1
dead_lock	./main.c	/^int dead_lock(int src, int dest)$/;"	f
delay	./main.c	/^void delay(int time)$/;"	f
dis_pos	./experiment/disp_str_colour/test.c	/^int dis_pos;$/;"	v
dis_pos	./include/proto.h	/^int dis_pos;$/;"	v
disable_8259A_casecade_irq	./kernel.asm	/^disable_8259A_casecade_irq:$/;"	l
disable_8259A_slave_winchester_irq	./kernel.asm	/^disable_8259A_slave_winchester_irq:$/;"	l
disable_int	./kernel.asm	/^disable_int:$/;"	l
disp_int	./main.c	/^void disp_int(int num)$/;"	f
disp_str	./kernel.asm	/^disp_str:$/;"	l
disp_str_colour	./experiment/disp_str_colour/disp_str.asm	/^disp_str_colour:$/;"	l
disp_str_colour	./kernel.asm	/^disp_str_colour:$/;"	l
disp_str_colour3	./main.c	/^void disp_str_colour3(char *str, int colour)$/;"	f
divide_zero_fault	./kernel.asm	/^divide_zero_fault:$/;"	l
double_fault_exception_abort	./kernel.asm	/^double_fault_exception_abort:$/;"	l
ds	./include/process.h	/^        unsigned int ds;$/;"	m	struct:__anon7
ds	./include/protect.h	/^        unsigned int ds;$/;"	m	struct:__anon6
dump_node	./experiment/c/struct-demo.c	/^void dump_node(struct Node *node)$/;"	f
dw	./boot.asm	/^dw	0xAA55$/;"	l
dw	./experiment/boot.asm	/^dw	0xaa55				;$/;"	l
dw	./test/boot.asm	/^dw	0xAA55$/;"	l
dw	./test/experiment/boot.asm	/^dw	0xaa55				;$/;"	l
eax	./include/process.h	/^        unsigned int eax;$/;"	m	struct:__anon7
eax	./include/protect.h	/^        unsigned int eax;$/;"	m	struct:__anon6
ebp	./include/process.h	/^        unsigned int ebp;$/;"	m	struct:__anon7
ebp	./include/protect.h	/^        unsigned int ebp;$/;"	m	struct:__anon6
ebx	./include/process.h	/^        unsigned int ebx;$/;"	m	struct:__anon7
ebx	./include/protect.h	/^        unsigned int ebx;$/;"	m	struct:__anon6
ecx	./include/process.h	/^        unsigned int ecx;$/;"	m	struct:__anon7
ecx	./include/protect.h	/^        unsigned int ecx;$/;"	m	struct:__anon6
edi	./include/process.h	/^        unsigned int edi;$/;"	m	struct:__anon7
edi	./include/protect.h	/^        unsigned int edi;$/;"	m	struct:__anon6
edx	./include/process.h	/^        unsigned int edx;$/;"	m	struct:__anon7
edx	./include/protect.h	/^        unsigned int edx;$/;"	m	struct:__anon6
eflags	./include/process.h	/^        unsigned int eflags;$/;"	m	struct:__anon7
eflags	./include/protect.h	/^        unsigned int eflags;$/;"	m	struct:__anon6
eip	./include/process.h	/^        unsigned int eip;$/;"	m	struct:__anon7
eip	./include/protect.h	/^        unsigned int eip;$/;"	m	struct:__anon6
enable_8259A_casecade_irq	./kernel.asm	/^enable_8259A_casecade_irq:$/;"	l
enable_8259A_slave_winchester_irq	./kernel.asm	/^enable_8259A_slave_winchester_irq:$/;"	l
enable_int	./kernel.asm	/^enable_int:$/;"	l
es	./include/process.h	/^        unsigned int es;$/;"	m	struct:__anon7
es	./include/protect.h	/^        unsigned int es;$/;"	m	struct:__anon6
esi	./include/process.h	/^        unsigned int esi;$/;"	m	struct:__anon7
esi	./include/protect.h	/^        unsigned int esi;$/;"	m	struct:__anon6
esp	./include/process.h	/^        unsigned int esp;       \/\/ 漏掉了这个。iretd会出栈更新esp。$/;"	m	struct:__anon7
esp	./include/protect.h	/^        unsigned int esp;$/;"	m	struct:__anon6
esp0	./include/protect.h	/^        unsigned int esp0;$/;"	m	struct:__anon6
esp1	./include/protect.h	/^        unsigned int esp1;$/;"	m	struct:__anon6
esp2	./include/protect.h	/^        unsigned int esp2;$/;"	m	struct:__anon6
exception	./kernel.asm	/^exception:$/;"	l
exception_handler	./main.c	/^void exception_handler(int vec_no, int error_no, int eip, int cs, int eflags)$/;"	f
extern	./experiment/disp_str_colour/disp_str.asm	/^extern dis_pos$/;"	l
extern	./experiment/foo.asm	/^extern choose$/;"	l
extern	./kernel.asm	/^extern ReloadGDT$/;"	l
extern	./kernel.asm	/^extern clock_handler$/;"	l
extern	./kernel.asm	/^extern dis_pos$/;"	l
extern	./kernel.asm	/^extern disp_int$/;"	l
extern	./kernel.asm	/^extern exception_handler$/;"	l
extern	./kernel.asm	/^extern gdt_ptr$/;"	l
extern	./kernel.asm	/^extern hd_handle$/;"	l
extern	./kernel.asm	/^extern idt_ptr$/;"	l
extern	./kernel.asm	/^extern k_reenter$/;"	l
extern	./kernel.asm	/^extern kernel_main$/;"	l
extern	./kernel.asm	/^extern keyboard_handler$/;"	l
extern	./kernel.asm	/^extern proc_ready_table$/;"	l
extern	./kernel.asm	/^extern proc_table$/;"	l
extern	./kernel.asm	/^extern spurious_irq$/;"	l
extern	./kernel.asm	/^extern sys_call_table$/;"	l
extern	./kernel.asm	/^extern test$/;"	l
extern	./kernel.asm	/^extern ticks$/;"	l
extern	./kernel.asm	/^extern tss$/;"	l
f	./test/Makefile	/^	dd if=boot.bin of=a.img count=1 conv=notrunc$/;"	m
flush	./console.c	/^void flush(TTY *tty)$/;"	f
fs	./include/process.h	/^        unsigned int fs;$/;"	m	struct:__anon7
fs	./include/protect.h	/^        unsigned int fs;$/;"	m	struct:__anon6
func	./experiment/c/arr.c	/^void func()$/;"	f
func	./experiment/c/arr.s	/^func:$/;"	l
func_name	./include/process.h	/^        Func func_name;$/;"	m	struct:__anon10
gdt	./include/protect.h	/^Descriptor gdt[128];$/;"	v
gdt_ptr	./include/protect.h	/^unsigned char gdt_ptr[6];$/;"	v
gdt_ptr2	./t.c	/^char gdt_ptr2[6];$/;"	v
general_protection_exception_fault	./kernel.asm	/^general_protection_exception_fault:$/;"	l
get_ticks	./syscall.asm	/^get_ticks:$/;"	l
get_ticks_ipc	./main.c	/^int get_ticks_ipc()$/;"	f
global	./experiment/disp_str_colour/disp_str.asm	/^global disp_str_colour$/;"	l
global	./experiment/foo.asm	/^global _displayStr$/;"	l
global	./experiment/foo.asm	/^global _start$/;"	l
global	./experiment/nasm_in_linux.asm	/^global _start$/;"	l
global	./kernel.asm	/^global InterruptTest$/;"	l
global	./kernel.asm	/^global _start$/;"	l
global	./kernel.asm	/^global align_check_fault$/;"	l
global	./kernel.asm	/^global bound_range_exceeded_fault$/;"	l
global	./kernel.asm	/^global breakpoint_trap$/;"	l
global	./kernel.asm	/^global coprocessor_error_fault$/;"	l
global	./kernel.asm	/^global coprocessor_not_available_fault$/;"	l
global	./kernel.asm	/^global coprocessor_segment_overrun$/;"	l
global	./kernel.asm	/^global disable_8259A_casecade_irq$/;"	l
global	./kernel.asm	/^global disable_8259A_slave_winchester_irq$/;"	l
global	./kernel.asm	/^global disable_int:$/;"	l
global	./kernel.asm	/^global disp_str$/;"	l
global	./kernel.asm	/^global disp_str_colour$/;"	l
global	./kernel.asm	/^global divide_zero_fault$/;"	l
global	./kernel.asm	/^global double_fault_exception_abort$/;"	l
global	./kernel.asm	/^global enable_8259A_casecade_irq$/;"	l
global	./kernel.asm	/^global enable_8259A_slave_winchester_irq$/;"	l
global	./kernel.asm	/^global enable_int$/;"	l
global	./kernel.asm	/^global general_protection_exception_fault$/;"	l
global	./kernel.asm	/^global hwint0$/;"	l
global	./kernel.asm	/^global hwint1$/;"	l
global	./kernel.asm	/^global hwint14$/;"	l
global	./kernel.asm	/^global in_byte$/;"	l
global	./kernel.asm	/^global invalid_opcode_fault$/;"	l
global	./kernel.asm	/^global invalid_task_state_segment_fault$/;"	l
global	./kernel.asm	/^global non_maskable_interrupt$/;"	l
global	./kernel.asm	/^global out_byte$/;"	l
global	./kernel.asm	/^global overflow_trap$/;"	l
global	./kernel.asm	/^global page_fault$/;"	l
global	./kernel.asm	/^global restart$/;"	l
global	./kernel.asm	/^global segment_not_present_fault$/;"	l
global	./kernel.asm	/^global simd_float_exception_fault$/;"	l
global	./kernel.asm	/^global single_step_fault$/;"	l
global	./kernel.asm	/^global stack_exception_fault$/;"	l
global	./kernel.asm	/^global sys_call$/;"	l
global	./string.asm	/^global Memcpy$/;"	l
global	./string.asm	/^global Memset$/;"	l
global	./string.asm	/^global Strcpy$/;"	l
global	./string.asm	/^global Strlen$/;"	l
global	./syscall.asm	/^global get_ticks$/;"	l
global	./syscall.asm	/^global receive_msg$/;"	l
global	./syscall.asm	/^global send_msg$/;"	l
global	./syscall.asm	/^global write$/;"	l
global	./syscall.asm	/^global write_debug$/;"	l
gs	./include/process.h	/^        unsigned int gs;$/;"	m	struct:__anon7
gs	./include/protect.h	/^        unsigned int gs;$/;"	m	struct:__anon6
hd_handle	./hd.c	/^void hd_handle()$/;"	f
head	./include/console.h	/^	unsigned int *head;$/;"	m	struct:__anon2
head	./include/keyboard.h	/^	unsigned char *head;$/;"	m	struct:__anon3
header	./include/process.h	/^        struct MsgSender *header;       \/\/ 要给本进程发送消息的进程的队列的头指针$/;"	m	struct:__anon9	typeref:struct:__anon9::MsgSender
hwint0	./kernel.asm	/^hwint0:$/;"	l
hwint1	./kernel.asm	/^hwint1:$/;"	l
hwint14	./kernel.asm	/^hwint14:$/;"	l
i2a	./main.c	/^char* i2a(int val, int base, char ** ps)$/;"	f
idt	./include/protect.h	/^Gate idt[256];$/;"	v
idt_ptr	./include/protect.h	/^unsigned char idt_ptr[6];$/;"	v
in_byte	./kernel.asm	/^in_byte:$/;"	l
in_byte2	./kernel.asm	/^in_byte2:$/;"	l
in_process	./keyboard.c	/^void in_process(TTY *tty, unsigned int key)$/;"	f
inc	./boot.asm	/^	inc di$/;"	d
inc	./boot.asm	/^	inc dx$/;"	d
inc	./loader-error.asm	/^	inc di$/;"	d
inc	./loader-error.asm	/^	inc dx$/;"	d
inc	./loader.asm	/^	inc di$/;"	d
inc	./loader.asm	/^	inc dx$/;"	d
init_hd	./hd.c	/^void init_hd()$/;"	f
init_internal_interrupt	./main.c	/^void init_internal_interrupt()$/;"	f
init_keyboard_handler	./keyboard.c	/^void init_keyboard_handler()$/;"	f
init_propt	./protect.c	/^void init_propt()$/;"	f
init_screen	./console.c	/^void init_screen(TTY *tty)$/;"	f
init_tty	./console.c	/^void init_tty()$/;"	f
int_handle	./include/protect.h	/^typedef void (*int_handle) ();$/;"	t
invalid_opcode_fault	./kernel.asm	/^invalid_opcode_fault:$/;"	l
invalid_task_state_segment_fault	./kernel.asm	/^invalid_task_state_segment_fault:$/;"	l
io_delay	./loader.asm	/^io_delay:$/;"	l
iobase	./include/protect.h	/^        unsigned int iobase;$/;"	m	struct:__anon6
is_disp	./include/keyboard.h	/^unsigned char is_disp;$/;"	v
is_e0	./include/keyboard.h	/^unsigned char is_e0;$/;"	v
is_shift	./include/keyboard.h	/^unsigned char is_shift;$/;"	v
itoa	./main.c	/^char *itoa(int value, char **str, int base)$/;"	f
jmp	./bits-demo-16.asm	/^jmp \$$/;"	l
jmp	./bits-demo.asm	/^jmp \$$/;"	l
jmp	./t2.asm	/^jmp \$$/;"	l
k_reenter	./include/proto.h	/^unsigned int k_reenter;$/;"	v
kernel_esp	./include/process.h	/^        unsigned int kernel_esp;$/;"	m	struct:__anon7
kernel_main	./main.c	/^void kernel_main()$/;"	f
keyboard_buffer	./include/keyboard.h	/^KeyboardBuffer keyboard_buffer;$/;"	v
keyboard_handler	./keyboard.c	/^void keyboard_handler()$/;"	f
keyboard_read	./keyboard.c	/^void keyboard_read(TTY *tty)$/;"	f
keymap	./include/keymap.h	/^unsigned int keymap[NR_SCAN_CODES * MAP_COLS] = {$/;"	v
last_tss_ptr	./include/protect.h	/^        unsigned int last_tss_ptr;$/;"	m	struct:__anon6
ldt	./include/protect.h	/^        unsigned int ldt;$/;"	m	struct:__anon6
ldt_selector	./include/process.h	/^        unsigned short ldt_selector;$/;"	m	struct:__anon9
ldts	./include/process.h	/^        Descriptor ldts[2];$/;"	m	struct:__anon9
main	./experiment/c/array.c	/^int main(int argc, char **argv)$/;"	f
main	./experiment/c/assert-demo.c	/^int main(int argc, char **argv)$/;"	f
main	./experiment/c/bool-condition.c	/^int main(int argc, char **argv)$/;"	f
main	./experiment/c/char-overflow.c	/^int main(int argc, char **argv)$/;"	f
main	./experiment/c/magic-constant.c	/^int main(int argc, char **argv)$/;"	f
main	./experiment/c/point.c	/^int main(int argc, char **argv)$/;"	f
main	./experiment/c/ptr-str.c	/^int main(int argc, char **argv)$/;"	f
main	./experiment/c/ptr-str2.c	/^int main(int argc, char **argv)$/;"	f
main	./experiment/c/struct-demo.c	/^int main(int argc, char **argv)$/;"	f
main	./experiment/c/var.c	/^int main(int argc, char **argv)$/;"	f
main	./experiment/c/var_list.c	/^int main(int argc, char **argv)$/;"	f
main	./experiment/disp_str_colour/test.c	/^int main(void)$/;"	f
main	./t.c	/^int main(void)$/;"	f
milli_delay	./main.c	/^void milli_delay(unsigned int milli_sec)$/;"	f
mov	./bits-demo-16.asm	/^mov ax, 3$/;"	l
mov	./bits-demo-16.asm	/^mov cx, 1$/;"	l
mov	./bits-demo.asm	/^mov ax, 3$/;"	l
mov	./bits-demo.asm	/^mov cx, 1$/;"	l
mov	./t2.asm	/^mov ax, 'C'$/;"	l
mov	./t2.asm	/^mov ax, 9$/;"	l
mov	./t2.asm	/^mov cx, 1$/;"	l
mov	./t2.asm	/^mov cx, 2$/;"	l
mov	./t2.asm	/^mov dx, 10$/;"	l
mov	./t2.asm	/^mov dx, 12$/;"	l
mov	./t3.asm	/^mov	ds,	ax$/;"	l
mov	./t3.asm	/^mov     ax,     cs$/;"	l
mov	./test.asm	/^mov ax, 5$/;"	l
mov	./test/boot.asm	/^mov ax, 0xB800$/;"	l
mov	./test/boot.asm	/^mov ax, cs$/;"	l
mov	./test/boot.asm	/^mov cx, 0$/;"	l
mov	./test/boot.asm	/^mov di, (80 * 20 + 20) * 2$/;"	l
mov	./test/boot.asm	/^mov ds, ax$/;"	l
mov	./test/boot.asm	/^mov es, ax$/;"	l
mov	./test/boot.asm	/^mov gs, ax$/;"	l
mov	./test/boot.asm	/^mov si, BootMessage$/;"	l
msg1	./kernel.asm	/^msg1	db	"esp:", "$"$/;"	d
msg2	./kernel.asm	/^msg2	db	"tss.esp0:", "$"$/;"	d
name	./experiment/c/struct-demo.c	/^	char name[20];$/;"	m	struct:Node	file:
name	./include/process.h	/^        char name[20];$/;"	m	struct:__anon9
next	./experiment/c/point.c	/^	struct Person *next;$/;"	m	struct:Person	typeref:struct:Person::Person	file:
next	./experiment/c/struct-demo.c	/^	struct Node *next;$/;"	m	struct:Node	typeref:struct:Node::Node	file:
next	./include/process.h	/^        struct MsgSender *next;$/;"	m	struct:MsgSender	typeref:struct:MsgSender::MsgSender
non_maskable_interrupt	./kernel.asm	/^non_maskable_interrupt:$/;"	l
offset_below	./include/protect.h	/^        unsigned short offset_below;$/;"	m	struct:__anon5
offset_high	./include/protect.h	/^        unsigned short offset_high;$/;"	m	struct:__anon5
org	./boot.asm	/^org 0x7c00$/;"	l
org	./kernel2.asm	/^org	0100h$/;"	l
org	./loader-error.asm	/^org	0100h$/;"	l
org	./loader.asm	/^org	0100h$/;"	l
org	./pmtest2.asm	/^org	0100h$/;"	l
org	./test/boot.asm	/^org 0x7c00$/;"	l
org	./test/loader.asm	/^org	0100h$/;"	l
original_addr	./include/console.h	/^	unsigned int original_addr;$/;"	m	struct:__anon1
out_byte	./kernel.asm	/^out_byte:$/;"	l
out_char	./console.c	/^void out_char(TTY *tty, unsigned char key)$/;"	f
overflow_trap	./kernel.asm	/^overflow_trap:$/;"	l
p_flag	./include/process.h	/^        unsigned char p_flag;           \/\/ 进程的状态：RUNNING等$/;"	m	struct:__anon9
p_msg	./include/process.h	/^        Message *p_msg; \/\/ 指向消息体$/;"	m	struct:__anon9
p_receive_from	./include/process.h	/^        int p_receive_from;     \/\/ 要从哪个进程接收消息，目标进程ID$/;"	m	struct:__anon9
p_send_to	./include/process.h	/^        int p_send_to;  \/\/ 要向哪个进程发送消息，目标进程ID$/;"	m	struct:__anon9
page_fault	./kernel.asm	/^page_fault:$/;"	l
panic	./main.c	/^void panic(char *error_msg)$/;"	f
paramCount	./include/protect.h	/^        unsigned char paramCount;$/;"	m	struct:__anon5
phycopy	./include/string.h	/^#define phycopy /;"	d
pid	./include/process.h	/^        unsigned int pid;$/;"	m	struct:__anon9
pid2proc	./process.c	/^Proc *pid2proc(int pid)$/;"	f
pop	./boot.asm	/^	pop ds	$/;"	d
pop	./boot.asm	/^	pop dx$/;"	d
pop	./kernel.asm	/^	pop ds$/;"	d
pop	./loader-error.asm	/^	pop di$/;"	d
pop	./loader-error.asm	/^	pop ds	$/;"	d
pop	./loader-error.asm	/^	pop dx$/;"	d
pop	./loader.asm	/^	pop ds	$/;"	d
pop	./loader.asm	/^	pop dx$/;"	d
printx	./main.c	/^void printx(char *fmt, ...)$/;"	f
priority	./include/process.h	/^        unsigned int priority;$/;"	m	struct:__anon9
proc2pid	./process.c	/^int proc2pid(Proc *proc)$/;"	f
proc_stack	./include/process.h	/^int proc_stack[STACK_SIZE];$/;"	v
proc_table	./include/process.h	/^Proc proc_table[TASK_PROC_NUM + USER_PROC_NUM];$/;"	v
push	./boot.asm	/^	push ds$/;"	d
push	./boot.asm	/^	push dx$/;"	d
push	./kernel.asm	/^	push ds$/;"	d
push	./loader-error.asm	/^	push di$/;"	d
push	./loader-error.asm	/^	push ds$/;"	d
push	./loader-error.asm	/^	push dx$/;"	d
push	./loader.asm	/^	push ds$/;"	d
push	./loader.asm	/^	push dx$/;"	d
put_key	./console.c	/^void put_key(TTY *tty, unsigned char key)$/;"	f
read_from_keyboard_buf	./keyboard.c	/^unsigned char read_from_keyboard_buf()$/;"	f
receive_msg	./syscall.asm	/^receive_msg:$/;"	l
reenter_restore	./kernel.asm	/^reenter_restore:$/;"	l
restart	./kernel.asm	/^restart:$/;"	l
restore	./kernel.asm	/^restore:$/;"	l
s_reg	./include/process.h	/^        Regs s_reg;$/;"	m	struct:__anon9
schedule_process	./process.c	/^void schedule_process()$/;"	f
scroll_down	./console.c	/^void scroll_down(TTY *tty)$/;"	f
scroll_up	./console.c	/^void scroll_up(TTY *tty)$/;"	f
seg_attr1	./include/protect.h	/^        unsigned char seg_attr1;$/;"	m	struct:__anon4
seg_base_below	./include/protect.h	/^        unsigned short seg_base_below;$/;"	m	struct:__anon4
seg_base_high	./include/protect.h	/^        unsigned char seg_base_high;$/;"	m	struct:__anon4
seg_base_middle	./include/protect.h	/^        unsigned char  seg_base_middle;$/;"	m	struct:__anon4
seg_limit_below	./include/protect.h	/^        unsigned short seg_limit_below;$/;"	m	struct:__anon4
seg_limit_high_and_attr2	./include/protect.h	/^        unsigned char seg_limit_high_and_attr2;$/;"	m	struct:__anon4
segment_not_present_fault	./kernel.asm	/^segment_not_present_fault:$/;"	l
select_console	./console.c	/^void select_console(unsigned char tty_index)$/;"	f
selector	./include/protect.h	/^        unsigned short selector;$/;"	m	struct:__anon5
send_msg	./syscall.asm	/^send_msg:$/;"	l
send_rec	./main.c	/^int send_rec(int function, Message *msg, int pid)$/;"	f
sender_pid	./include/process.h	/^        unsigned int sender_pid;$/;"	m	struct:MsgSender
set_console_start_video_addr	./console.c	/^void set_console_start_video_addr(unsigned int start_video_addr)$/;"	f
set_cursor	./console.c	/^void set_cursor(unsigned int cursor)$/;"	f
simd_float_exception_fault	./kernel.asm	/^simd_float_exception_fault:$/;"	l
single_step_fault	./kernel.asm	/^single_step_fault:$/;"	l
source	./include/process.h	/^        int source;             \/\/ 谁发送的消息$/;"	m	struct:__anon8
spin	./main.c	/^void spin(char *error_msg)$/;"	f
spurious_irq	./main.c	/^void spurious_irq(int irq)$/;"	f
ss	./include/process.h	/^        unsigned int ss;$/;"	m	struct:__anon7
ss	./include/protect.h	/^        unsigned int ss;$/;"	m	struct:__anon6
ss0	./include/protect.h	/^        unsigned int ss0;$/;"	m	struct:__anon6
ss1	./include/protect.h	/^        unsigned int ss1;$/;"	m	struct:__anon6
ss2	./include/protect.h	/^        unsigned int ss2;$/;"	m	struct:__anon6
stack_exception_fault	./kernel.asm	/^stack_exception_fault:$/;"	l
stack_size	./include/process.h	/^        unsigned short stack_size;$/;"	m	struct:__anon10
start_video_addr	./include/console.h	/^	unsigned int start_video_addr;$/;"	m	struct:__anon1
sys_call	./kernel.asm	/^sys_call:$/;"	l
sys_call_table	./include/process.h	/^int_handle sys_call_table[SYS_CALL_FUNCTION_NUM] = {$/;"	v
sys_get_ticks	./main.c	/^int sys_get_ticks()$/;"	f
sys_printx	./main.c	/^void sys_printx(char *error_msg, int len, Proc *proc)$/;"	f
sys_receive_msg	./main.c	/^int sys_receive_msg(Message *msg, int sender_pid, Proc *receiver)$/;"	f
sys_send_msg	./main.c	/^int sys_send_msg(Message *msg, int receiver_pid, Proc *sender)$/;"	f
sys_task_table	./include/process.h	/^Task sys_task_table[TASK_PROC_NUM] = {$/;"	v
sys_write	./main.c	/^void sys_write(char *buf, int len, Proc *proc)$/;"	f
system_call	./include/process.h	/^typedef void *system_call;$/;"	t
tail	./include/console.h	/^	unsigned int *tail;$/;"	m	struct:__anon2
tail	./include/keyboard.h	/^	unsigned char *tail;$/;"	m	struct:__anon3
task_fs	./fs/fs_main.c	/^void task_fs()$/;"	f
test	./experiment/c/var_list.c	/^void test(char *fmt, ...)$/;"	f
test	./main.c	/^void test()$/;"	f
test2	./experiment/c/var_list.c	/^void test2(const char *fmt, char *var_list)$/;"	f
ticks	./include/process.h	/^        unsigned int ticks;$/;"	m	struct:__anon9
ticks	./include/proto.h	/^unsigned int ticks;$/;"	v
times	./boot.asm	/^times	510 - ($ - $$)	db	0$/;"	l
times	./experiment/boot.asm	/^times	510-($-$$)	db	0	;$/;"	l
times	./test/boot.asm	/^times	510 - ($ - $$)	db	0$/;"	l
times	./test/experiment/boot.asm	/^times	510-($-$$)	db	0	;$/;"	l
trace	./include/protect.h	/^        unsigned int trace;$/;"	m	struct:__anon6
traverse	./experiment/c/struct-demo.c	/^void traverse(struct Node *node)$/;"	f
tss	./include/protect.h	/^TSS tss;$/;"	v
tty_do_read	./console.c	/^void tty_do_read(TTY *tty)$/;"	f
tty_do_write	./console.c	/^void tty_do_write(TTY *tty)$/;"	f
tty_index	./include/process.h	/^        unsigned int tty_index;$/;"	m	struct:__anon9
tty_table	./include/console.h	/^TTY tty_table[TTY_NUM];$/;"	v
type	./include/process.h	/^        int type;               \/\/ 这条消息要求接收者做什么。例如，获取时钟中断次数。$/;"	m	struct:__anon8
type_other_attribute	./include/protect.h	/^        unsigned char type_other_attribute;$/;"	m	struct:__anon5
unblock	./main.c	/^int unblock(Proc *proc)$/;"	f
user_task_table	./include/process.h	/^Task user_task_table[USER_PROC_NUM] = {$/;"	v
val	./experiment/c/struct-demo.c	/^	int val;$/;"	m	struct:Node	file:
val	./include/process.h	/^        int val;                \/\/ 消息中的数据。$/;"	m	struct:__anon8
vm_limit	./include/console.h	/^	unsigned int vm_limit;$/;"	m	struct:__anon1
vsprintf	./main.c	/^int vsprintf(char *buf, char *fmt, char *var_list)$/;"	f
write	./syscall.asm	/^write:$/;"	l
write_debug	./syscall.asm	/^write_debug:$/;"	l
